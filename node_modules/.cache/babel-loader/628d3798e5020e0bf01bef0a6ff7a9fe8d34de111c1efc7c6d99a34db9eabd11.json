{"ast":null,"code":"// \n// 货币数据和工具函数\nconst currencies = {\n  rates: {},\n  symbols: {},\n  initialized: false\n};\n\n// 初始化函数\nasync function initCurrencies() {\n  if (currencies.initialized) return;\n  try {\n    const ratesResponse = await fetch('https://api.exchangerate-api.com/v4/latest/USD');\n    const symbolsResponse = await fetch('https://api.exchangerate-api.com/v4/latest/USD');\n    if (!ratesResponse.ok || !symbolsResponse.ok) {\n      throw new Error('API请求失败');\n    }\n    const ratesData = await ratesResponse.json();\n    currencies.rates = ratesData.rates;\n\n    // 设置常用货币符号\n    currencies.symbols = {\n      'USD': '$',\n      'EUR': '€',\n      'GBP': '£',\n      'JPY': '¥',\n      'CNY': '¥',\n      'AUD': 'A$',\n      'CAD': 'C$',\n      'CHF': 'Fr',\n      'HKD': 'HK$',\n      'NZD': 'NZ$'\n    };\n    currencies.initialized = true;\n\n    // 初始化货币选择下拉框\n    populateCurrencySelects();\n\n    // 设置默认值并执行首次转换\n    document.getElementById('amount').value = '1';\n    convertCurrency();\n  } catch (error) {\n    console.error('初始化货币数据失败:', error);\n    showError('无法加载货币数据，请稍后重试');\n  }\n}\n\n// 填充货币选择下拉框\nfunction populateCurrencySelects() {\n  const fromSelect = document.getElementById('fromCurrency');\n  const toSelect = document.getElementById('toCurrency');\n  Object.keys(currencies.rates).sort().forEach(currency => {\n    const symbol = currencies.symbols[currency] || '';\n    const optionText = `${currency} ${symbol}`.trim();\n    fromSelect.add(new Option(optionText, currency));\n    toSelect.add(new Option(optionText, currency));\n  });\n\n  // 设置默认值\n  fromSelect.value = 'USD';\n  toSelect.value = 'EUR';\n}\n\n// 转换货币\nasync function convertCurrency() {\n  const amount = parseFloat(document.getElementById('amount').value);\n  const fromCurrency = document.getElementById('fromCurrency').value;\n  const toCurrency = document.getElementById('toCurrency').value;\n  if (isNaN(amount)) {\n    showError('请输入有效的数字金额');\n    return;\n  }\n  try {\n    const response = await fetch(`https://api.exchangerate-api.com/v4/latest/${fromCurrency}`);\n    if (!response.ok) {\n      throw new Error('汇率获取失败');\n    }\n    const data = await response.json();\n    const rate = data.rates[toCurrency];\n    const result = amount * rate;\n    displayResult(amount, fromCurrency, toCurrency, result, rate);\n    updateHistoricalRates(fromCurrency, toCurrency);\n  } catch (error) {\n    console.error('转换失败:', error);\n    showError('货币转换失败，请稍后重试');\n  }\n}\n\n// 显示转换结果\nfunction displayResult(amount, fromCurrency, toCurrency, result, rate) {\n  const resultDiv = document.getElementById('result');\n  const fromSymbol = currencies.symbols[fromCurrency] || '';\n  const toSymbol = currencies.symbols[toCurrency] || '';\n  resultDiv.innerHTML = `\n      <h3>转换结果</h3>\n      <p>${amount} ${fromCurrency} ${fromSymbol} = </p>\n      <p class=\"converted-amount\">${toSymbol} ${result.toFixed(2)} ${toCurrency}</p>\n      <p class=\"rate-info\">1 ${fromCurrency} = ${rate.toFixed(4)} ${toCurrency}</p>\n  `;\n  resultDiv.classList.remove('error');\n}\n\n// 更新历史汇率图表\nasync function updateHistoricalRates(fromCurrency, toCurrency) {\n  try {\n    const response = await fetch(`https://api.exchangerate-api.com/v4/latest/${fromCurrency}`);\n    if (!response.ok) throw new Error('获取历史数据失败');\n    const data = await response.json();\n    const rate = data.rates[toCurrency];\n\n    // 模拟历史数据（由于API限制，使用模拟数据）\n    const dates = getLast7Days();\n    const rates = dates.map(() => rate * (0.95 + Math.random() * 0.1));\n    drawChart(dates, rates, fromCurrency, toCurrency);\n  } catch (error) {\n    console.error('更新历史汇率失败:', error);\n    document.getElementById('chart').innerHTML = '无法加载历史汇率数据';\n  }\n}\n\n// 获取过去7天的日期\nfunction getLast7Days() {\n  const dates = [];\n  for (let i = 6; i >= 0; i--) {\n    const date = new Date();\n    date.setDate(date.getDate() - i);\n    dates.push(date.toLocaleDateString());\n  }\n  return dates;\n}\n\n// 绘制图表\nfunction drawChart(dates, rates, fromCurrency, toCurrency) {\n  const ctx = document.getElementById('chart').getContext('2d');\n  if (window.rateChart) {\n    window.rateChart.destroy();\n  }\n  window.rateChart = new Chart(ctx, {\n    type: 'line',\n    data: {\n      labels: dates,\n      datasets: [{\n        label: `${fromCurrency} 到 ${toCurrency} 汇率趋势`,\n        data: rates,\n        borderColor: '#4CAF50',\n        backgroundColor: 'rgba(76, 175, 80, 0.1)',\n        tension: 0.4\n      }]\n    },\n    options: {\n      responsive: true,\n      plugins: {\n        legend: {\n          position: 'top'\n        },\n        title: {\n          display: true,\n          text: '7天汇率走势'\n        }\n      },\n      scales: {\n        y: {\n          beginAtZero: false\n        }\n      }\n    }\n  });\n}\n\n// 显示错误信息\nfunction showError(message) {\n  const resultDiv = document.getElementById('result');\n  resultDiv.innerHTML = `<p class=\"error-message\">${message}</p>`;\n  resultDiv.classList.add('error');\n}\n\n// 交换货币\nfunction swapCurrencies() {\n  const fromSelect = document.getElementById('fromCurrency');\n  const toSelect = document.getElementById('toCurrency');\n  const temp = fromSelect.value;\n  fromSelect.value = toSelect.value;\n  toSelect.value = temp;\n  convertCurrency();\n}\n\n// 监听输入变化\nfunction setupEventListeners() {\n  const inputs = ['amount', 'fromCurrency', 'toCurrency'];\n  inputs.forEach(id => {\n    document.getElementById(id).addEventListener('change', convertCurrency);\n  });\n  document.getElementById('amount').addEventListener('input', () => {\n    if (document.getElementById('amount').value) {\n      convertCurrency();\n    }\n  });\n  document.getElementById('swapButton').addEventListener('click', swapCurrencies);\n}\n\n// 初始化应用\ndocument.addEventListener('DOMContentLoaded', () => {\n  initCurrencies();\n  setupEventListeners();\n});","map":{"version":3,"names":["currencies","rates","symbols","initialized","initCurrencies","ratesResponse","fetch","symbolsResponse","ok","Error","ratesData","json","populateCurrencySelects","document","getElementById","value","convertCurrency","error","console","showError","fromSelect","toSelect","Object","keys","sort","forEach","currency","symbol","optionText","trim","add","Option","amount","parseFloat","fromCurrency","toCurrency","isNaN","response","data","rate","result","displayResult","updateHistoricalRates","resultDiv","fromSymbol","toSymbol","innerHTML","toFixed","classList","remove","dates","getLast7Days","map","Math","random","drawChart","i","date","Date","setDate","getDate","push","toLocaleDateString","ctx","getContext","window","rateChart","destroy","Chart","type","labels","datasets","label","borderColor","backgroundColor","tension","options","responsive","plugins","legend","position","title","display","text","scales","y","beginAtZero","message","swapCurrencies","temp","setupEventListeners","inputs","id","addEventListener"],"sources":["E:/Mini-project/src/App.js"],"sourcesContent":["// \n// 货币数据和工具函数\nconst currencies = {\n  rates: {},\n  symbols: {},\n  initialized: false\n};\n\n// 初始化函数\nasync function initCurrencies() {\n  if (currencies.initialized) return;\n\n  try {\n      const ratesResponse = await fetch('https://api.exchangerate-api.com/v4/latest/USD');\n      const symbolsResponse = await fetch('https://api.exchangerate-api.com/v4/latest/USD');\n      \n      if (!ratesResponse.ok || !symbolsResponse.ok) {\n          throw new Error('API请求失败');\n      }\n\n      const ratesData = await ratesResponse.json();\n      currencies.rates = ratesData.rates;\n      \n      // 设置常用货币符号\n      currencies.symbols = {\n          'USD': '$',\n          'EUR': '€',\n          'GBP': '£',\n          'JPY': '¥',\n          'CNY': '¥',\n          'AUD': 'A$',\n          'CAD': 'C$',\n          'CHF': 'Fr',\n          'HKD': 'HK$',\n          'NZD': 'NZ$'\n      };\n      \n      currencies.initialized = true;\n      \n      // 初始化货币选择下拉框\n      populateCurrencySelects();\n      \n      // 设置默认值并执行首次转换\n      document.getElementById('amount').value = '1';\n      convertCurrency();\n\n  } catch (error) {\n      console.error('初始化货币数据失败:', error);\n      showError('无法加载货币数据，请稍后重试');\n  }\n}\n\n// 填充货币选择下拉框\nfunction populateCurrencySelects() {\n  const fromSelect = document.getElementById('fromCurrency');\n  const toSelect = document.getElementById('toCurrency');\n  \n  Object.keys(currencies.rates).sort().forEach(currency => {\n      const symbol = currencies.symbols[currency] || '';\n      const optionText = `${currency} ${symbol}`.trim();\n      \n      fromSelect.add(new Option(optionText, currency));\n      toSelect.add(new Option(optionText, currency));\n  });\n\n  // 设置默认值\n  fromSelect.value = 'USD';\n  toSelect.value = 'EUR';\n}\n\n// 转换货币\nasync function convertCurrency() {\n  const amount = parseFloat(document.getElementById('amount').value);\n  const fromCurrency = document.getElementById('fromCurrency').value;\n  const toCurrency = document.getElementById('toCurrency').value;\n\n  if (isNaN(amount)) {\n      showError('请输入有效的数字金额');\n      return;\n  }\n\n  try {\n      const response = await fetch(`https://api.exchangerate-api.com/v4/latest/${fromCurrency}`);\n      if (!response.ok) {\n          throw new Error('汇率获取失败');\n      }\n\n      const data = await response.json();\n      const rate = data.rates[toCurrency];\n      const result = amount * rate;\n\n      displayResult(amount, fromCurrency, toCurrency, result, rate);\n      updateHistoricalRates(fromCurrency, toCurrency);\n      \n  } catch (error) {\n      console.error('转换失败:', error);\n      showError('货币转换失败，请稍后重试');\n  }\n}\n\n// 显示转换结果\nfunction displayResult(amount, fromCurrency, toCurrency, result, rate) {\n  const resultDiv = document.getElementById('result');\n  const fromSymbol = currencies.symbols[fromCurrency] || '';\n  const toSymbol = currencies.symbols[toCurrency] || '';\n  \n  resultDiv.innerHTML = `\n      <h3>转换结果</h3>\n      <p>${amount} ${fromCurrency} ${fromSymbol} = </p>\n      <p class=\"converted-amount\">${toSymbol} ${result.toFixed(2)} ${toCurrency}</p>\n      <p class=\"rate-info\">1 ${fromCurrency} = ${rate.toFixed(4)} ${toCurrency}</p>\n  `;\n  resultDiv.classList.remove('error');\n}\n\n// 更新历史汇率图表\nasync function updateHistoricalRates(fromCurrency, toCurrency) {\n  try {\n      const response = await fetch(`https://api.exchangerate-api.com/v4/latest/${fromCurrency}`);\n      if (!response.ok) throw new Error('获取历史数据失败');\n\n      const data = await response.json();\n      const rate = data.rates[toCurrency];\n\n      // 模拟历史数据（由于API限制，使用模拟数据）\n      const dates = getLast7Days();\n      const rates = dates.map(() => rate * (0.95 + Math.random() * 0.1));\n\n      drawChart(dates, rates, fromCurrency, toCurrency);\n      \n  } catch (error) {\n      console.error('更新历史汇率失败:', error);\n      document.getElementById('chart').innerHTML = '无法加载历史汇率数据';\n  }\n}\n\n// 获取过去7天的日期\nfunction getLast7Days() {\n  const dates = [];\n  for (let i = 6; i >= 0; i--) {\n      const date = new Date();\n      date.setDate(date.getDate() - i);\n      dates.push(date.toLocaleDateString());\n  }\n  return dates;\n}\n\n// 绘制图表\nfunction drawChart(dates, rates, fromCurrency, toCurrency) {\n  const ctx = document.getElementById('chart').getContext('2d');\n  \n  if (window.rateChart) {\n      window.rateChart.destroy();\n  }\n\n  window.rateChart = new Chart(ctx, {\n      type: 'line',\n      data: {\n          labels: dates,\n          datasets: [{\n              label: `${fromCurrency} 到 ${toCurrency} 汇率趋势`,\n              data: rates,\n              borderColor: '#4CAF50',\n              backgroundColor: 'rgba(76, 175, 80, 0.1)',\n              tension: 0.4\n          }]\n      },\n      options: {\n          responsive: true,\n          plugins: {\n              legend: {\n                  position: 'top',\n              },\n              title: {\n                  display: true,\n                  text: '7天汇率走势'\n              }\n          },\n          scales: {\n              y: {\n                  beginAtZero: false\n              }\n          }\n      }\n  });\n}\n\n// 显示错误信息\nfunction showError(message) {\n  const resultDiv = document.getElementById('result');\n  resultDiv.innerHTML = `<p class=\"error-message\">${message}</p>`;\n  resultDiv.classList.add('error');\n}\n\n// 交换货币\nfunction swapCurrencies() {\n  const fromSelect = document.getElementById('fromCurrency');\n  const toSelect = document.getElementById('toCurrency');\n  \n  const temp = fromSelect.value;\n  fromSelect.value = toSelect.value;\n  toSelect.value = temp;\n  \n  convertCurrency();\n}\n\n// 监听输入变化\nfunction setupEventListeners() {\n  const inputs = ['amount', 'fromCurrency', 'toCurrency'];\n  inputs.forEach(id => {\n      document.getElementById(id).addEventListener('change', convertCurrency);\n  });\n\n  document.getElementById('amount').addEventListener('input', () => {\n      if (document.getElementById('amount').value) {\n          convertCurrency();\n      }\n  });\n\n  document.getElementById('swapButton').addEventListener('click', swapCurrencies);\n}\n\n// 初始化应用\ndocument.addEventListener('DOMContentLoaded', () => {\n  initCurrencies();\n  setupEventListeners();\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}