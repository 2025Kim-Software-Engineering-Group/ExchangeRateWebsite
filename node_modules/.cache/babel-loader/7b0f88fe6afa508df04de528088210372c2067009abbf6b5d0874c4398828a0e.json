{"ast":null,"code":"var _jsxFileName = \"E:\\\\Mini-project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { translations } from './translations';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nexport default function App() {\n  _s();\n  const [fromCurrency, setFromCurrency] = useState('USD');\n  const [toCurrency, setToCurrency] = useState('EUR');\n  const [amount, setAmount] = useState(1);\n  const [exchangeRate, setExchangeRate] = useState(null);\n  const [lastUpdated, setLastUpdated] = useState('');\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]);\n  const [historicalRates, setHistoricalRates] = useState([]);\n  const [fromInput, setFromInput] = useState('USD');\n  const [toInput, setToInput] = useState('EUR');\n  const [showFromDropdown, setShowFromDropdown] = useState(false);\n  const [showToDropdown, setShowToDropdown] = useState(false);\n  const [currentLanguage, setCurrentLanguage] = useState('en');\n  const [currencyRates, setCurrencyRates] = useState({});\n  const t = translations[currentLanguage];\n  const currencies = ['USD', 'EUR', 'GBP', 'JPY', 'AUD', 'CAD', 'CHF', 'CNY', 'HKD', 'NZD', 'AED', 'INR', 'SGD', 'MXN', 'BRL'];\n  const fromDropdownRef = useRef(null);\n  const toDropdownRef = useRef(null);\n  const handleExchange = () => {\n    const tempCurrency = fromCurrency;\n    const tempInput = fromInput;\n    setFromCurrency(toCurrency);\n    setFromInput(toCurrency);\n    setToCurrency(tempCurrency);\n    setToInput(tempInput);\n  };\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (fromDropdownRef.current && !fromDropdownRef.current.contains(event.target)) {\n        setShowFromDropdown(false);\n      }\n      if (toDropdownRef.current && !toDropdownRef.current.contains(event.target)) {\n        setShowToDropdown(false);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n  useEffect(() => {\n    fetchExchangeRate();\n    fetchHistoricalRates();\n    fetchAllRates();\n  }, [fromCurrency, toCurrency, selectedDate]);\n  const fetchAllRates = async () => {\n    try {\n      const response = await fetch(`https://v6.exchangerate-api.com/v6/238759501030fea9af2f5c26/latest/USD`);\n      const data = await response.json();\n      setCurrencyRates(data.conversion_rates);\n    } catch (error) {\n      console.error('Error fetching all rates:', error);\n    }\n  };\n  const fetchExchangeRate = async () => {\n    try {\n      const response = await fetch(`https://v6.exchangerate-api.com/v6/238759501030fea9af2f5c26/latest/${fromCurrency}`);\n      const data = await response.json();\n      setExchangeRate(data.conversion_rates[toCurrency]);\n      setLastUpdated(new Date().toLocaleString());\n    } catch (error) {\n      console.error('Error fetching exchange rate:', error);\n    }\n  };\n  const fetchHistoricalRates = async () => {\n    try {\n      const dates = [];\n      const rates = [];\n      const endDate = new Date();\n      const startDate = new Date();\n      startDate.setMonth(startDate.getMonth() - 1);\n      for (let d = startDate; d <= endDate; d.setDate(d.getDate() + 5)) {\n        const dateStr = d.toISOString().split('T')[0];\n        const response = await fetch(`https://v6.exchangerate-api.com/v6/238759501030fea9af2f5c26/latest/${fromCurrency}`);\n        const data = await response.json();\n        dates.push(dateStr);\n        rates.push(data.conversion_rates[toCurrency]);\n      }\n      setHistoricalRates({\n        labels: dates,\n        datasets: [{\n          label: `${fromCurrency} to ${toCurrency}`,\n          data: rates,\n          fill: false,\n          borderColor: 'rgb(75, 192, 192)',\n          tension: 0.1\n        }]\n      });\n    } catch (error) {\n      console.error('Error fetching historical rates:', error);\n    }\n  };\n  const convertAmount = () => {\n    if (exchangeRate === null) return '';\n    return (amount * exchangeRate).toFixed(2);\n  };\n  const handleFromInputChange = e => {\n    const value = e.target.value.toUpperCase();\n    setFromInput(value);\n    setShowFromDropdown(true);\n    const matchedCurrencies = currencies.filter(currency => currency.toUpperCase().includes(value));\n    if (matchedCurrencies.length > 0) {\n      setFromCurrency(matchedCurrencies[0]);\n    }\n  };\n  const handleToInputChange = e => {\n    const value = e.target.value.toUpperCase();\n    setToInput(value);\n    setShowToDropdown(true);\n    const matchedCurrencies = currencies.filter(currency => currency.toUpperCase().includes(value));\n    if (matchedCurrencies.length > 0) {\n      setToCurrency(matchedCurrencies[0]);\n    }\n  };\n  const handleFromCurrencySelect = currency => {\n    setFromCurrency(currency);\n    setFromInput(currency);\n    setShowFromDropdown(false);\n  };\n  const handleToCurrencySelect = currency => {\n    setToCurrency(currency);\n    setToInput(currency);\n    setShowToDropdown(false);\n  };\n  const handleAmountChange = e => {\n    setAmount(e.target.value);\n  };\n  const handleDateChange = e => {\n    setSelectedDate(e.target.value);\n  };\n  const filteredFromCurrencies = currencies.filter(currency => currency.toUpperCase().includes(fromInput.toUpperCase()));\n  const filteredToCurrencies = currencies.filter(currency => currency.toUpperCase().includes(toInput.toUpperCase()));\n  const LanguageSelector = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"language-selector\",\n    children: Object.keys(translations).map(lang => /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `language-button ${currentLanguage === lang ? 'active' : ''}`,\n      onClick: () => setCurrentLanguage(lang),\n      children: translations[lang].languages[lang]\n    }, lang, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 5\n  }, this);\n  const chartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Exchange Rate Trend'\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: false\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(LanguageSelector, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: t.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"converter-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"currency-inputs\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"currency-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"currency-input\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"currency-select\",\n                  ref: fromDropdownRef,\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: fromInput,\n                    onChange: handleFromInputChange,\n                    onFocus: () => setShowFromDropdown(true),\n                    placeholder: t.selectCurrency\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 212,\n                    columnNumber: 21\n                  }, this), showFromDropdown && filteredFromCurrencies.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"currency-dropdown\",\n                    children: filteredFromCurrencies.map(currency => /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"currency-option\",\n                      onClick: () => handleFromCurrencySelect(currency),\n                      children: [currency, \" - \", t.currencyNames[currency]]\n                    }, currency, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 222,\n                      columnNumber: 27\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 220,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"exchange-button\",\n                onClick: handleExchange,\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"exchange-icon\",\n                  children: \"\\u21C4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"currency-input\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"currency-select\",\n                  ref: toDropdownRef,\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: toInput,\n                    onChange: handleToInputChange,\n                    onFocus: () => setShowToDropdown(true),\n                    placeholder: t.selectCurrency\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 21\n                  }, this), showToDropdown && filteredToCurrencies.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"currency-dropdown\",\n                    children: filteredToCurrencies.map(currency => /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"currency-option\",\n                      onClick: () => handleToCurrencySelect(currency),\n                      children: [currency, \" - \", t.currencyNames[currency]]\n                    }, currency, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 251,\n                      columnNumber: 27\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 249,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"amount-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"amount-input\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  value: amount,\n                  onChange: handleAmountChange,\n                  placeholder: t.amount\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"amount-result\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: convertAmount(),\n                  readOnly: true,\n                  placeholder: t.convertedAmount\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"date-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"date-input\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"date\",\n                  value: selectedDate,\n                  onChange: handleDateChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"last-updated\",\n                children: [t.lastUpdated, \": \", lastUpdated]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [t.historicalRates, \": \", fromCurrency, \" \", t.to, \" \", toCurrency]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this), historicalRates.datasets && /*#__PURE__*/_jsxDEV(Line, {\n            data: historicalRates,\n            options: chartOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"watchlist-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: t.popularCurrencies\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"watchlist\",\n          children: currencies.map(currency => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"watchlist-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"currency-code\",\n              children: currency\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"currency-name\",\n              children: t.currencyNames[currency]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"currency-rate\",\n              children: currencyRates[currency] ? `1 USD = ${currencyRates[currency].toFixed(4)} ${currency}` : 'Loading...'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 17\n            }, this)]\n          }, currency, true, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"R1YdVGJPSqLAXKd4BV//a8FDNyM=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","translations","jsxDEV","_jsxDEV","register","App","_s","fromCurrency","setFromCurrency","toCurrency","setToCurrency","amount","setAmount","exchangeRate","setExchangeRate","lastUpdated","setLastUpdated","selectedDate","setSelectedDate","Date","toISOString","split","historicalRates","setHistoricalRates","fromInput","setFromInput","toInput","setToInput","showFromDropdown","setShowFromDropdown","showToDropdown","setShowToDropdown","currentLanguage","setCurrentLanguage","currencyRates","setCurrencyRates","t","currencies","fromDropdownRef","toDropdownRef","handleExchange","tempCurrency","tempInput","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","fetchExchangeRate","fetchHistoricalRates","fetchAllRates","response","fetch","data","json","conversion_rates","error","console","toLocaleString","dates","rates","endDate","startDate","setMonth","getMonth","d","setDate","getDate","dateStr","push","labels","datasets","label","fill","borderColor","tension","convertAmount","toFixed","handleFromInputChange","e","value","toUpperCase","matchedCurrencies","filter","currency","includes","length","handleToInputChange","handleFromCurrencySelect","handleToCurrencySelect","handleAmountChange","handleDateChange","filteredFromCurrencies","filteredToCurrencies","LanguageSelector","className","children","Object","keys","map","lang","onClick","languages","fileName","_jsxFileName","lineNumber","columnNumber","chartOptions","responsive","plugins","legend","position","title","display","text","scales","y","beginAtZero","ref","type","onChange","onFocus","placeholder","selectCurrency","currencyNames","readOnly","convertedAmount","to","options","popularCurrencies","_c","$RefreshReg$"],"sources":["E:/Mini-project/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n} from 'chart.js';\nimport { translations } from './translations';\nimport './styles.css';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\nexport default function App() {\n  const [fromCurrency,setFromCurrency]=useState('USD');\n  const [toCurrency,setToCurrency]=useState('EUR');\n  const [amount,setAmount]=useState(1);\n  const [exchangeRate,setExchangeRate]=useState(null);\n  const [lastUpdated,setLastUpdated]=useState('');\n  const [selectedDate,setSelectedDate]=useState(new Date().toISOString().split('T')[0]);\n  const [historicalRates,setHistoricalRates]=useState([]);\n  const [fromInput,setFromInput]=useState('USD');\n  const [toInput,setToInput]=useState('EUR');\n  const [showFromDropdown,setShowFromDropdown]=useState(false);\n  const [showToDropdown,setShowToDropdown]=useState(false);\n  const [currentLanguage,setCurrentLanguage]=useState('en');\n  const [currencyRates,setCurrencyRates]=useState({});\n  const t = translations[currentLanguage];\n  const currencies = [\n    'USD', 'EUR', 'GBP', 'JPY', 'AUD', 'CAD', 'CHF', 'CNY', 'HKD', 'NZD',\n    'AED', 'INR', 'SGD', 'MXN', 'BRL'\n  ];\n  const fromDropdownRef = useRef(null);\n  const toDropdownRef = useRef(null);\n  const handleExchange = () => {\n    const tempCurrency = fromCurrency;\n    const tempInput = fromInput;\n    setFromCurrency(toCurrency);\n    setFromInput(toCurrency);\n    setToCurrency(tempCurrency);\n    setToInput(tempInput);\n  };\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (fromDropdownRef.current && !fromDropdownRef.current.contains(event.target)) {\n        setShowFromDropdown(false);\n      }\n      if (toDropdownRef.current && !toDropdownRef.current.contains(event.target)) {\n        setShowToDropdown(false);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n  useEffect(() => {\n    fetchExchangeRate();\n    fetchHistoricalRates();\n    fetchAllRates();\n  }, [fromCurrency, toCurrency, selectedDate]);\n  const fetchAllRates = async () => {\n    try {\n      const response = await fetch(`https://v6.exchangerate-api.com/v6/238759501030fea9af2f5c26/latest/USD`);\n      const data = await response.json();\n      setCurrencyRates(data.conversion_rates);\n    } catch (error) {\n      console.error('Error fetching all rates:', error);\n    }\n  };\n  const fetchExchangeRate = async () => {\n    try {\n      const response = await fetch(`https://v6.exchangerate-api.com/v6/238759501030fea9af2f5c26/latest/${fromCurrency}`);\n      const data = await response.json();\n      setExchangeRate(data.conversion_rates[toCurrency]);\n      setLastUpdated(new Date().toLocaleString());\n    } catch (error) {\n      console.error('Error fetching exchange rate:', error);\n    }\n  };\n  const fetchHistoricalRates = async () => {\n    try {\n      const dates = [];\n      const rates = [];\n      const endDate = new Date();\n      const startDate = new Date();\n      startDate.setMonth(startDate.getMonth() - 1);\n      for (let d = startDate; d <= endDate; d.setDate(d.getDate() + 5)) {\n        const dateStr = d.toISOString().split('T')[0];\n        const response = await fetch(`https://v6.exchangerate-api.com/v6/238759501030fea9af2f5c26/latest/${fromCurrency}`);\n        const data = await response.json();\n        dates.push(dateStr);\n        rates.push(data.conversion_rates[toCurrency]);\n      }\n      setHistoricalRates({\n        labels: dates,\n        datasets: [\n          {\n            label: `${fromCurrency} to ${toCurrency}`,\n            data: rates,\n            fill: false,\n            borderColor: 'rgb(75, 192, 192)',\n            tension: 0.1\n          }\n        ]\n      });\n    } catch (error) {\n      console.error('Error fetching historical rates:', error);\n    }\n  };\n  const convertAmount = () => {\n    if (exchangeRate === null) return '';\n    return (amount * exchangeRate).toFixed(2);\n  };\n  const handleFromInputChange = (e) => {\n    const value = e.target.value.toUpperCase();\n    setFromInput(value);\n    setShowFromDropdown(true);\n    const matchedCurrencies = currencies.filter(currency =>\n      currency.toUpperCase().includes(value)\n    );\n    if (matchedCurrencies.length > 0) {\n      setFromCurrency(matchedCurrencies[0]);\n    }\n  };\n  const handleToInputChange = (e) => {\n    const value = e.target.value.toUpperCase();\n    setToInput(value);\n    setShowToDropdown(true);\n    const matchedCurrencies = currencies.filter(currency =>\n      currency.toUpperCase().includes(value)\n    );\n    if (matchedCurrencies.length > 0) {\n      setToCurrency(matchedCurrencies[0]);\n    }\n  };\n  const handleFromCurrencySelect = (currency) => {\n    setFromCurrency(currency);\n    setFromInput(currency);\n    setShowFromDropdown(false);\n  };\n  const handleToCurrencySelect = (currency) => {\n    setToCurrency(currency);\n    setToInput(currency);\n    setShowToDropdown(false);\n  };\n  const handleAmountChange = (e) => {\n    setAmount(e.target.value);\n  };\n  const handleDateChange = (e) => {\n    setSelectedDate(e.target.value);\n  };\n  const filteredFromCurrencies = currencies.filter(currency =>\n    currency.toUpperCase().includes(fromInput.toUpperCase())\n  );\n  const filteredToCurrencies = currencies.filter(currency =>\n    currency.toUpperCase().includes(toInput.toUpperCase())\n  );\n  const LanguageSelector = () => (\n    <div className=\"language-selector\">\n      {Object.keys(translations).map((lang) => (\n        <button\n          key={lang}\n          className={`language-button ${currentLanguage === lang ? 'active' : ''}`}\n          onClick={() => setCurrentLanguage(lang)}\n        >\n          {translations[lang].languages[lang]}\n        </button>\n      ))}\n    </div>\n  );\n  const chartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top',\n      },\n      title: {\n        display: true,\n        text: 'Exchange Rate Trend'\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: false\n      }\n    }\n  };\n  return (\n    <div className=\"app\">\n      <LanguageSelector />\n      <h1>{t.title}</h1>\n      \n      <div className=\"main-container\">\n        <div className=\"left-panel\">\n          <div className=\"converter-container\">\n            <div className=\"currency-inputs\">\n              <div className=\"currency-row\">\n                <div className=\"currency-input\">\n                  <div className=\"currency-select\" ref={fromDropdownRef}>\n                    <input\n                      type=\"text\"\n                      value={fromInput}\n                      onChange={handleFromInputChange}\n                      onFocus={() => setShowFromDropdown(true)}\n                      placeholder={t.selectCurrency}\n                    />\n                    {showFromDropdown && filteredFromCurrencies.length > 0 && (\n                      <div className=\"currency-dropdown\">\n                        {filteredFromCurrencies.map(currency => (\n                          <div\n                            key={currency}\n                            className=\"currency-option\"\n                            onClick={() => handleFromCurrencySelect(currency)}\n                          >\n                            {currency} - {t.currencyNames[currency]}\n                          </div>\n                        ))}\n                      </div>\n                    )}\n                  </div>\n                </div>\n\n                <button className=\"exchange-button\" onClick={handleExchange}>\n                  <span className=\"exchange-icon\">⇄</span>\n                </button>\n                \n                <div className=\"currency-input\">\n                  <div className=\"currency-select\" ref={toDropdownRef}>\n                    <input\n                      type=\"text\"\n                      value={toInput}\n                      onChange={handleToInputChange}\n                      onFocus={() => setShowToDropdown(true)}\n                      placeholder={t.selectCurrency}\n                    />\n                    {showToDropdown && filteredToCurrencies.length > 0 && (\n                      <div className=\"currency-dropdown\">\n                        {filteredToCurrencies.map(currency => (\n                          <div\n                            key={currency}\n                            className=\"currency-option\"\n                            onClick={() => handleToCurrencySelect(currency)}\n                          >\n                            {currency} - {t.currencyNames[currency]}\n                          </div>\n                        ))}\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"amount-row\">\n                <div className=\"amount-input\">\n                  <input\n                    type=\"number\"\n                    value={amount}\n                    onChange={handleAmountChange}\n                    placeholder={t.amount}\n                  />\n                </div>\n                <div className=\"amount-result\">\n                  <input\n                    type=\"text\"\n                    value={convertAmount()}\n                    readOnly\n                    placeholder={t.convertedAmount}\n                  />\n                </div>\n              </div>\n\n              <div className=\"date-row\">\n                <div className=\"date-input\">\n                  <input\n                    type=\"date\"\n                    value={selectedDate}\n                    onChange={handleDateChange}\n                  />\n                </div>\n                <span className=\"last-updated\">\n                  {t.lastUpdated}: {lastUpdated}\n                </span>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"chart-container\">\n            <h2>{t.historicalRates}: {fromCurrency} {t.to} {toCurrency}</h2>\n            {historicalRates.datasets && (\n              <Line data={historicalRates} options={chartOptions} />\n            )}\n          </div>\n        </div>\n\n        <div className=\"watchlist-container\">\n          <h2>{t.popularCurrencies}</h2>\n          <div className=\"watchlist\">\n            {currencies.map(currency => (\n              <div key={currency} className=\"watchlist-item\">\n                <span className=\"currency-code\">{currency}</span>\n                <span className=\"currency-name\">{t.currencyNames[currency]}</span>\n                <span className=\"currency-rate\">\n                  {currencyRates[currency] ? \n                    `1 USD = ${currencyRates[currency].toFixed(4)} ${currency}` \n                    : 'Loading...'}\n                </span>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}