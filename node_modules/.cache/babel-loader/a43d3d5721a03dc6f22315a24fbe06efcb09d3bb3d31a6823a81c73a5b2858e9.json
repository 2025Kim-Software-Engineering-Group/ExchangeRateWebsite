{"ast":null,"code":"var _jsxFileName = \"E:\\\\Mini-project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { translations } from \"./translations\";\nimport './styles.css';\nimport { Line } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nexport default function App() {\n  _s();\n  const [fromCurrency, setFromCurrency] = useState('USD');\n  const [toCurrency, setToCurrency] = useState('EUR');\n  const [amount, setAmount] = useState(1);\n  const [exchangeRate, setExchangeRate] = useState(null);\n  const [lastUpdated, setLastUpdated] = useState('');\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]);\n  const [historicalRates, setHistoricalRates] = useState([]);\n  const [fromInput, setFromInput] = useState('USD');\n  const [toInput, setToInput] = useState('EUR');\n  const [showFromDropdown, setShowFromDropdown] = useState(false);\n  const [showToDropdown, setShowToDropdown] = useState(false);\n  const [currentLanguage, setCurrentLanguage] = useState('en');\n  const [currencyRates, setCurrencyRates] = useState({});\n  const t = translations[currentLanguage];\n  const currencies = ['USD', 'EUR', 'GBP', 'JPY', 'AUD', 'CAD', 'CHF', 'CNY', 'HKD', 'NZD', 'AED', 'INR', 'SGD', 'MXN', 'BRL']; //Currencies of Popluar Currencies\n  const fromDropdownRef = useRef(null);\n  const toDropdownRef = useRef(null);\n  const handleExchange = () => {\n    const tempCurrency = fromCurrency;\n    const tempInput = fromInput;\n    setFromCurrency(toCurrency);\n    setToCurrency(tempCurrency);\n    setFromInput(toInput);\n    setToInput(tempInput);\n  }; //Handle the Exchange Function of Button: Swap types and input of currencies\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (fromDropdownRef.current && !fromDropdownRef.current.contains(event.target)) {\n        setShowFromDropdown(false);\n      }\n      if (toDropdownRef.current && !toDropdownRef.current.contains(event.target)) {\n        setShowToDropdown(false);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []); //Hanle the event of dropdown\n  const fetchExchangeRate = async () => {\n    try {\n      const response = await fetch(`https://v6.exchangerate-api.com/v6/dd875ed8009b2e791ff987e6/latest/${fromCurrency}`);\n      //Fetch API\n      const data = await response.json();\n      //Get data from API\n      setExchangeRate(data.conversion_rates[toCurrency]);\n      //Get the ExchangeRate from API data\n      setLastUpdated(new Date().toLocaleString());\n      //Get the updateTime which is local time\n    } catch (error) {\n      console.error('Error fetching exchange rate:', error);\n    }\n  }; //Get the ExchangeReate that we need\n  const fetchHistoricalRates = async () => {\n    try {\n      const dates = [];\n      const rates = [];\n      const endDate = new Date();\n      const startDate = new Date();\n      startDate.setMonth(startDate.getMonth() - 1);\n      for (let d = startDate; d <= endDate; d.setDate(d.getDate() + 5)) {\n        const dateStr = d.toISOString().split('T')[0];\n        const response = await fetch(`https://v6.exchangerate-api.com/v6/dd875ed8009b2e791ff987e6/latest/${fromCurrency}`);\n        const data = await response.json();\n        dates.push(dateStr);\n        rates.push(data.conversion_rates[toCurrency]);\n      }\n      setHistoricalRates({\n        labels: dates,\n        datasets: [{\n          label: `${fromCurrency} to ${toCurrency}`,\n          data: rates,\n          fill: false,\n          borderColor: 'rgb(75, 192, 192)',\n          tension: 0.1\n        }]\n      });\n    } catch (error) {\n      console.error('Error fetching historical rates', error);\n    }\n  }; //Fecth the historicalrates\n  const fetchAllRates = async () => {\n    try {\n      const response = await fetch('https://v6.exchangerate-api.com/v6/dd875ed8009b2e791ff987e6/latest/USD');\n      const data = await response.json();\n      setCurrencyRates(data.conversion_rates);\n    } catch (error) {\n      console.error('Error fetching all rates:', error);\n    }\n  };\n  useEffect(() => {\n    fetchExchangeRate();\n    fetchHistoricalRates();\n    fetchAllRates();\n  }, [fromCurrency, toCurrency, selectedDate]);\n  //Update all exchangerates when user change input\n  const convertAmount = () => {\n    if (exchangeRate == null) return '';\n    return (amount * exchangeRate).toFixed(2);\n  }; //The result after exchange\n  const handleFromInputChange = event => {\n    const value = event.target.value.toUpperCase();\n    setFromInput(value);\n    setShowFromDropdown(true);\n    const matchedCurrencies = currencies.filter(currency => currency.toUpperCase().includes(value));\n    if (matchedCurrencies.length > 0) {\n      setToCurrency(matchedCurrencies[0]);\n    }\n  }; //Handle the inputchange of start currrency\n  const handleToInputChange = event => {\n    const value = event.target.value.toUpperCase();\n    setToInput(value);\n    setShowToDropdown(true);\n    const matchedCurrencies = currencies.filter(currency => currency.toUpperCase().includes(value));\n    if (matchedCurrencies.length > 0) {\n      setToCurrency(matchedCurrencies[0]);\n    }\n  };\n  const handleFromCurrencySelect = currency => {\n    setFromCurrency(currency);\n    setFromInput(currency);\n    setShowFromDropdown(false);\n  }; //Handle the select of user's start currency\n  const handleToCurrencySelect = currency => {\n    setToCurrency(currency);\n    setToInput(currency);\n    setShowToDropdown(false);\n  };\n  const handleAmountChange = event => {\n    setAmount(event.target.value);\n  }; //Handle the amount change of fromCurrency\n  const handleDateChange = event => {\n    setSelectedDate(event.target.value);\n  }; //Handle the dataSelection change\n  const filteredFromCurrencies = currencies.filter(currency => currency.toUpperCase().includes(fromInput.toUpperCase()));\n  const filteredToCurrencies = currencies.filter(currency => currency.toUpperCase().includes(toInput.toUpperCase()));\n  //Filted the matched currency of fromcurrency and tocurrecny\n  const LanguageSelector = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"language-selector\",\n    children: Object.keys(translations).map(lang => /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `language-button ${currentLanguage === lang ? 'active' : ''}`,\n      onClick: () => setCurrentLanguage(lang),\n      children: translations[lang].languages[lang]\n    }, lang, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 9\n  }, this); //The LanguageChange function\n  const chartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Exchange Rate Trend'\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: false\n      }\n    }\n  };\n  return (\n    /*#__PURE__*/\n    //Layout the website\n    _jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(LanguageSelector, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: t.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"left-panel\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"converter-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"currency-inputs\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"currency-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"currency-input\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"currency-select\",\n                    ref: fromDropdownRef,\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      value: fromInput,\n                      onChange: handleFromInputChange,\n                      onFocus: () => setShowFromDropdown(true),\n                      placeholder: t.selectCurrency\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 216,\n                      columnNumber: 25\n                    }, this), showFromDropdown && filteredFromCurrencies.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"currency-dropdown\",\n                      children: filteredFromCurrencies.map(currency => /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"currency-option\",\n                        onClick: () => handleFromCurrencySelect(currency),\n                        children: [currency, \" - \", t.currencyNames[currency]]\n                      }, currency, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 226,\n                        columnNumber: 31\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 224,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 215,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"exchange-button\",\n                  onClick: handleExchange,\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"exchange-icon\",\n                    children: \"\\u21C4\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"currency-input\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"currency-select\",\n                    ref: toDropdownRef,\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      value: toInput,\n                      onChange: handleToInputChange,\n                      onFocus: () => setShowToDropdown(true),\n                      placeholder: t.selectCurrency\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 245,\n                      columnNumber: 25\n                    }, this), showToDropdown && filteredToCurrencies.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"currency-dropdown\",\n                      children: filteredToCurrencies.map(currency => /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"currency-option\",\n                        onClick: () => handleToCurrencySelect(currency),\n                        children: [currency, \" - \", t.currencyNames[currency]]\n                      }, currency, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 255,\n                        columnNumber: 31\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 253,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 244,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"amount-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"amount-input\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    value: amount,\n                    onChange: handleAmountChange,\n                    placeholder: t.amount\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 271,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"amount-result\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: convertAmount(),\n                    readOnly: true,\n                    placeholder: t.convertedAmount\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 279,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"date-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"date-input\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"date\",\n                    value: selectedDate,\n                    onChange: handleDateChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 290,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"last-updated\",\n                  children: [t.lastUpdated, \": \", lastUpdated]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [t.historicalRates, \": \", fromCurrency, \" \", t.to, \" \", toCurrency]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 17\n            }, this), historicalRates.datasets && /*#__PURE__*/_jsxDEV(Line, {\n              data: historicalRates,\n              options: chartOptions\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"watchlist-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: t.popularCurrencies\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"watchlist\",\n            children: currencies.map(currency => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"watchlist-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"currency-code\",\n                children: currency\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"currency-name\",\n                children: t.currencyNames[currency]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"currency-rate\",\n                children: currencyRates[currency] ? `1 USD = ${currencyRates[currency].toFixed(4)} ${currency}` : 'Loading...'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 21\n              }, this)]\n            }, currency, true, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }, this)\n  );\n}\n_s(App, \"R1YdVGJPSqLAXKd4BV//a8FDNyM=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","translations","Line","jsxDEV","_jsxDEV","register","App","_s","fromCurrency","setFromCurrency","toCurrency","setToCurrency","amount","setAmount","exchangeRate","setExchangeRate","lastUpdated","setLastUpdated","selectedDate","setSelectedDate","Date","toISOString","split","historicalRates","setHistoricalRates","fromInput","setFromInput","toInput","setToInput","showFromDropdown","setShowFromDropdown","showToDropdown","setShowToDropdown","currentLanguage","setCurrentLanguage","currencyRates","setCurrencyRates","t","currencies","fromDropdownRef","toDropdownRef","handleExchange","tempCurrency","tempInput","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","fetchExchangeRate","response","fetch","data","json","conversion_rates","toLocaleString","error","console","fetchHistoricalRates","dates","rates","endDate","startDate","setMonth","getMonth","d","setDate","getDate","dateStr","push","labels","datasets","label","fill","borderColor","tension","fetchAllRates","convertAmount","toFixed","handleFromInputChange","value","toUpperCase","matchedCurrencies","filter","currency","includes","length","handleToInputChange","handleFromCurrencySelect","handleToCurrencySelect","handleAmountChange","handleDateChange","filteredFromCurrencies","filteredToCurrencies","LanguageSelector","className","children","Object","keys","map","lang","onClick","languages","fileName","_jsxFileName","lineNumber","columnNumber","chartOptions","responsive","plugins","legend","position","title","display","text","scales","y","beginAtZero","ref","type","onChange","onFocus","placeholder","selectCurrency","currencyNames","readOnly","convertedAmount","to","options","popularCurrencies","_c","$RefreshReg$"],"sources":["E:/Mini-project/src/App.js"],"sourcesContent":["import React from \"react\";\nimport { useState,useEffect,useRef } from \"react\";\nimport{\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend\n} from 'chart.js';\nimport { translations } from \"./translations\";\nimport './styles.css';\nimport { Line } from \"react-chartjs-2\";\n\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend\n);\nexport default function App(){\n    const [fromCurrency,setFromCurrency]=useState('USD');\n    const [toCurrency,setToCurrency]=useState('EUR');\n    const [amount,setAmount]=useState(1);\n    const [exchangeRate,setExchangeRate]=useState(null);\n    const [lastUpdated,setLastUpdated]=useState('');\n    const [selectedDate,setSelectedDate]=useState(new Date().toISOString().split('T')[0]);\n    const [historicalRates,setHistoricalRates]=useState([]);\n    const [fromInput,setFromInput]=useState('USD');\n    const [toInput,setToInput]=useState('EUR');\n    const [showFromDropdown,setShowFromDropdown]=useState(false);\n    const [showToDropdown,setShowToDropdown]=useState(false);\n    const [currentLanguage,setCurrentLanguage]=useState('en');\n    const [currencyRates,setCurrencyRates]=useState({});\n    const t=translations[currentLanguage];\n    const currencies=[\n        'USD', 'EUR', 'GBP', 'JPY', 'AUD', 'CAD', 'CHF', 'CNY', 'HKD', 'NZD',\n        'AED', 'INR', 'SGD', 'MXN', 'BRL'\n    ];//Currencies of Popluar Currencies\n    const fromDropdownRef=useRef(null);\n    const toDropdownRef=useRef(null);\n    const handleExchange=()=>{\n        const tempCurrency=fromCurrency;\n        const tempInput=fromInput;\n        setFromCurrency(toCurrency);\n        setToCurrency(tempCurrency);\n        setFromInput(toInput);\n        setToInput(tempInput);\n    };//Handle the Exchange Function of Button: Swap types and input of currencies\n    useEffect(()=>{\n        const handleClickOutside=(event)=>{\n            if(fromDropdownRef.current&&!fromDropdownRef.current.contains(event.target)){\n                setShowFromDropdown(false);\n            }\n            if(toDropdownRef.current&&!toDropdownRef.current.contains(event.target)){\n                setShowToDropdown(false);\n            }\n        };\n        document.addEventListener('mousedown',handleClickOutside);\n        return ()=>{\n            document.removeEventListener('mousedown',handleClickOutside);\n        };\n    },[]);//Hanle the event of dropdown\n    const fetchExchangeRate=async()=>{\n        try{\n            const response=await fetch(`https://v6.exchangerate-api.com/v6/dd875ed8009b2e791ff987e6/latest/${fromCurrency}`);\n            //Fetch API\n            const data=await response.json();\n            //Get data from API\n            setExchangeRate(data.conversion_rates[toCurrency]);\n            //Get the ExchangeRate from API data\n            setLastUpdated(new Date().toLocaleString());\n            //Get the updateTime which is local time\n        }catch(error){\n            console.error('Error fetching exchange rate:',error);\n        }\n    };//Get the ExchangeReate that we need\n    const fetchHistoricalRates=async()=>{\n        try{\n            const dates=[];\n            const rates=[];\n            const endDate=new Date();\n            const startDate=new Date();\n            startDate.setMonth(startDate.getMonth()-1);\n            for(let d=startDate;d<=endDate;d.setDate(d.getDate()+5)){\n                const dateStr=d.toISOString().split('T')[0];\n                const response=await fetch(`https://v6.exchangerate-api.com/v6/dd875ed8009b2e791ff987e6/latest/${fromCurrency}`);\n                const data=await response.json();\n                dates.push(dateStr);\n                rates.push(data.conversion_rates[toCurrency]);\n            }\n            setHistoricalRates({\n                labels:dates,\n                datasets: [{\n                    label:`${fromCurrency} to ${toCurrency}`,\n                    data:rates,\n                    fill:false,\n                    borderColor:'rgb(75, 192, 192)',\n                    tension:0.1\n                }]\n            });\n        }catch(error){\n            console.error('Error fetching historical rates',error);\n        }\n    };//Fecth the historicalrates\n    const fetchAllRates=async()=>{\n        try{\n            const response=await fetch('https://v6.exchangerate-api.com/v6/dd875ed8009b2e791ff987e6/latest/USD');\n            const data=await response.json();\n            setCurrencyRates(data.conversion_rates);\n        }catch(error){\n            console.error('Error fetching all rates:',error);\n        }\n    };\n    useEffect(() => {\n        fetchExchangeRate();\n        fetchHistoricalRates();\n        fetchAllRates();\n    }, [fromCurrency, toCurrency, selectedDate]);\n    //Update all exchangerates when user change input\n    const convertAmount=()=>{\n        if(exchangeRate==null) return '';\n        return (amount*exchangeRate).toFixed(2);\n    };//The result after exchange\n    const handleFromInputChange=(event)=>{\n        const value=event.target.value.toUpperCase();\n        setFromInput(value);\n        setShowFromDropdown(true);\n        const matchedCurrencies=currencies.filter(currency=>\n            currency.toUpperCase().includes(value)\n        );\n        if(matchedCurrencies.length>0){\n            setToCurrency(matchedCurrencies[0]);\n        }\n    };//Handle the inputchange of start currrency\n    const handleToInputChange=(event)=>{\n        const value = event.target.value.toUpperCase();\n        setToInput(value);\n        setShowToDropdown(true);\n        const matchedCurrencies = currencies.filter(currency =>\n            currency.toUpperCase().includes(value)\n        );\n        if (matchedCurrencies.length > 0) {\n            setToCurrency(matchedCurrencies[0]);\n        }\n    }\n    const handleFromCurrencySelect=(currency)=>{\n        setFromCurrency(currency);\n        setFromInput(currency);\n        setShowFromDropdown(false);\n    };//Handle the select of user's start currency\n    const handleToCurrencySelect=(currency)=>{\n        setToCurrency(currency);\n        setToInput(currency);\n        setShowToDropdown(false);\n    };\n    const handleAmountChange=(event)=>{\n        setAmount(event.target.value);\n    };//Handle the amount change of fromCurrency\n    const handleDateChange=(event)=>{\n        setSelectedDate(event.target.value);\n    };//Handle the dataSelection change\n    const filteredFromCurrencies=currencies.filter(currency=>\n        currency.toUpperCase().includes(fromInput.toUpperCase())\n    );\n    const filteredToCurrencies=currencies.filter(currency=>\n        currency.toUpperCase().includes(toInput.toUpperCase())\n    );\n    //Filted the matched currency of fromcurrency and tocurrecny\n    const LanguageSelector=()=>(\n        <div className=\"language-selector\">\n          {Object.keys(translations).map((lang) => (\n            <button\n              key={lang}\n              className={`language-button ${currentLanguage===lang ? 'active' : ''}`}\n              onClick={() => setCurrentLanguage(lang)}\n            >\n              {translations[lang].languages[lang]}\n            </button>\n          ))}\n        </div>\n    );//The LanguageChange function\n    const chartOptions={\n        responsive: true,\n        plugins: {\n            legend: {\n            position: 'top',\n            },\n            title: {\n            display: true,\n            text: 'Exchange Rate Trend'\n             }\n        },\n        scales: {\n        y: {\n            beginAtZero: false\n            }\n        }\n    };\n    return (//Layout the website\n        <div className=\"app\">\n          <LanguageSelector />\n          <h1>{t.title}</h1>\n          <div className=\"main-container\">\n            <div className=\"left-panel\">\n              <div className=\"converter-container\">\n                <div className=\"currency-inputs\">\n                  <div className=\"currency-row\">\n                    <div className=\"currency-input\">\n                      <div className=\"currency-select\" ref={fromDropdownRef}>\n                        <input\n                          type=\"text\"\n                          value={fromInput}\n                          onChange={handleFromInputChange}\n                          onFocus={() => setShowFromDropdown(true)}\n                          placeholder={t.selectCurrency}\n                        />\n                        {showFromDropdown && filteredFromCurrencies.length > 0 && (\n                          <div className=\"currency-dropdown\">\n                            {filteredFromCurrencies.map(currency => (\n                              <div\n                                key={currency}\n                                className=\"currency-option\"\n                                onClick={() => handleFromCurrencySelect(currency)}\n                              >\n                                {currency} - {t.currencyNames[currency]}\n                              </div>\n                            ))}\n                          </div>\n                        )}\n                      </div>\n                    </div>\n    \n                    <button className=\"exchange-button\" onClick={handleExchange}>\n                      <span className=\"exchange-icon\">⇄</span>\n                    </button>\n                    \n                    <div className=\"currency-input\">\n                      <div className=\"currency-select\" ref={toDropdownRef}>\n                        <input\n                          type=\"text\"\n                          value={toInput}\n                          onChange={handleToInputChange}\n                          onFocus={() => setShowToDropdown(true)}\n                          placeholder={t.selectCurrency}\n                        />\n                        {showToDropdown && filteredToCurrencies.length > 0 && (\n                          <div className=\"currency-dropdown\">\n                            {filteredToCurrencies.map(currency => (\n                              <div\n                                key={currency}\n                                className=\"currency-option\"\n                                onClick={() => handleToCurrencySelect(currency)}\n                              >\n                                {currency} - {t.currencyNames[currency]}\n                              </div>\n                            ))}\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n    \n                  <div className=\"amount-row\">\n                    <div className=\"amount-input\">\n                      <input\n                        type=\"number\"\n                        value={amount}\n                        onChange={handleAmountChange}\n                        placeholder={t.amount}\n                      />\n                    </div>\n                    <div className=\"amount-result\">\n                      <input\n                        type=\"text\"\n                        value={convertAmount()}\n                        readOnly\n                        placeholder={t.convertedAmount}\n                      />\n                    </div>\n                  </div>\n    \n                  <div className=\"date-row\">\n                    <div className=\"date-input\">\n                      <input\n                        type=\"date\"\n                        value={selectedDate}\n                        onChange={handleDateChange}\n                      />\n                    </div>\n                    <span className=\"last-updated\">\n                      {t.lastUpdated}: {lastUpdated}\n                    </span>\n                  </div>\n                </div>\n              </div>\n    \n              <div className=\"chart-container\">\n                <h2>{t.historicalRates}: {fromCurrency} {t.to} {toCurrency}</h2>\n                {historicalRates.datasets && (\n                  <Line data={historicalRates} options={chartOptions} />\n                )}\n              </div>\n            </div>\n    \n            <div className=\"watchlist-container\">\n              <h2>{t.popularCurrencies}</h2>\n              <div className=\"watchlist\">\n                {currencies.map(currency => (\n                  <div key={currency} className=\"watchlist-item\">\n                    <span className=\"currency-code\">{currency}</span>\n                    <span className=\"currency-name\">{t.currencyNames[currency]}</span>\n                    <span className=\"currency-rate\">\n                      {currencyRates[currency] ? \n                        `1 USD = ${currencyRates[currency].toFixed(4)} ${currency}` \n                        : 'Loading...'}\n                    </span>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}