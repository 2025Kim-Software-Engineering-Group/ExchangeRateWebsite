{"ast":null,"code":"var _jsxFileName = \"E:\\\\Mini-project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport exchangeIcon from './ExchangeButton.png';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CURRENCY_FLAGS = {\n  USD: \"🇺🇸\",\n  EUR: \"🇪🇺\",\n  GBP: \"🇬🇧\",\n  JPY: \"🇯🇵\",\n  AUD: \"🇦🇺\",\n  CAD: \"🇨🇦\",\n  CHF: \"🇨🇭\",\n  CNY: \"🇨🇳\",\n  HKD: \"🇭🇰\",\n  NZD: \"🇳🇿\"\n};\nconst CURRENCY_NAMES = {\n  USD: \"US Dollar\",\n  EUR: \"Euro\",\n  GBP: \"British Pound\",\n  JPY: \"Japanese Yen\",\n  AUD: \"Australian Dollar\",\n  CAD: \"Canadian Dollar\",\n  CHF: \"Swiss Franc\",\n  CNY: \"Chinese Yuan\",\n  HKD: \"Hong Kong Dollar\",\n  NZD: \"New Zealand Dollar\"\n};\nfunction LineChart(_ref) {\n  let {\n    data,\n    width = 600,\n    height = 300\n  } = _ref;\n  const padding = {\n    top: 20,\n    right: 30,\n    bottom: 30,\n    left: 50\n  };\n  const chartWidth = width - padding.left - padding.right;\n  const chartHeight = height - padding.top - padding.bottom;\n\n  // Find min and max values for scaling\n  const minRate = Math.min(...data.map(d => d.rate));\n  const maxRate = Math.max(...data.map(d => d.rate));\n  const dates = data.map(d => new Date(d.date));\n  const minDate = Math.min(...dates);\n  const maxDate = Math.max(...dates);\n\n  // Scale functions\n  const xScale = date => {\n    return padding.left + (new Date(date) - minDate) / (maxDate - minDate) * chartWidth;\n  };\n  const yScale = rate => {\n    return height - padding.bottom - (rate - minRate) / (maxRate - minRate) * chartHeight;\n  };\n\n  // Generate path data\n  const pathData = data.map((point, index) => {\n    const x = xScale(point.date);\n    const y = yScale(point.rate);\n    return index === 0 ? `M ${x},${y}` : `L ${x},${y}`;\n  }).join(' ');\n\n  // Generate x-axis ticks\n  const xTicks = data.filter((_, i) => i % 5 === 0).map(point => ({\n    x: xScale(point.date),\n    label: new Date(point.date).toLocaleDateString()\n  }));\n\n  // Generate y-axis ticks\n  const yTickCount = 5;\n  const yTicks = Array.from({\n    length: yTickCount\n  }).map((_, i) => {\n    const rate = minRate + (maxRate - minRate) * (i / (yTickCount - 1));\n    return {\n      y: yScale(rate),\n      label: rate.toFixed(2)\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: width,\n    height: height,\n    children: [/*#__PURE__*/_jsxDEV(\"line\", {\n      x1: padding.left,\n      y1: height - padding.bottom,\n      x2: width - padding.right,\n      y2: height - padding.bottom,\n      stroke: \"black\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n      x1: padding.left,\n      y1: padding.top,\n      x2: padding.left,\n      y2: height - padding.bottom,\n      stroke: \"black\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), xTicks.map((tick, i) => /*#__PURE__*/_jsxDEV(\"g\", {\n      children: [/*#__PURE__*/_jsxDEV(\"line\", {\n        x1: tick.x,\n        y1: height - padding.bottom,\n        x2: tick.x,\n        y2: height - padding.bottom + 5,\n        stroke: \"black\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: tick.x,\n        y: height - padding.bottom + 20,\n        textAnchor: \"middle\",\n        fontSize: \"12\",\n        children: tick.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)), yTicks.map((tick, i) => /*#__PURE__*/_jsxDEV(\"g\", {\n      children: [/*#__PURE__*/_jsxDEV(\"line\", {\n        x1: padding.left - 5,\n        y1: tick.y,\n        x2: padding.left,\n        y2: tick.y,\n        stroke: \"black\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: padding.left - 10,\n        y: tick.y,\n        textAnchor: \"end\",\n        alignmentBaseline: \"middle\",\n        fontSize: \"12\",\n        children: tick.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: pathData,\n      fill: \"none\",\n      stroke: \"blue\",\n      strokeWidth: \"2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_c = LineChart;\nfunction App() {\n  _s();\n  const [rates, setRates] = useState({});\n  const [fromCurrency, setFromCurrency] = useState(\"USD\");\n  const [toCurrency, setToCurrency] = useState(\"EUR\");\n  const [amount, setAmount] = useState(1);\n  const [fromInput, setFromInput] = useState(`USD - ${CURRENCY_NAMES.USD}`);\n  const [toInput, setToInput] = useState(`EUR - ${CURRENCY_NAMES.EUR}`);\n  const [historicalData, setHistoricalData] = useState([]);\n  const [showFromDropdown, setShowFromDropdown] = useState(false);\n  const [showToDropdown, setShowToDropdown] = useState(false);\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]);\n  const [lastUpdated, setLastUpdated] = useState('');\n  useEffect(() => {\n    fetchRates();\n    generateHistoricalData();\n  }, [selectedDate, toCurrency]);\n  const fetchRates = async () => {\n    try {\n      const response = await fetch('https://v6.exchangerate-api.com/v6/dd875ed8009b2e791ff987e6/latest/USD');\n      const data = await response.json();\n      if (data.result === \"success\") {\n        setRates(data.conversion_rates);\n        setLastUpdated(new Date(data.time_last_update_utc).toLocaleTimeString());\n      }\n    } catch (error) {\n      console.error(\"Error fetching rates:\", error);\n    }\n  };\n  const generateHistoricalData = () => {\n    const data = [];\n    const baseValue = rates[toCurrency] || 1.15;\n    const numPoints = 30;\n    for (let i = 0; i < numPoints; i++) {\n      const date = new Date();\n      date.setDate(date.getDate() - (numPoints - i));\n      const variation = (Math.random() - 0.5) * 0.1;\n      const rate = baseValue + variation;\n      data.push({\n        date: date.toISOString().split('T')[0],\n        rate: rate\n      });\n    }\n    setHistoricalData(data);\n  };\n\n  // ... [其余代码与之前相同，保持不变]\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Exchange Rate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"converter-container\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Historical Rates\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart\",\n            children: /*#__PURE__*/_jsxDEV(LineChart, {\n              data: historicalData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"watchlist-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Watchlist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"watchlist-items\",\n          children: Object.keys(CURRENCY_NAMES).slice(0, 5).map(code => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"watchlist-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [CURRENCY_FLAGS[code], \" \", code]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: (rates[code] || 0).toFixed(2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 17\n            }, this)]\n          }, code, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/NwHn7lHr6bJcsJ7jA1x9PSVXLY=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"LineChart\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","exchangeIcon","jsxDEV","_jsxDEV","CURRENCY_FLAGS","USD","EUR","GBP","JPY","AUD","CAD","CHF","CNY","HKD","NZD","CURRENCY_NAMES","LineChart","_ref","data","width","height","padding","top","right","bottom","left","chartWidth","chartHeight","minRate","Math","min","map","d","rate","maxRate","max","dates","Date","date","minDate","maxDate","xScale","yScale","pathData","point","index","x","y","join","xTicks","filter","_","i","label","toLocaleDateString","yTickCount","yTicks","Array","from","length","toFixed","children","x1","y1","x2","y2","stroke","fileName","_jsxFileName","lineNumber","columnNumber","tick","textAnchor","fontSize","alignmentBaseline","fill","strokeWidth","_c","App","_s","rates","setRates","fromCurrency","setFromCurrency","toCurrency","setToCurrency","amount","setAmount","fromInput","setFromInput","toInput","setToInput","historicalData","setHistoricalData","showFromDropdown","setShowFromDropdown","showToDropdown","setShowToDropdown","selectedDate","setSelectedDate","toISOString","split","lastUpdated","setLastUpdated","fetchRates","generateHistoricalData","response","fetch","json","result","conversion_rates","time_last_update_utc","toLocaleTimeString","error","console","baseValue","numPoints","setDate","getDate","variation","random","push","className","Object","keys","slice","code","_c2","$RefreshReg$"],"sources":["E:/Mini-project/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport exchangeIcon from './ExchangeButton.png';\nimport './styles.css';\n\nconst CURRENCY_FLAGS = {\n  USD: \"🇺🇸\",\n  EUR: \"🇪🇺\",\n  GBP: \"🇬🇧\",\n  JPY: \"🇯🇵\",\n  AUD: \"🇦🇺\",\n  CAD: \"🇨🇦\",\n  CHF: \"🇨🇭\",\n  CNY: \"🇨🇳\",\n  HKD: \"🇭🇰\",\n  NZD: \"🇳🇿\"\n};\n\nconst CURRENCY_NAMES = {\n  USD: \"US Dollar\",\n  EUR: \"Euro\",\n  GBP: \"British Pound\",\n  JPY: \"Japanese Yen\",\n  AUD: \"Australian Dollar\",\n  CAD: \"Canadian Dollar\",\n  CHF: \"Swiss Franc\",\n  CNY: \"Chinese Yuan\",\n  HKD: \"Hong Kong Dollar\",\n  NZD: \"New Zealand Dollar\"\n};\n\nfunction LineChart({ data, width = 600, height = 300 }) {\n  const padding = { top: 20, right: 30, bottom: 30, left: 50 };\n  const chartWidth = width - padding.left - padding.right;\n  const chartHeight = height - padding.top - padding.bottom;\n\n  // Find min and max values for scaling\n  const minRate = Math.min(...data.map(d => d.rate));\n  const maxRate = Math.max(...data.map(d => d.rate));\n  const dates = data.map(d => new Date(d.date));\n  const minDate = Math.min(...dates);\n  const maxDate = Math.max(...dates);\n\n  // Scale functions\n  const xScale = (date) => {\n    return padding.left + ((new Date(date) - minDate) / (maxDate - minDate)) * chartWidth;\n  };\n\n  const yScale = (rate) => {\n    return height - padding.bottom - ((rate - minRate) / (maxRate - minRate)) * chartHeight;\n  };\n\n  // Generate path data\n  const pathData = data.map((point, index) => {\n    const x = xScale(point.date);\n    const y = yScale(point.rate);\n    return index === 0 ? `M ${x},${y}` : `L ${x},${y}`;\n  }).join(' ');\n\n  // Generate x-axis ticks\n  const xTicks = data.filter((_, i) => i % 5 === 0).map(point => ({\n    x: xScale(point.date),\n    label: new Date(point.date).toLocaleDateString()\n  }));\n\n  // Generate y-axis ticks\n  const yTickCount = 5;\n  const yTicks = Array.from({ length: yTickCount }).map((_, i) => {\n    const rate = minRate + (maxRate - minRate) * (i / (yTickCount - 1));\n    return {\n      y: yScale(rate),\n      label: rate.toFixed(2)\n    };\n  });\n\n  return (\n    <svg width={width} height={height}>\n      {/* X axis */}\n      <line\n        x1={padding.left}\n        y1={height - padding.bottom}\n        x2={width - padding.right}\n        y2={height - padding.bottom}\n        stroke=\"black\"\n      />\n      \n      {/* Y axis */}\n      <line\n        x1={padding.left}\n        y1={padding.top}\n        x2={padding.left}\n        y2={height - padding.bottom}\n        stroke=\"black\"\n      />\n\n      {/* X axis ticks */}\n      {xTicks.map((tick, i) => (\n        <g key={i}>\n          <line\n            x1={tick.x}\n            y1={height - padding.bottom}\n            x2={tick.x}\n            y2={height - padding.bottom + 5}\n            stroke=\"black\"\n          />\n          <text\n            x={tick.x}\n            y={height - padding.bottom + 20}\n            textAnchor=\"middle\"\n            fontSize=\"12\"\n          >\n            {tick.label}\n          </text>\n        </g>\n      ))}\n\n      {/* Y axis ticks */}\n      {yTicks.map((tick, i) => (\n        <g key={i}>\n          <line\n            x1={padding.left - 5}\n            y1={tick.y}\n            x2={padding.left}\n            y2={tick.y}\n            stroke=\"black\"\n          />\n          <text\n            x={padding.left - 10}\n            y={tick.y}\n            textAnchor=\"end\"\n            alignmentBaseline=\"middle\"\n            fontSize=\"12\"\n          >\n            {tick.label}\n          </text>\n        </g>\n      ))}\n\n      {/* Line chart */}\n      <path\n        d={pathData}\n        fill=\"none\"\n        stroke=\"blue\"\n        strokeWidth=\"2\"\n      />\n    </svg>\n  );\n}\n\nfunction App() {\n  const [rates, setRates] = useState({});\n  const [fromCurrency, setFromCurrency] = useState(\"USD\");\n  const [toCurrency, setToCurrency] = useState(\"EUR\");\n  const [amount, setAmount] = useState(1);\n  const [fromInput, setFromInput] = useState(`USD - ${CURRENCY_NAMES.USD}`);\n  const [toInput, setToInput] = useState(`EUR - ${CURRENCY_NAMES.EUR}`);\n  const [historicalData, setHistoricalData] = useState([]);\n  const [showFromDropdown, setShowFromDropdown] = useState(false);\n  const [showToDropdown, setShowToDropdown] = useState(false);\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]);\n  const [lastUpdated, setLastUpdated] = useState('');\n\n  useEffect(() => {\n    fetchRates();\n    generateHistoricalData();\n  }, [selectedDate, toCurrency]);\n\n  const fetchRates = async () => {\n    try {\n      const response = await fetch('https://v6.exchangerate-api.com/v6/dd875ed8009b2e791ff987e6/latest/USD');\n      const data = await response.json();\n      if (data.result === \"success\") {\n        setRates(data.conversion_rates);\n        setLastUpdated(new Date(data.time_last_update_utc).toLocaleTimeString());\n      }\n    } catch (error) {\n      console.error(\"Error fetching rates:\", error);\n    }\n  };\n\n  const generateHistoricalData = () => {\n    const data = [];\n    const baseValue = rates[toCurrency] || 1.15;\n    const numPoints = 30;\n    \n    for (let i = 0; i < numPoints; i++) {\n      const date = new Date();\n      date.setDate(date.getDate() - (numPoints - i));\n      const variation = (Math.random() - 0.5) * 0.1;\n      const rate = baseValue + variation;\n      \n      data.push({\n        date: date.toISOString().split('T')[0],\n        rate: rate\n      });\n    }\n    \n    setHistoricalData(data);\n  };\n\n  // ... [其余代码与之前相同，保持不变]\n  \n  return (\n    <div className=\"app\">\n      <h1>Exchange Rate</h1>\n      \n      <div className=\"main-container\">\n        <div className=\"left-panel\">\n          <div className=\"converter-container\">\n            {/* ... [转换器部分代码与之前相同] ... */}\n          </div>\n\n          <div className=\"chart-container\">\n            <h2>Historical Rates</h2>\n            <div className=\"chart\">\n              <LineChart data={historicalData} />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"watchlist-container\">\n          <h2>Watchlist</h2>\n          <div className=\"watchlist-items\">\n            {Object.keys(CURRENCY_NAMES).slice(0, 5).map(code => (\n              <div key={code} className=\"watchlist-item\">\n                <span>{CURRENCY_FLAGS[code]} {code}</span>\n                <span>{(rates[code] || 0).toFixed(2)}</span>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}