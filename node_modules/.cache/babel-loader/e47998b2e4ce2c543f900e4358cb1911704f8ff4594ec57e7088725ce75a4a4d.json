{"ast":null,"code":"var _jsxFileName = \"E:\\\\Mini-project\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { translations } from './translations';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst LanguageSelector = _ref => {\n  let {\n    currentLanguage,\n    setCurrentLanguage\n  } = _ref;\n  const t = translations[currentLanguage];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"language-selector\",\n    children: Object.keys(translations).map(lang => /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `language-button ${currentLanguage === lang ? 'active' : ''}`,\n      onClick: () => setCurrentLanguage(lang),\n      children: translations[lang].languages[lang]\n    }, lang, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_c = LanguageSelector;\nconst CurrencyConverter = _ref2 => {\n  _s();\n  let {\n    fromCurrency,\n    setFromCurrency,\n    toCurrency,\n    setToCurrency,\n    amount,\n    setAmount,\n    exchangeRate,\n    lastUpdated,\n    selectedDate,\n    setSelectedDate,\n    currencies,\n    t\n  } = _ref2;\n  const [fromInput, setFromInput] = useState(fromCurrency);\n  const [toInput, setToInput] = useState(toCurrency);\n  const [showDropdownFrom, setShowDropdownFrom] = useState(false);\n  const [showDropdownTo, setShowDropdownTo] = useState(false);\n  const handleCurrencyChange = (type, value) => {\n    const upperValue = value.toUpperCase().trim();\n    if (currencies.includes(upperValue) || upperValue === '') {\n      if (type === 'from') {\n        setFromCurrency(upperValue);\n        setFromInput(upperValue);\n        setShowDropdownFrom(false);\n      } else {\n        setToCurrency(upperValue);\n        setToInput(upperValue);\n        setShowDropdownTo(false);\n      }\n    } else {\n      if (type === 'from') setFromInput(upperValue);else setToInput(upperValue);\n    }\n  };\n  const handleSelectCurrency = (type, currency) => {\n    if (type === 'from') {\n      setFromCurrency(currency);\n      setFromInput(currency);\n      setShowDropdownFrom(false);\n    } else {\n      setToCurrency(currency);\n      setToInput(currency);\n      setShowDropdownTo(false);\n    }\n  };\n  const handleExchange = () => {\n    setFromCurrency(toCurrency);\n    setToCurrency(fromCurrency);\n    setFromInput(toInput);\n    setToInput(fromInput);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"converter-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"currency-inputs\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"currency-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"currency-input fromCurrency\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: fromInput,\n            onChange: e => {\n              handleCurrencyChange('from', e.target.value);\n              setShowDropdownFrom(true);\n            },\n            onFocus: () => setShowDropdownFrom(true),\n            placeholder: t.selectCurrency\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), showDropdownFrom && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropdown\",\n            children: currencies.filter(currency => currency.toUpperCase().includes(fromInput.toUpperCase())).map(currency => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dropdown-item\",\n              onClick: () => handleSelectCurrency('from', currency),\n              children: [currency, \" - \", t.currencyNames[currency]]\n            }, currency, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"exchange-button-container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"exchange-button\",\n            onClick: handleExchange,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"exchange-icon\",\n              children: \"\\u21C4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"currency-input toCurrency\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: toInput,\n            onChange: e => {\n              handleCurrencyChange('to', e.target.value);\n              setShowDropdownTo(true);\n            },\n            onFocus: () => setShowDropdownTo(true),\n            placeholder: t.selectCurrency\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), showDropdownTo && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropdown\",\n            children: currencies.filter(currency => currency.toUpperCase().includes(toInput.toUpperCase())).map(currency => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dropdown-item\",\n              onClick: () => handleSelectCurrency('to', currency),\n              children: [currency, \" - \", t.currencyNames[currency]]\n            }, currency, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"amount-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"amount-input\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: amount,\n            onChange: e => setAmount(e.target.value),\n            placeholder: t.amount,\n            min: \"0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"amount-result\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: exchangeRate ? (amount * exchangeRate).toFixed(2) : '',\n            readOnly: true,\n            placeholder: t.convertedAmount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date-input\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: selectedDate,\n            onChange: e => setSelectedDate(e.target.value),\n            max: new Date().toISOString().split('T')[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"last-updated\",\n          children: [t.lastUpdated, \": \", lastUpdated]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(CurrencyConverter, \"mNtuRXv5RznEVkgTKV1CDFqu548=\");\n_c2 = CurrencyConverter;\nconst HistoricalChart = _ref3 => {\n  let {\n    historicalRates,\n    fromCurrency,\n    toCurrency,\n    t\n  } = _ref3;\n  const chartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: `${fromCurrency} ${t.to} ${toCurrency} ${t.exchangeTrend}`\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: false,\n        title: {\n          display: true,\n          text: t.exchangeRate\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: t.historicalRates\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this), historicalRates.datasets && /*#__PURE__*/_jsxDEV(Line, {\n      data: historicalRates,\n      options: chartOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 230,\n    columnNumber: 5\n  }, this);\n};\n_c3 = HistoricalChart;\nconst PopularCurrencies = _ref4 => {\n  let {\n    currencyRates,\n    currencies,\n    t\n  } = _ref4;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"watchlist-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: t.popularCurrencies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"watchlist\",\n      children: currencies.map(currency => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"watchlist-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"currency-code\",\n          children: currency\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"currency-name\",\n          children: t.currencyNames[currency]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"currency-rate\",\n          children: currencyRates[currency] ? `1 USD = ${currencyRates[currency].toFixed(4)} ${currency}` : 'Loading...'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this)]\n      }, currency, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 241,\n    columnNumber: 3\n  }, this);\n};\n_c4 = PopularCurrencies;\nexport default function App() {\n  _s2();\n  const [fromCurrency, setFromCurrency] = useState('USD');\n  const [toCurrency, setToCurrency] = useState('EUR');\n  const [amount, setAmount] = useState(1);\n  const [exchangeRate, setExchangeRate] = useState(null);\n  const [lastUpdated, setLastUpdated] = useState('');\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]);\n  const [historicalRates, setHistoricalRates] = useState({\n    labels: [],\n    datasets: []\n  });\n  const [currentLanguage, setCurrentLanguage] = useState('en');\n  const [currencyRates, setCurrencyRates] = useState({});\n  const t = translations[currentLanguage];\n  const currencies = ['USD', 'EUR', 'GBP', 'JPY', 'AUD', 'CAD', 'CHF', 'CNY', 'HKD', 'NZD', 'AED', 'INR', 'SGD', 'MXN', 'BRL'];\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const rateResponse = await fetch(`https://v6.exchangerate-api.com/v6/f74f34edf584668426ca1f2e/latest/${fromCurrency}`);\n        const rateData = await rateResponse.json();\n        const dates = [];\n        const rates = [];\n        const endDate = new Date(selectedDate);\n        const startDate = new Date(endDate);\n        startDate.setMonth(startDate.getMonth() - 1);\n        for (let d = startDate; d <= endDate; d.setDate(d.getDate() + 5)) {\n          const dateStr = d.toISOString().split('T')[0];\n          const historyResponse = await fetch(`https://v6.exchangerate-api.com/v6/f74f34edf584668426ca1f2e/history/${fromCurrency}/${d.getFullYear()}/${d.getMonth() + 1}/${d.getDate()}`);\n          const historyData = await historyResponse.json();\n          if (historyData.conversion_rates) {\n            dates.push(dateStr);\n            rates.push(historyData.conversion_rates[toCurrency]);\n          }\n        }\n        const allRatesResponse = await fetch(`https://v6.exchangerate-api.com/v6/f74f34edf584668426ca1f2e/latest/USD`);\n        const allRatesData = await allRatesResponse.json();\n        setExchangeRate(rateData.conversion_rates[toCurrency]);\n        setLastUpdated(new Date().toLocaleString());\n        setHistoricalRates({\n          labels: dates,\n          datasets: [{\n            label: `${fromCurrency} ${t.to} ${toCurrency}`,\n            data: rates,\n            fill: false,\n            borderColor: '#4bc0c0',\n            tension: 0.1\n          }]\n        });\n        setCurrencyRates(allRatesData.conversion_rates);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, [fromCurrency, toCurrency, selectedDate, t]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(LanguageSelector, {\n      currentLanguage: currentLanguage,\n      setCurrentLanguage: setCurrentLanguage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: t.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-panel\",\n        children: [/*#__PURE__*/_jsxDEV(CurrencyConverter, {\n          fromCurrency: fromCurrency,\n          setFromCurrency: setFromCurrency,\n          toCurrency: toCurrency,\n          setToCurrency: setToCurrency,\n          amount: amount,\n          setAmount: setAmount,\n          exchangeRate: exchangeRate,\n          lastUpdated: lastUpdated,\n          selectedDate: selectedDate,\n          setSelectedDate: setSelectedDate,\n          currencies: currencies,\n          t: t\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(HistoricalChart, {\n          historicalRates: historicalRates,\n          fromCurrency: fromCurrency,\n          toCurrency: toCurrency,\n          t: t\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PopularCurrencies, {\n        currencyRates: currencyRates,\n        currencies: currencies,\n        t: t\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 332,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"e6ZWVtrr+03YMOtpKdJYBqinbb0=\");\n_c5 = App;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"LanguageSelector\");\n$RefreshReg$(_c2, \"CurrencyConverter\");\n$RefreshReg$(_c3, \"HistoricalChart\");\n$RefreshReg$(_c4, \"PopularCurrencies\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","translations","jsxDEV","_jsxDEV","register","LanguageSelector","_ref","currentLanguage","setCurrentLanguage","t","className","children","Object","keys","map","lang","onClick","languages","fileName","_jsxFileName","lineNumber","columnNumber","_c","CurrencyConverter","_ref2","_s","fromCurrency","setFromCurrency","toCurrency","setToCurrency","amount","setAmount","exchangeRate","lastUpdated","selectedDate","setSelectedDate","currencies","fromInput","setFromInput","toInput","setToInput","showDropdownFrom","setShowDropdownFrom","showDropdownTo","setShowDropdownTo","handleCurrencyChange","type","value","upperValue","toUpperCase","trim","includes","handleSelectCurrency","currency","handleExchange","onChange","e","target","onFocus","placeholder","selectCurrency","filter","currencyNames","min","toFixed","readOnly","convertedAmount","max","Date","toISOString","split","_c2","HistoricalChart","_ref3","historicalRates","chartOptions","responsive","plugins","legend","position","title","display","text","to","exchangeTrend","scales","y","beginAtZero","datasets","data","options","_c3","PopularCurrencies","_ref4","currencyRates","popularCurrencies","_c4","App","_s2","setExchangeRate","setLastUpdated","setHistoricalRates","labels","setCurrencyRates","fetchData","rateResponse","fetch","rateData","json","dates","rates","endDate","startDate","setMonth","getMonth","d","setDate","getDate","dateStr","historyResponse","getFullYear","historyData","conversion_rates","push","allRatesResponse","allRatesData","toLocaleString","label","fill","borderColor","tension","error","console","_c5","$RefreshReg$"],"sources":["E:/Mini-project/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n} from 'chart.js';\nimport { translations } from './translations';\nimport './styles.css';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst LanguageSelector = ({ currentLanguage, setCurrentLanguage }) => {\n  const t = translations[currentLanguage];\n  return (\n    <div className=\"language-selector\">\n      {Object.keys(translations).map((lang) => (\n        <button\n          key={lang}\n          className={`language-button ${currentLanguage === lang ? 'active' : ''}`}\n          onClick={() => setCurrentLanguage(lang)}\n        >\n          {translations[lang].languages[lang]}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nconst CurrencyConverter = ({\n  fromCurrency,\n  setFromCurrency,\n  toCurrency,\n  setToCurrency,\n  amount,\n  setAmount,\n  exchangeRate,\n  lastUpdated,\n  selectedDate,\n  setSelectedDate,\n  currencies,\n  t\n}) => {\n  const [fromInput, setFromInput] = useState(fromCurrency);\n  const [toInput, setToInput] = useState(toCurrency);\n  const [showDropdownFrom, setShowDropdownFrom] = useState(false);\n  const [showDropdownTo, setShowDropdownTo] = useState(false);\n\n  const handleCurrencyChange = (type, value) => {\n    const upperValue = value.toUpperCase().trim();\n    if (currencies.includes(upperValue) || upperValue === '') {\n      if (type === 'from') {\n        setFromCurrency(upperValue);\n        setFromInput(upperValue);\n        setShowDropdownFrom(false);\n      } else {\n        setToCurrency(upperValue);\n        setToInput(upperValue);\n        setShowDropdownTo(false);\n      }\n    } else {\n      if (type === 'from') setFromInput(upperValue);\n      else setToInput(upperValue);\n    }\n  };\n\n  const handleSelectCurrency = (type, currency) => {\n    if (type === 'from') {\n      setFromCurrency(currency);\n      setFromInput(currency);\n      setShowDropdownFrom(false);\n    } else {\n      setToCurrency(currency);\n      setToInput(currency);\n      setShowDropdownTo(false);\n    }\n  };\n\n  const handleExchange = () => {\n    setFromCurrency(toCurrency);\n    setToCurrency(fromCurrency);\n    setFromInput(toInput);\n    setToInput(fromInput);\n  };\n\n  return (\n    <div className=\"converter-container\">\n      <div className=\"currency-inputs\">\n        {/* Currency Selection Row */}\n        <div className=\"currency-row\">\n          <div className=\"currency-input fromCurrency\">\n            <input\n              type=\"text\"\n              value={fromInput}\n              onChange={(e) => {\n                handleCurrencyChange('from', e.target.value);\n                setShowDropdownFrom(true);\n              }}\n              onFocus={() => setShowDropdownFrom(true)}\n              placeholder={t.selectCurrency}\n            />\n            {showDropdownFrom && (\n              <div className=\"dropdown\">\n                {currencies.filter(currency => \n                  currency.toUpperCase().includes(fromInput.toUpperCase())\n                ).map(currency => (\n                  <div\n                    key={currency}\n                    className=\"dropdown-item\"\n                    onClick={() => handleSelectCurrency('from', currency)}\n                  >\n                    {currency} - {t.currencyNames[currency]}\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n\n          <div className=\"exchange-button-container\">\n            <button className=\"exchange-button\" onClick={handleExchange}>\n              <span className=\"exchange-icon\">⇄</span>\n            </button>\n          </div>\n\n          <div className=\"currency-input toCurrency\">\n            <input\n              type=\"text\"\n              value={toInput}\n              onChange={(e) => {\n                handleCurrencyChange('to', e.target.value);\n                setShowDropdownTo(true);\n              }}\n              onFocus={() => setShowDropdownTo(true)}\n              placeholder={t.selectCurrency}\n            />\n            {showDropdownTo && (\n              <div className=\"dropdown\">\n                {currencies.filter(currency => \n                  currency.toUpperCase().includes(toInput.toUpperCase())\n                ).map(currency => (\n                  <div\n                    key={currency}\n                    className=\"dropdown-item\"\n                    onClick={() => handleSelectCurrency('to', currency)}\n                  >\n                    {currency} - {t.currencyNames[currency]}\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Amount Input/Output Row */}\n        <div className=\"amount-row\">\n          <div className=\"amount-input\">\n            <input\n              type=\"number\"\n              value={amount}\n              onChange={(e) => setAmount(e.target.value)}\n              placeholder={t.amount}\n              min=\"0\"\n            />\n          </div>\n          <div className=\"amount-result\">\n            <input\n              type=\"text\"\n              value={exchangeRate ? (amount * exchangeRate).toFixed(2) : ''}\n              readOnly\n              placeholder={t.convertedAmount}\n            />\n          </div>\n        </div>\n\n        <div className=\"date-row\">\n          <div className=\"date-input\">\n            <input\n              type=\"date\"\n              value={selectedDate}\n              onChange={(e) => setSelectedDate(e.target.value)}\n              max={new Date().toISOString().split('T')[0]}\n            />\n          </div>\n          <span className=\"last-updated\">\n            {t.lastUpdated}: {lastUpdated}\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst HistoricalChart = ({ historicalRates, fromCurrency, toCurrency, t }) => {\n  const chartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top',\n      },\n      title: {\n        display: true,\n        text: `${fromCurrency} ${t.to} ${toCurrency} ${t.exchangeTrend}`\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: false,\n        title: {\n          display: true,\n          text: t.exchangeRate\n        }\n      }\n    }\n  };\n\n  return (\n    <div className=\"chart-container\">\n      <h2>{t.historicalRates}</h2>\n      {historicalRates.datasets && (\n        <Line data={historicalRates} options={chartOptions} />\n      )}\n    </div>\n  );\n};\n\n\nconst PopularCurrencies = ({ currencyRates, currencies, t }) => (\n  <div className=\"watchlist-container\">\n    <h2>{t.popularCurrencies}</h2>\n    <div className=\"watchlist\">\n      {currencies.map(currency => (\n        <div key={currency} className=\"watchlist-item\">\n          <span className=\"currency-code\">{currency}</span>\n          <span className=\"currency-name\">{t.currencyNames[currency]}</span>\n          <span className=\"currency-rate\">\n            {currencyRates[currency] ?\n              `1 USD = ${currencyRates[currency].toFixed(4)} ${currency}`\n              : 'Loading...'}\n          </span>\n        </div>\n      ))}\n    </div>\n  </div>\n);\n\n\nexport default function App() {\n  const [fromCurrency, setFromCurrency] = useState('USD');\n  const [toCurrency, setToCurrency] = useState('EUR');\n  const [amount, setAmount] = useState(1);\n  const [exchangeRate, setExchangeRate] = useState(null);\n  const [lastUpdated, setLastUpdated] = useState('');\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]);\n  const [historicalRates, setHistoricalRates] = useState({ labels: [], datasets: [] });\n  const [currentLanguage, setCurrentLanguage] = useState('en');\n  const [currencyRates, setCurrencyRates] = useState({});\n\n  const t = translations[currentLanguage];\n  const currencies = [\n    'USD', 'EUR', 'GBP', 'JPY', 'AUD', 'CAD', 'CHF', 'CNY', 'HKD', 'NZD',\n    'AED', 'INR', 'SGD', 'MXN', 'BRL'\n  ];\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const rateResponse = await fetch(\n          `https://v6.exchangerate-api.com/v6/f74f34edf584668426ca1f2e/latest/${fromCurrency}`\n        );\n        const rateData = await rateResponse.json();\n\n        const dates = [];\n        const rates = [];\n        const endDate = new Date(selectedDate);\n        const startDate = new Date(endDate);\n        startDate.setMonth(startDate.getMonth() - 1);\n\n        for (let d = startDate; d <= endDate; d.setDate(d.getDate() + 5)) {\n          const dateStr = d.toISOString().split('T')[0];\n          const historyResponse = await fetch(\n            `https://v6.exchangerate-api.com/v6/f74f34edf584668426ca1f2e/history/${fromCurrency}/${d.getFullYear()}/${d.getMonth() + 1}/${d.getDate()}`\n          );\n          const historyData = await historyResponse.json();\n          if (historyData.conversion_rates) {\n            dates.push(dateStr);\n            rates.push(historyData.conversion_rates[toCurrency]);\n          }\n        }\n\n\n        const allRatesResponse = await fetch(\n          `https://v6.exchangerate-api.com/v6/f74f34edf584668426ca1f2e/latest/USD`\n        );\n        const allRatesData = await allRatesResponse.json();\n\n\n        setExchangeRate(rateData.conversion_rates[toCurrency]);\n        setLastUpdated(new Date().toLocaleString());\n        setHistoricalRates({\n          labels: dates,\n          datasets: [{\n            label: `${fromCurrency} ${t.to} ${toCurrency}`,\n            data: rates,\n            fill: false,\n            borderColor: '#4bc0c0',\n            tension: 0.1\n          }]\n        });\n        setCurrencyRates(allRatesData.conversion_rates);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    fetchData();\n  }, [fromCurrency, toCurrency, selectedDate, t]);\n\n  return (\n    <div className=\"app\">\n      <LanguageSelector\n        currentLanguage={currentLanguage}\n        setCurrentLanguage={setCurrentLanguage}\n      />\n      <h1>{t.title}</h1>\n\n      <div className=\"main-container\">\n        <div className=\"left-panel\">\n          <CurrencyConverter\n            fromCurrency={fromCurrency}\n            setFromCurrency={setFromCurrency}\n            toCurrency={toCurrency}\n            setToCurrency={setToCurrency}\n            amount={amount}\n            setAmount={setAmount}\n            exchangeRate={exchangeRate}\n            lastUpdated={lastUpdated}\n            selectedDate={selectedDate}\n            setSelectedDate={setSelectedDate}\n            currencies={currencies}\n            t={t}\n          />\n          <HistoricalChart\n            historicalRates={historicalRates}\n            fromCurrency={fromCurrency}\n            toCurrency={toCurrency}\n            t={t}\n          />\n        </div>\n\n        <PopularCurrencies\n          currencyRates={currencyRates}\n          currencies={currencies}\n          t={t}\n        />\n      </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}