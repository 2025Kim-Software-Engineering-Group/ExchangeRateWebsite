{"ast":null,"code":"var _jsxFileName = \"E:\\\\Mini-project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { translations } from './translations';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nfunction App() {\n  _s();\n  const [fromCurrency, setFromCurrency] = useState('USD');\n  const [toCurrency, setToCurrency] = useState('EUR');\n  const [amount, setAmount] = useState(1);\n  const [exchangeRate, setExchangeRate] = useState(null);\n  const [lastUpdated, setLastUpdated] = useState('');\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]);\n  const [historicalRates, setHistoricalRates] = useState([]);\n  const [fromInput, setFromInput] = useState('USD');\n  const [toInput, setToInput] = useState('EUR');\n  const [showFromDropdown, setShowFromDropdown] = useState(false);\n  const [showToDropdown, setShowToDropdown] = useState(false);\n  const [currentLanguage, setCurrentLanguage] = useState('en');\n  const t = translations[currentLanguage];\n  const currencies = ['USD', 'EUR', 'GBP', 'JPY', 'AUD', 'CAD', 'CHF', 'CNY', 'HKD', 'NZD', 'AED', 'INR', 'SGD', 'MXN', 'BRL'];\n  const fromDropdownRef = useRef(null);\n  const toDropdownRef = useRef(null);\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (fromDropdownRef.current && !fromDropdownRef.current.contains(event.target)) {\n        setShowFromDropdown(false);\n      }\n      if (toDropdownRef.current && !toDropdownRef.current.contains(event.target)) {\n        setShowToDropdown(false);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n  useEffect(() => {\n    fetchExchangeRate();\n    fetchHistoricalRates();\n  }, [fromCurrency, toCurrency, selectedDate]);\n  const fetchExchangeRate = async () => {\n    try {\n      const response = await fetch(`https://api.exchangerate-api.com/v4/latest/${fromCurrency}`);\n      const data = await response.json();\n      setExchangeRate(data.rates[toCurrency]);\n      setLastUpdated(new Date().toLocaleString());\n    } catch (error) {\n      console.error('Error fetching exchange rate:', error);\n    }\n  };\n  const fetchHistoricalRates = async () => {\n    try {\n      const dates = [];\n      const rates = [];\n      const endDate = new Date();\n      const startDate = new Date();\n      startDate.setMonth(startDate.getMonth() - 1);\n      for (let d = startDate; d <= endDate; d.setDate(d.getDate() + 5)) {\n        const dateStr = d.toISOString().split('T')[0];\n        const response = await fetch(`https://api.exchangerate-api.com/v4/latest/${fromCurrency}`);\n        const data = await response.json();\n        dates.push(dateStr);\n        rates.push(data.rates[toCurrency]);\n      }\n      setHistoricalRates({\n        labels: dates,\n        datasets: [{\n          label: `${fromCurrency} to ${toCurrency}`,\n          data: rates,\n          fill: false,\n          borderColor: 'rgb(75, 192, 192)',\n          tension: 0.1\n        }]\n      });\n    } catch (error) {\n      console.error('Error fetching historical rates:', error);\n    }\n  };\n  const convertAmount = () => {\n    if (exchangeRate === null) return '';\n    return (amount * exchangeRate).toFixed(2);\n  };\n  const handleFromInputChange = e => {\n    setFromInput(e.target.value.toUpperCase());\n    setShowFromDropdown(true);\n  };\n  const handleToInputChange = e => {\n    setToInput(e.target.value.toUpperCase());\n    setShowToDropdown(true);\n  };\n  const handleFromCurrencySelect = currency => {\n    setFromCurrency(currency);\n    setFromInput(currency);\n    setShowFromDropdown(false);\n  };\n  const handleToCurrencySelect = currency => {\n    setToCurrency(currency);\n    setToInput(currency);\n    setShowToDropdown(false);\n  };\n  const handleAmountChange = e => {\n    setAmount(e.target.value);\n  };\n  const handleDateChange = e => {\n    setSelectedDate(e.target.value);\n  };\n  const filteredFromCurrencies = currencies.filter(currency => currency.includes(fromInput));\n  const filteredToCurrencies = currencies.filter(currency => currency.includes(toInput));\n  const LanguageSelector = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"language-selector\",\n    children: Object.keys(translations).map(lang => /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `language-button ${currentLanguage === lang ? 'active' : ''}`,\n      onClick: () => setCurrentLanguage(lang),\n      children: translations[lang].languages[lang]\n    }, lang, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n  const chartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Exchange Rate Trend'\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: false\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(LanguageSelector, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: t.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"converter-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"currency-inputs\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"currency-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"currency-input\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"currency-select\",\n                  ref: fromDropdownRef,\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: fromInput,\n                    onChange: handleFromInputChange,\n                    onFocus: () => setShowFromDropdown(true),\n                    placeholder: t.selectCurrency\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 202,\n                    columnNumber: 21\n                  }, this), showFromDropdown && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"currency-dropdown\",\n                    children: filteredFromCurrencies.map(currency => /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"currency-option\",\n                      onClick: () => handleFromCurrencySelect(currency),\n                      children: [currency, \" - \", t.currencyNames[currency]]\n                    }, currency, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 212,\n                      columnNumber: 27\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 210,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"currency-input\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"currency-select\",\n                  ref: toDropdownRef,\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: toInput,\n                    onChange: handleToInputChange,\n                    onFocus: () => setShowToDropdown(true),\n                    placeholder: t.selectCurrency\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 227,\n                    columnNumber: 21\n                  }, this), showToDropdown && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"currency-dropdown\",\n                    children: filteredToCurrencies.map(currency => /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"currency-option\",\n                      onClick: () => handleToCurrencySelect(currency),\n                      children: [currency, \" - \", t.currencyNames[currency]]\n                    }, currency, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 237,\n                      columnNumber: 27\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"amount-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"amount-input\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  value: amount,\n                  onChange: handleAmountChange,\n                  placeholder: t.amount\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"amount-result\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: convertAmount(),\n                  readOnly: true,\n                  placeholder: t.convertedAmount\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"date-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"date-input\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"date\",\n                  value: selectedDate,\n                  onChange: handleDateChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"last-updated\",\n                children: [t.lastUpdated, \": \", lastUpdated]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [t.historicalRates, \": \", fromCurrency, \" \", t.to, \" \", toCurrency]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this), historicalRates.datasets && /*#__PURE__*/_jsxDEV(Line, {\n            data: historicalRates,\n            options: chartOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"watchlist-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: t.popularCurrencies\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"watchlist\",\n          children: currencies.map(currency => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"watchlist-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"currency-code\",\n              children: currency\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"currency-name\",\n              children: t.currencyNames[currency]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 17\n            }, this)]\n          }, currency, true, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"KhIl/sq6TN7MP7mUiqkyS8n2x1U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","translations","jsxDEV","_jsxDEV","register","App","_s","fromCurrency","setFromCurrency","toCurrency","setToCurrency","amount","setAmount","exchangeRate","setExchangeRate","lastUpdated","setLastUpdated","selectedDate","setSelectedDate","Date","toISOString","split","historicalRates","setHistoricalRates","fromInput","setFromInput","toInput","setToInput","showFromDropdown","setShowFromDropdown","showToDropdown","setShowToDropdown","currentLanguage","setCurrentLanguage","t","currencies","fromDropdownRef","toDropdownRef","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","fetchExchangeRate","fetchHistoricalRates","response","fetch","data","json","rates","toLocaleString","error","console","dates","endDate","startDate","setMonth","getMonth","d","setDate","getDate","dateStr","push","labels","datasets","label","fill","borderColor","tension","convertAmount","toFixed","handleFromInputChange","e","value","toUpperCase","handleToInputChange","handleFromCurrencySelect","currency","handleToCurrencySelect","handleAmountChange","handleDateChange","filteredFromCurrencies","filter","includes","filteredToCurrencies","LanguageSelector","className","children","Object","keys","map","lang","onClick","languages","fileName","_jsxFileName","lineNumber","columnNumber","chartOptions","responsive","plugins","legend","position","title","display","text","scales","y","beginAtZero","ref","type","onChange","onFocus","placeholder","selectCurrency","currencyNames","readOnly","convertedAmount","to","options","popularCurrencies","_c","$RefreshReg$"],"sources":["E:/Mini-project/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n} from 'chart.js';\nimport { translations } from './translations';\nimport './App.css';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nfunction App() {\n  const [fromCurrency, setFromCurrency] = useState('USD');\n  const [toCurrency, setToCurrency] = useState('EUR');\n  const [amount, setAmount] = useState(1);\n  const [exchangeRate, setExchangeRate] = useState(null);\n  const [lastUpdated, setLastUpdated] = useState('');\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]);\n  const [historicalRates, setHistoricalRates] = useState([]);\n  const [fromInput, setFromInput] = useState('USD');\n  const [toInput, setToInput] = useState('EUR');\n  const [showFromDropdown, setShowFromDropdown] = useState(false);\n  const [showToDropdown, setShowToDropdown] = useState(false);\n  const [currentLanguage, setCurrentLanguage] = useState('en');\n\n  const t = translations[currentLanguage];\n\n  const currencies = [\n    'USD', 'EUR', 'GBP', 'JPY', 'AUD', 'CAD', 'CHF', 'CNY', 'HKD', 'NZD',\n    'AED', 'INR', 'SGD', 'MXN', 'BRL'\n  ];\n\n  const fromDropdownRef = useRef(null);\n  const toDropdownRef = useRef(null);\n\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (fromDropdownRef.current && !fromDropdownRef.current.contains(event.target)) {\n        setShowFromDropdown(false);\n      }\n      if (toDropdownRef.current && !toDropdownRef.current.contains(event.target)) {\n        setShowToDropdown(false);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n\n  useEffect(() => {\n    fetchExchangeRate();\n    fetchHistoricalRates();\n  }, [fromCurrency, toCurrency, selectedDate]);\n\n  const fetchExchangeRate = async () => {\n    try {\n      const response = await fetch(`https://api.exchangerate-api.com/v4/latest/${fromCurrency}`);\n      const data = await response.json();\n      setExchangeRate(data.rates[toCurrency]);\n      setLastUpdated(new Date().toLocaleString());\n    } catch (error) {\n      console.error('Error fetching exchange rate:', error);\n    }\n  };\n\n  const fetchHistoricalRates = async () => {\n    try {\n      const dates = [];\n      const rates = [];\n      const endDate = new Date();\n      const startDate = new Date();\n      startDate.setMonth(startDate.getMonth() - 1);\n\n      for (let d = startDate; d <= endDate; d.setDate(d.getDate() + 5)) {\n        const dateStr = d.toISOString().split('T')[0];\n        const response = await fetch(`https://api.exchangerate-api.com/v4/latest/${fromCurrency}`);\n        const data = await response.json();\n        dates.push(dateStr);\n        rates.push(data.rates[toCurrency]);\n      }\n\n      setHistoricalRates({\n        labels: dates,\n        datasets: [\n          {\n            label: `${fromCurrency} to ${toCurrency}`,\n            data: rates,\n            fill: false,\n            borderColor: 'rgb(75, 192, 192)',\n            tension: 0.1\n          }\n        ]\n      });\n    } catch (error) {\n      console.error('Error fetching historical rates:', error);\n    }\n  };\n\n  const convertAmount = () => {\n    if (exchangeRate === null) return '';\n    return (amount * exchangeRate).toFixed(2);\n  };\n\n  const handleFromInputChange = (e) => {\n    setFromInput(e.target.value.toUpperCase());\n    setShowFromDropdown(true);\n  };\n\n  const handleToInputChange = (e) => {\n    setToInput(e.target.value.toUpperCase());\n    setShowToDropdown(true);\n  };\n\n  const handleFromCurrencySelect = (currency) => {\n    setFromCurrency(currency);\n    setFromInput(currency);\n    setShowFromDropdown(false);\n  };\n\n  const handleToCurrencySelect = (currency) => {\n    setToCurrency(currency);\n    setToInput(currency);\n    setShowToDropdown(false);\n  };\n\n  const handleAmountChange = (e) => {\n    setAmount(e.target.value);\n  };\n\n  const handleDateChange = (e) => {\n    setSelectedDate(e.target.value);\n  };\n\n  const filteredFromCurrencies = currencies.filter(currency =>\n    currency.includes(fromInput)\n  );\n\n  const filteredToCurrencies = currencies.filter(currency =>\n    currency.includes(toInput)\n  );\n\n  const LanguageSelector = () => (\n    <div className=\"language-selector\">\n      {Object.keys(translations).map((lang) => (\n        <button\n          key={lang}\n          className={`language-button ${currentLanguage === lang ? 'active' : ''}`}\n          onClick={() => setCurrentLanguage(lang)}\n        >\n          {translations[lang].languages[lang]}\n        </button>\n      ))}\n    </div>\n  );\n\n  const chartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top',\n      },\n      title: {\n        display: true,\n        text: 'Exchange Rate Trend'\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: false\n      }\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <LanguageSelector />\n      <h1>{t.title}</h1>\n      \n      <div className=\"main-container\">\n        <div className=\"left-panel\">\n          <div className=\"converter-container\">\n            <div className=\"currency-inputs\">\n              <div className=\"currency-row\">\n                <div className=\"currency-input\">\n                  <div className=\"currency-select\" ref={fromDropdownRef}>\n                    <input\n                      type=\"text\"\n                      value={fromInput}\n                      onChange={handleFromInputChange}\n                      onFocus={() => setShowFromDropdown(true)}\n                      placeholder={t.selectCurrency}\n                    />\n                    {showFromDropdown && (\n                      <div className=\"currency-dropdown\">\n                        {filteredFromCurrencies.map(currency => (\n                          <div\n                            key={currency}\n                            className=\"currency-option\"\n                            onClick={() => handleFromCurrencySelect(currency)}\n                          >\n                            {currency} - {t.currencyNames[currency]}\n                          </div>\n                        ))}\n                      </div>\n                    )}\n                  </div>\n                </div>\n                \n                <div className=\"currency-input\">\n                  <div className=\"currency-select\" ref={toDropdownRef}>\n                    <input\n                      type=\"text\"\n                      value={toInput}\n                      onChange={handleToInputChange}\n                      onFocus={() => setShowToDropdown(true)}\n                      placeholder={t.selectCurrency}\n                    />\n                    {showToDropdown && (\n                      <div className=\"currency-dropdown\">\n                        {filteredToCurrencies.map(currency => (\n                          <div\n                            key={currency}\n                            className=\"currency-option\"\n                            onClick={() => handleToCurrencySelect(currency)}\n                          >\n                            {currency} - {t.currencyNames[currency]}\n                          </div>\n                        ))}\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"amount-row\">\n                <div className=\"amount-input\">\n                  <input\n                    type=\"number\"\n                    value={amount}\n                    onChange={handleAmountChange}\n                    placeholder={t.amount}\n                  />\n                </div>\n                <div className=\"amount-result\">\n                  <input\n                    type=\"text\"\n                    value={convertAmount()}\n                    readOnly\n                    placeholder={t.convertedAmount}\n                  />\n                </div>\n              </div>\n\n              <div className=\"date-row\">\n                <div className=\"date-input\">\n                  <input\n                    type=\"date\"\n                    value={selectedDate}\n                    onChange={handleDateChange}\n                  />\n                </div>\n                <span className=\"last-updated\">\n                  {t.lastUpdated}: {lastUpdated}\n                </span>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"chart-container\">\n            <h2>{t.historicalRates}: {fromCurrency} {t.to} {toCurrency}</h2>\n            {historicalRates.datasets && (\n              <Line data={historicalRates} options={chartOptions} />\n            )}\n          </div>\n        </div>\n\n        <div className=\"watchlist-container\">\n          <h2>{t.popularCurrencies}</h2>\n          <div className=\"watchlist\">\n            {currencies.map(currency => (\n              <div key={currency} className=\"watchlist-item\">\n                <span className=\"currency-code\">{currency}</span>\n                <span className=\"currency-name\">{t.currencyNames[currency]}</span>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}