{"ast":null,"code":"var _jsxFileName = \"E:\\\\Mini-project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport exchangeIcon from './ExchangeButton.png';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CURRENCY_FLAGS = {\n  USD: \"ðŸ‡ºðŸ‡¸\",\n  EUR: \"ðŸ‡ªðŸ‡º\",\n  GBP: \"ðŸ‡¬ðŸ‡§\",\n  JPY: \"ðŸ‡¯ðŸ‡µ\",\n  AUD: \"ðŸ‡¦ðŸ‡º\",\n  CAD: \"ðŸ‡¨ðŸ‡¦\",\n  CHF: \"ðŸ‡¨ðŸ‡­\",\n  CNY: \"ðŸ‡¨ðŸ‡³\",\n  HKD: \"ðŸ‡­ðŸ‡°\",\n  NZD: \"ðŸ‡³ðŸ‡¿\",\n  AED: \"ðŸ‡¦ðŸ‡ª\",\n  INR: \"ðŸ‡®ðŸ‡³\",\n  SGD: \"ðŸ‡¸ðŸ‡¬\",\n  MXN: \"ðŸ‡²ðŸ‡½\",\n  BRL: \"ðŸ‡§ðŸ‡·\"\n};\nconst CURRENCY_NAMES = {\n  USD: \"US Dollar\",\n  EUR: \"Euro\",\n  GBP: \"British Pound\",\n  JPY: \"Japanese Yen\",\n  AUD: \"Australian Dollar\",\n  CAD: \"Canadian Dollar\",\n  CHF: \"Swiss Franc\",\n  CNY: \"Chinese Yuan\",\n  HKD: \"Hong Kong Dollar\",\n  NZD: \"New Zealand Dollar\",\n  AED: \"UAE Dirham\",\n  INR: \"Indian Rupee\",\n  SGD: \"Singapore Dollar\",\n  MXN: \"Mexican Peso\",\n  BRL: \"Brazilian Real\"\n};\nfunction LineChart(_ref) {\n  let {\n    data,\n    width = 600,\n    height = 300\n  } = _ref;\n  const padding = {\n    top: 20,\n    right: 30,\n    bottom: 30,\n    left: 50\n  };\n  const chartWidth = width - padding.left - padding.right;\n  const chartHeight = height - padding.top - padding.bottom;\n  const minRate = Math.min(...data.map(d => d.rate));\n  const maxRate = Math.max(...data.map(d => d.rate));\n  const dates = data.map(d => new Date(d.date));\n  const minDate = Math.min(...dates);\n  const maxDate = Math.max(...dates);\n  const xScale = date => {\n    return padding.left + (new Date(date) - minDate) / (maxDate - minDate) * chartWidth;\n  };\n  const yScale = rate => {\n    return height - padding.bottom - (rate - minRate) / (maxRate - minRate) * chartHeight;\n  };\n  const pathData = data.map((point, index) => {\n    const x = xScale(point.date);\n    const y = yScale(point.rate);\n    return index === 0 ? `M ${x},${y}` : `L ${x},${y}`;\n  }).join(' ');\n  const xTicks = data.filter((_, i) => i % 5 === 0).map(point => ({\n    x: xScale(point.date),\n    label: new Date(point.date).toLocaleDateString()\n  }));\n  const yTickCount = 5;\n  const yTicks = Array.from({\n    length: yTickCount\n  }).map((_, i) => {\n    const rate = minRate + (maxRate - minRate) * (i / (yTickCount - 1));\n    return {\n      y: yScale(rate),\n      label: rate.toFixed(2)\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: width,\n    height: height,\n    children: [/*#__PURE__*/_jsxDEV(\"line\", {\n      x1: padding.left,\n      y1: height - padding.bottom,\n      x2: width - padding.right,\n      y2: height - padding.bottom,\n      stroke: \"black\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n      x1: padding.left,\n      y1: padding.top,\n      x2: padding.left,\n      y2: height - padding.bottom,\n      stroke: \"black\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), xTicks.map((tick, i) => /*#__PURE__*/_jsxDEV(\"g\", {\n      children: [/*#__PURE__*/_jsxDEV(\"line\", {\n        x1: tick.x,\n        y1: height - padding.bottom,\n        x2: tick.x,\n        y2: height - padding.bottom + 5,\n        stroke: \"black\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: tick.x,\n        y: height - padding.bottom + 20,\n        textAnchor: \"middle\",\n        fontSize: \"12\",\n        children: tick.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)), yTicks.map((tick, i) => /*#__PURE__*/_jsxDEV(\"g\", {\n      children: [/*#__PURE__*/_jsxDEV(\"line\", {\n        x1: padding.left - 5,\n        y1: tick.y,\n        x2: padding.left,\n        y2: tick.y,\n        stroke: \"black\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: padding.left - 10,\n        y: tick.y,\n        textAnchor: \"end\",\n        alignmentBaseline: \"middle\",\n        fontSize: \"12\",\n        children: tick.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: pathData,\n      fill: \"none\",\n      stroke: \"blue\",\n      strokeWidth: \"2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_c = LineChart;\nfunction App() {\n  _s();\n  const [rates, setRates] = useState({});\n  const [fromCurrency, setFromCurrency] = useState(\"USD\");\n  const [toCurrency, setToCurrency] = useState(\"EUR\");\n  const [amount, setAmount] = useState(1);\n  const [fromInput, setFromInput] = useState(`USD - ${CURRENCY_NAMES.USD}`);\n  const [toInput, setToInput] = useState(`EUR - ${CURRENCY_NAMES.EUR}`);\n  const [historicalData, setHistoricalData] = useState([]);\n  const [showFromDropdown, setShowFromDropdown] = useState(false);\n  const [showToDropdown, setShowToDropdown] = useState(false);\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]);\n  const [lastUpdated, setLastUpdated] = useState('');\n  useEffect(() => {\n    fetchRates();\n  }, []);\n  const fetchRates = async () => {\n    try {\n      const response = await fetch('https://v6.exchangerate-api.com/v6/dd875ed8009b2e791ff987e6/latest/USD');\n      const data = await response.json();\n      if (data.result === \"success\") {\n        setRates(data.conversion_rates);\n        setLastUpdated(new Date(data.time_last_update_utc).toLocaleString());\n        const baseRate = data.conversion_rates[toCurrency];\n        const today = new Date();\n        const historicalPoints = Array.from({\n          length: 30\n        }, (_, i) => {\n          const date = new Date();\n          date.setDate(today.getDate() - (29 - i));\n          const variation = (Math.random() - 0.5) * 0.02;\n          return {\n            date: date.toISOString().split('T')[0],\n            rate: baseRate * (1 + variation)\n          };\n        });\n        setHistoricalData(historicalPoints);\n      }\n    } catch (error) {\n      console.error(\"Error fetching rates:\", error);\n    }\n  };\n  const handleFromCurrencySelect = code => {\n    setFromCurrency(code);\n    setFromInput(`${code} - ${CURRENCY_NAMES[code]}`);\n    setShowFromDropdown(false);\n  };\n  const handleToCurrencySelect = code => {\n    setToCurrency(code);\n    setToInput(`${code} - ${CURRENCY_NAMES[code]}`);\n    setShowToDropdown(false);\n  };\n  const handleFromInputChange = e => {\n    const value = e.target.value;\n    setFromInput(value);\n    setShowFromDropdown(true);\n  };\n  const handleToInputChange = e => {\n    const value = e.target.value;\n    setToInput(value);\n    setShowToDropdown(true);\n  };\n  const handleAmountChange = e => {\n    const value = e.target.value;\n    if (value >= 0) {\n      setAmount(value);\n    }\n  };\n  const handleDateChange = e => {\n    setSelectedDate(e.target.value);\n  };\n  const handleSwapCurrencies = () => {\n    setFromCurrency(toCurrency);\n    setToCurrency(fromCurrency);\n    setFromInput(`${toCurrency} - ${CURRENCY_NAMES[toCurrency]}`);\n    setToInput(`${fromCurrency} - ${CURRENCY_NAMES[fromCurrency]}`);\n  };\n  const convertAmount = () => {\n    if (!rates[fromCurrency] || !rates[toCurrency]) return 0;\n    const rateFrom = rates[fromCurrency];\n    const rateTo = rates[toCurrency];\n    return (amount / rateFrom * rateTo).toFixed(2);\n  };\n  const filteredFromCurrencies = Object.keys(CURRENCY_NAMES).filter(code => `${code} - ${CURRENCY_NAMES[code]}`.toLowerCase().includes(fromInput.toLowerCase()));\n  const filteredToCurrencies = Object.keys(CURRENCY_NAMES).filter(code => `${code} - ${CURRENCY_NAMES[code]}`.toLowerCase().includes(toInput.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Currency Exchange Rate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"converter-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"currency-inputs\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"currency-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"currency-input\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"currency-select\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: fromInput,\n                    onChange: handleFromInputChange,\n                    onFocus: () => setShowFromDropdown(true),\n                    placeholder: \"Select currency\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 238,\n                    columnNumber: 21\n                  }, this), showFromDropdown && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"dropdown\",\n                    children: filteredFromCurrencies.map(code => /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"dropdown-item\",\n                      onClick: () => handleFromCurrencySelect(code),\n                      children: [CURRENCY_FLAGS[code], \" \", code, \" - \", CURRENCY_NAMES[code]]\n                    }, code, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 248,\n                      columnNumber: 27\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 246,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"exchange-button\",\n                onClick: handleSwapCurrencies,\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: exchangeIcon,\n                  alt: \"Swap currencies\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"currency-input\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"currency-select\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: toInput,\n                    onChange: handleToInputChange,\n                    onFocus: () => setShowToDropdown(true),\n                    placeholder: \"Select currency\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 267,\n                    columnNumber: 21\n                  }, this), showToDropdown && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"dropdown\",\n                    children: filteredToCurrencies.map(code => /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"dropdown-item\",\n                      onClick: () => handleToCurrencySelect(code),\n                      children: [CURRENCY_FLAGS[code], \" \", code, \" - \", CURRENCY_NAMES[code]]\n                    }, code, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 277,\n                      columnNumber: 27\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 275,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"amount-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"amount-input\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  value: amount,\n                  onChange: handleAmountChange,\n                  placeholder: \"Amount\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"amount-result\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: convertAmount(),\n                  readOnly: true,\n                  placeholder: \"Converted amount\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"date-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"date-input\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"date\",\n                  value: selectedDate,\n                  onChange: handleDateChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"last-updated\",\n                children: [\"Last updated: \", lastUpdated]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Historical Rates: \", fromCurrency, \" to \", toCurrency]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart\",\n            children: /*#__PURE__*/_jsxDEV(LineChart, {\n              data: historicalData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"watchlist-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Popular Currencies\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"watchlist-items\",\n          children: Object.entries(rates).filter(_ref2 => {\n            let [code] = _ref2;\n            return CURRENCY_FLAGS[code];\n          }).slice(0, 8).map(_ref3 => {\n            let [code, rate] = _ref3;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"watchlist-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [CURRENCY_FLAGS[code], \" \", code]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: rate.toFixed(4)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 19\n              }, this)]\n            }, code, true, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 228,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/NwHn7lHr6bJcsJ7jA1x9PSVXLY=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"LineChart\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","exchangeIcon","jsxDEV","_jsxDEV","CURRENCY_FLAGS","USD","EUR","GBP","JPY","AUD","CAD","CHF","CNY","HKD","NZD","AED","INR","SGD","MXN","BRL","CURRENCY_NAMES","LineChart","_ref","data","width","height","padding","top","right","bottom","left","chartWidth","chartHeight","minRate","Math","min","map","d","rate","maxRate","max","dates","Date","date","minDate","maxDate","xScale","yScale","pathData","point","index","x","y","join","xTicks","filter","_","i","label","toLocaleDateString","yTickCount","yTicks","Array","from","length","toFixed","children","x1","y1","x2","y2","stroke","fileName","_jsxFileName","lineNumber","columnNumber","tick","textAnchor","fontSize","alignmentBaseline","fill","strokeWidth","_c","App","_s","rates","setRates","fromCurrency","setFromCurrency","toCurrency","setToCurrency","amount","setAmount","fromInput","setFromInput","toInput","setToInput","historicalData","setHistoricalData","showFromDropdown","setShowFromDropdown","showToDropdown","setShowToDropdown","selectedDate","setSelectedDate","toISOString","split","lastUpdated","setLastUpdated","fetchRates","response","fetch","json","result","conversion_rates","time_last_update_utc","toLocaleString","baseRate","today","historicalPoints","setDate","getDate","variation","random","error","console","handleFromCurrencySelect","code","handleToCurrencySelect","handleFromInputChange","e","value","target","handleToInputChange","handleAmountChange","handleDateChange","handleSwapCurrencies","convertAmount","rateFrom","rateTo","filteredFromCurrencies","Object","keys","toLowerCase","includes","filteredToCurrencies","className","type","onChange","onFocus","placeholder","onClick","src","alt","readOnly","entries","_ref2","slice","_ref3","_c2","$RefreshReg$"],"sources":["E:/Mini-project/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport exchangeIcon from './ExchangeButton.png';\nimport './styles.css';\n\nconst CURRENCY_FLAGS = {\n  USD: \"ðŸ‡ºðŸ‡¸\", EUR: \"ðŸ‡ªðŸ‡º\", GBP: \"ðŸ‡¬ðŸ‡§\", JPY: \"ðŸ‡¯ðŸ‡µ\", AUD: \"ðŸ‡¦ðŸ‡º\",\n  CAD: \"ðŸ‡¨ðŸ‡¦\", CHF: \"ðŸ‡¨ðŸ‡­\", CNY: \"ðŸ‡¨ðŸ‡³\", HKD: \"ðŸ‡­ðŸ‡°\", NZD: \"ðŸ‡³ðŸ‡¿\",\n  AED: \"ðŸ‡¦ðŸ‡ª\", INR: \"ðŸ‡®ðŸ‡³\", SGD: \"ðŸ‡¸ðŸ‡¬\", MXN: \"ðŸ‡²ðŸ‡½\", BRL: \"ðŸ‡§ðŸ‡·\"\n};\n\nconst CURRENCY_NAMES = {\n  USD: \"US Dollar\", EUR: \"Euro\", GBP: \"British Pound\", JPY: \"Japanese Yen\",\n  AUD: \"Australian Dollar\", CAD: \"Canadian Dollar\", CHF: \"Swiss Franc\",\n  CNY: \"Chinese Yuan\", HKD: \"Hong Kong Dollar\", NZD: \"New Zealand Dollar\",\n  AED: \"UAE Dirham\", INR: \"Indian Rupee\", SGD: \"Singapore Dollar\",\n  MXN: \"Mexican Peso\", BRL: \"Brazilian Real\"\n};\n\nfunction LineChart({ data, width = 600, height = 300 }) {\n  const padding = { top: 20, right: 30, bottom: 30, left: 50 };\n  const chartWidth = width - padding.left - padding.right;\n  const chartHeight = height - padding.top - padding.bottom;\n\n  const minRate = Math.min(...data.map(d => d.rate));\n  const maxRate = Math.max(...data.map(d => d.rate));\n  const dates = data.map(d => new Date(d.date));\n  const minDate = Math.min(...dates);\n  const maxDate = Math.max(...dates);\n\n  const xScale = (date) => {\n    return padding.left + ((new Date(date) - minDate) / (maxDate - minDate)) * chartWidth;\n  };\n\n  const yScale = (rate) => {\n    return height - padding.bottom - ((rate - minRate) / (maxRate - minRate)) * chartHeight;\n  };\n\n  const pathData = data.map((point, index) => {\n    const x = xScale(point.date);\n    const y = yScale(point.rate);\n    return index === 0 ? `M ${x},${y}` : `L ${x},${y}`;\n  }).join(' ');\n\n  const xTicks = data.filter((_, i) => i % 5 === 0).map(point => ({\n    x: xScale(point.date),\n    label: new Date(point.date).toLocaleDateString()\n  }));\n\n  const yTickCount = 5;\n  const yTicks = Array.from({ length: yTickCount }).map((_, i) => {\n    const rate = minRate + (maxRate - minRate) * (i / (yTickCount - 1));\n    return {\n      y: yScale(rate),\n      label: rate.toFixed(2)\n    };\n  });\n\n  return (\n    <svg width={width} height={height}>\n      <line\n        x1={padding.left}\n        y1={height - padding.bottom}\n        x2={width - padding.right}\n        y2={height - padding.bottom}\n        stroke=\"black\"\n      />\n      \n      <line\n        x1={padding.left}\n        y1={padding.top}\n        x2={padding.left}\n        y2={height - padding.bottom}\n        stroke=\"black\"\n      />\n\n      {xTicks.map((tick, i) => (\n        <g key={i}>\n          <line\n            x1={tick.x}\n            y1={height - padding.bottom}\n            x2={tick.x}\n            y2={height - padding.bottom + 5}\n            stroke=\"black\"\n          />\n          <text\n            x={tick.x}\n            y={height - padding.bottom + 20}\n            textAnchor=\"middle\"\n            fontSize=\"12\"\n          >\n            {tick.label}\n          </text>\n        </g>\n      ))}\n\n      {yTicks.map((tick, i) => (\n        <g key={i}>\n          <line\n            x1={padding.left - 5}\n            y1={tick.y}\n            x2={padding.left}\n            y2={tick.y}\n            stroke=\"black\"\n          />\n          <text\n            x={padding.left - 10}\n            y={tick.y}\n            textAnchor=\"end\"\n            alignmentBaseline=\"middle\"\n            fontSize=\"12\"\n          >\n            {tick.label}\n          </text>\n        </g>\n      ))}\n\n      <path\n        d={pathData}\n        fill=\"none\"\n        stroke=\"blue\"\n        strokeWidth=\"2\"\n      />\n    </svg>\n  );\n}\n\nfunction App() {\n  const [rates, setRates] = useState({});\n  const [fromCurrency, setFromCurrency] = useState(\"USD\");\n  const [toCurrency, setToCurrency] = useState(\"EUR\");\n  const [amount, setAmount] = useState(1);\n  const [fromInput, setFromInput] = useState(`USD - ${CURRENCY_NAMES.USD}`);\n  const [toInput, setToInput] = useState(`EUR - ${CURRENCY_NAMES.EUR}`);\n  const [historicalData, setHistoricalData] = useState([]);\n  const [showFromDropdown, setShowFromDropdown] = useState(false);\n  const [showToDropdown, setShowToDropdown] = useState(false);\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]);\n  const [lastUpdated, setLastUpdated] = useState('');\n\n  useEffect(() => {\n    fetchRates();\n  }, []);\n\n  const fetchRates = async () => {\n    try {\n      const response = await fetch('https://v6.exchangerate-api.com/v6/dd875ed8009b2e791ff987e6/latest/USD');\n      const data = await response.json();\n      if (data.result === \"success\") {\n        setRates(data.conversion_rates);\n        setLastUpdated(new Date(data.time_last_update_utc).toLocaleString());\n        \n        const baseRate = data.conversion_rates[toCurrency];\n        const today = new Date();\n        const historicalPoints = Array.from({ length: 30 }, (_, i) => {\n          const date = new Date();\n          date.setDate(today.getDate() - (29 - i));\n          const variation = (Math.random() - 0.5) * 0.02;\n          return {\n            date: date.toISOString().split('T')[0],\n            rate: baseRate * (1 + variation)\n          };\n        });\n        setHistoricalData(historicalPoints);\n      }\n    } catch (error) {\n      console.error(\"Error fetching rates:\", error);\n    }\n  };\n\n  const handleFromCurrencySelect = (code) => {\n    setFromCurrency(code);\n    setFromInput(`${code} - ${CURRENCY_NAMES[code]}`);\n    setShowFromDropdown(false);\n  };\n\n  const handleToCurrencySelect = (code) => {\n    setToCurrency(code);\n    setToInput(`${code} - ${CURRENCY_NAMES[code]}`);\n    setShowToDropdown(false);\n  };\n\n  const handleFromInputChange = (e) => {\n    const value = e.target.value;\n    setFromInput(value);\n    setShowFromDropdown(true);\n  };\n\n  const handleToInputChange = (e) => {\n    const value = e.target.value;\n    setToInput(value);\n    setShowToDropdown(true);\n  };\n\n  const handleAmountChange = (e) => {\n    const value = e.target.value;\n    if (value >= 0) {\n      setAmount(value);\n    }\n  };\n\n  const handleDateChange = (e) => {\n    setSelectedDate(e.target.value);\n  };\n\n  const handleSwapCurrencies = () => {\n    setFromCurrency(toCurrency);\n    setToCurrency(fromCurrency);\n    setFromInput(`${toCurrency} - ${CURRENCY_NAMES[toCurrency]}`);\n    setToInput(`${fromCurrency} - ${CURRENCY_NAMES[fromCurrency]}`);\n  };\n\n  const convertAmount = () => {\n    if (!rates[fromCurrency] || !rates[toCurrency]) return 0;\n    const rateFrom = rates[fromCurrency];\n    const rateTo = rates[toCurrency];\n    return ((amount / rateFrom) * rateTo).toFixed(2);\n  };\n\n  const filteredFromCurrencies = Object.keys(CURRENCY_NAMES).filter(code =>\n    `${code} - ${CURRENCY_NAMES[code]}`.toLowerCase().includes(fromInput.toLowerCase())\n  );\n\n  const filteredToCurrencies = Object.keys(CURRENCY_NAMES).filter(code =>\n    `${code} - ${CURRENCY_NAMES[code]}`.toLowerCase().includes(toInput.toLowerCase())\n  );\n\n  return (\n    <div className=\"app\">\n      <h1>Currency Exchange Rate</h1>\n      \n      <div className=\"main-container\">\n        <div className=\"left-panel\">\n          <div className=\"converter-container\">\n            <div className=\"currency-inputs\">\n              <div className=\"currency-row\">\n                <div className=\"currency-input\">\n                  <div className=\"currency-select\">\n                    <input\n                      type=\"text\"\n                      value={fromInput}\n                      onChange={handleFromInputChange}\n                      onFocus={() => setShowFromDropdown(true)}\n                      placeholder=\"Select currency\"\n                    />\n                    {showFromDropdown && (\n                      <div className=\"dropdown\">\n                        {filteredFromCurrencies.map(code => (\n                          <div\n                            key={code}\n                            className=\"dropdown-item\"\n                            onClick={() => handleFromCurrencySelect(code)}\n                          >\n                            {CURRENCY_FLAGS[code]} {code} - {CURRENCY_NAMES[code]}\n                          </div>\n                        ))}\n                      </div>\n                    )}\n                  </div>\n                </div>\n                \n                <button className=\"exchange-button\" onClick={handleSwapCurrencies}>\n                  <img src={exchangeIcon} alt=\"Swap currencies\" />\n                </button>\n                \n                <div className=\"currency-input\">\n                  <div className=\"currency-select\">\n                    <input\n                      type=\"text\"\n                      value={toInput}\n                      onChange={handleToInputChange}\n                      onFocus={() => setShowToDropdown(true)}\n                      placeholder=\"Select currency\"\n                    />\n                    {showToDropdown && (\n                      <div className=\"dropdown\">\n                        {filteredToCurrencies.map(code => (\n                          <div\n                            key={code}\n                            className=\"dropdown-item\"\n                            onClick={() => handleToCurrencySelect(code)}\n                          >\n                            {CURRENCY_FLAGS[code]} {code} - {CURRENCY_NAMES[code]}\n                          </div>\n                        ))}\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"amount-row\">\n                <div className=\"amount-input\">\n                  <input\n                    type=\"number\"\n                    value={amount}\n                    onChange={handleAmountChange}\n                    placeholder=\"Amount\"\n                  />\n                </div>\n                <div className=\"amount-result\">\n                  <input\n                    type=\"text\"\n                    value={convertAmount()}\n                    readOnly\n                    placeholder=\"Converted amount\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"date-row\">\n                <div className=\"date-input\">\n                  <input\n                    type=\"date\"\n                    value={selectedDate}\n                    onChange={handleDateChange}\n                  />\n                </div>\n                <span className=\"last-updated\">\n                  Last updated: {lastUpdated}\n                </span>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"chart-container\">\n            <h2>Historical Rates: {fromCurrency} to {toCurrency}</h2>\n            <div className=\"chart\">\n              <LineChart data={historicalData} />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"watchlist-container\">\n          <h2>Popular Currencies</h2>\n          <div className=\"watchlist-items\">\n            {Object.entries(rates)\n              .filter(([code]) => CURRENCY_FLAGS[code])\n              .slice(0, 8)\n              .map(([code, rate]) => (\n                <div key={code} className=\"watchlist-item\">\n                  <span>{CURRENCY_FLAGS[code]} {code}</span>\n                  <span>{rate.toFixed(4)}</span>\n                </div>\n              ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}