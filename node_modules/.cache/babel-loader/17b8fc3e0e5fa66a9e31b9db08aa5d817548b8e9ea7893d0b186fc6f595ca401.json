{"ast":null,"code":"var _jsxFileName = \"E:\\\\Mini-project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport exchangeIcon from './ExchangeButton.png';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CURRENCY_FLAGS = {\n  USD: \"ðŸ‡ºðŸ‡¸\",\n  EUR: \"ðŸ‡ªðŸ‡º\",\n  GBP: \"ðŸ‡¬ðŸ‡§\",\n  JPY: \"ðŸ‡¯ðŸ‡µ\",\n  AUD: \"ðŸ‡¦ðŸ‡º\",\n  CAD: \"ðŸ‡¨ðŸ‡¦\",\n  CHF: \"ðŸ‡¨ðŸ‡­\",\n  CNY: \"ðŸ‡¨ðŸ‡³\",\n  HKD: \"ðŸ‡­ðŸ‡°\",\n  NZD: \"ðŸ‡³ðŸ‡¿\"\n};\nconst CURRENCY_NAMES = {\n  USD: \"US Dollar\",\n  EUR: \"Euro\",\n  GBP: \"British Pound\",\n  JPY: \"Japanese Yen\",\n  AUD: \"Australian Dollar\",\n  CAD: \"Canadian Dollar\",\n  CHF: \"Swiss Franc\",\n  CNY: \"Chinese Yuan\",\n  HKD: \"Hong Kong Dollar\",\n  NZD: \"New Zealand Dollar\"\n};\nfunction App() {\n  _s();\n  const [rates, setRates] = useState({});\n  const [fromCurrency, setFromCurrency] = useState(\"USD\");\n  const [toCurrency, setToCurrency] = useState(\"EUR\");\n  const [amount, setAmount] = useState(1);\n  const [fromInput, setFromInput] = useState(`USD - ${CURRENCY_NAMES.USD}`);\n  const [toInput, setToInput] = useState(`EUR - ${CURRENCY_NAMES.EUR}`);\n  const [historicalData, setHistoricalData] = useState([]);\n  const [showFromDropdown, setShowFromDropdown] = useState(false);\n  const [showToDropdown, setShowToDropdown] = useState(false);\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]);\n  const [lastUpdated, setLastUpdated] = useState('');\n  useEffect(() => {\n    fetchRates();\n    generateMockHistoricalData();\n    setLastUpdated(new Date().toLocaleTimeString());\n  }, [selectedDate]);\n  const fetchRates = () => {\n    // Mock exchange rates\n    const mockRates = {\n      USD: 1,\n      EUR: 0.85,\n      GBP: 0.73,\n      JPY: 110.0,\n      AUD: 1.35,\n      CAD: 1.25,\n      CHF: 0.92,\n      CNY: 6.45,\n      HKD: 7.78,\n      NZD: 1.42\n    };\n    setRates(mockRates);\n  };\n  const generateMockHistoricalData = () => {\n    const data = [];\n    const baseValue = 1.15; // Base exchange rate\n    const numPoints = 30;\n    for (let i = 0; i < numPoints; i++) {\n      const date = new Date();\n      date.setDate(date.getDate() - (numPoints - i));\n\n      // Generate a random variation between -0.05 and 0.05\n      const variation = (Math.random() - 0.5) * 0.1;\n      const rate = baseValue + variation;\n      data.push({\n        date: date.toISOString().split('T')[0],\n        rate: rate\n      });\n    }\n    setHistoricalData(data);\n  };\n  const handleFromInputChange = e => {\n    const value = e.target.value;\n    setFromInput(value);\n\n    // Find matching currency\n    const matchingCurrency = Object.entries(CURRENCY_NAMES).find(_ref => {\n      let [code, name] = _ref;\n      return `${code} - ${name}`.toLowerCase().includes(value.toLowerCase());\n    });\n    if (matchingCurrency) {\n      setFromCurrency(matchingCurrency[0]);\n    }\n  };\n  const handleToInputChange = e => {\n    const value = e.target.value;\n    setToInput(value);\n\n    // Find matching currency\n    const matchingCurrency = Object.entries(CURRENCY_NAMES).find(_ref2 => {\n      let [code, name] = _ref2;\n      return `${code} - ${name}`.toLowerCase().includes(value.toLowerCase());\n    });\n    if (matchingCurrency) {\n      setToCurrency(matchingCurrency[0]);\n    }\n  };\n  const handleFromCurrencySelect = code => {\n    setFromCurrency(code);\n    setFromInput(`${code} - ${CURRENCY_NAMES[code]}`);\n    setShowFromDropdown(false);\n  };\n  const handleToCurrencySelect = code => {\n    setToCurrency(code);\n    setToInput(`${code} - ${CURRENCY_NAMES[code]}`);\n    setShowToDropdown(false);\n  };\n  const handleExchange = () => {\n    const temp = fromCurrency;\n    setFromCurrency(toCurrency);\n    setToCurrency(temp);\n    const tempInput = fromInput;\n    setFromInput(toInput);\n    setToInput(tempInput);\n  };\n  const filterCurrencies = input => {\n    return Object.keys(CURRENCY_NAMES).filter(code => `${code} - ${CURRENCY_NAMES[code]}`.toLowerCase().includes(input.toLowerCase()));\n  };\n  const convertCurrency = () => {\n    if (!rates[fromCurrency] || !rates[toCurrency] || !amount) {\n      return \"\";\n    }\n    const conversion = amount * rates[toCurrency] / rates[fromCurrency];\n    return `${conversion.toFixed(2)} ${toCurrency}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Exchange Rate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"converter-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Converter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"currency-inputs\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"currency-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"currency-input\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"currency-select\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: fromInput,\n                    onChange: handleFromInputChange,\n                    onClick: () => setShowFromDropdown(true),\n                    placeholder: \"From Currency\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 165,\n                    columnNumber: 21\n                  }, this), showFromDropdown && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"dropdown\",\n                    children: filterCurrencies(fromInput).map(code => /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"dropdown-item\",\n                      onClick: () => handleFromCurrencySelect(code),\n                      children: [CURRENCY_FLAGS[code], \" \", code, \" - \", CURRENCY_NAMES[code]]\n                    }, code, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 175,\n                      columnNumber: 27\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 173,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"exchange-button\",\n                onClick: handleExchange,\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: exchangeIcon,\n                  alt: \"Exchange\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"currency-input\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"currency-select\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: toInput,\n                    onChange: handleToInputChange,\n                    onClick: () => setShowToDropdown(true),\n                    placeholder: \"To Currency\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 194,\n                    columnNumber: 21\n                  }, this), showToDropdown && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"dropdown\",\n                    children: filterCurrencies(toInput).map(code => /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"dropdown-item\",\n                      onClick: () => handleToCurrencySelect(code),\n                      children: [CURRENCY_FLAGS[code], \" \", code, \" - \", CURRENCY_NAMES[code]]\n                    }, code, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 204,\n                      columnNumber: 27\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 202,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"amount-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"amount-input\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  value: amount,\n                  onChange: e => setAmount(e.target.value),\n                  placeholder: \"Amount\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"amount-result\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: convertCurrency(),\n                  readOnly: true,\n                  placeholder: \"Converted Amount\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"date-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"date-input\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"date\",\n                  value: selectedDate,\n                  onChange: e => setSelectedDate(e.target.value),\n                  max: new Date().toISOString().split('T')[0]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"last-updated\",\n                children: [\"Last updated: \", lastUpdated]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Historical Rates\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"watchlist-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Watchlist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"watchlist-items\",\n          children: Object.keys(CURRENCY_NAMES).slice(0, 5).map(code => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"watchlist-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [CURRENCY_FLAGS[code], \" \", code]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: (rates[code] || 0).toFixed(2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 17\n            }, this)]\n          }, code, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/NwHn7lHr6bJcsJ7jA1x9PSVXLY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","exchangeIcon","jsxDEV","_jsxDEV","CURRENCY_FLAGS","USD","EUR","GBP","JPY","AUD","CAD","CHF","CNY","HKD","NZD","CURRENCY_NAMES","App","_s","rates","setRates","fromCurrency","setFromCurrency","toCurrency","setToCurrency","amount","setAmount","fromInput","setFromInput","toInput","setToInput","historicalData","setHistoricalData","showFromDropdown","setShowFromDropdown","showToDropdown","setShowToDropdown","selectedDate","setSelectedDate","Date","toISOString","split","lastUpdated","setLastUpdated","fetchRates","generateMockHistoricalData","toLocaleTimeString","mockRates","data","baseValue","numPoints","i","date","setDate","getDate","variation","Math","random","rate","push","handleFromInputChange","e","value","target","matchingCurrency","Object","entries","find","_ref","code","name","toLowerCase","includes","handleToInputChange","_ref2","handleFromCurrencySelect","handleToCurrencySelect","handleExchange","temp","tempInput","filterCurrencies","input","keys","filter","convertCurrency","conversion","toFixed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","placeholder","map","src","alt","readOnly","max","slice","_c","$RefreshReg$"],"sources":["E:/Mini-project/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport exchangeIcon from './ExchangeButton.png';\nimport './styles.css';\n\nconst CURRENCY_FLAGS = {\n  USD: \"ðŸ‡ºðŸ‡¸\",\n  EUR: \"ðŸ‡ªðŸ‡º\",\n  GBP: \"ðŸ‡¬ðŸ‡§\",\n  JPY: \"ðŸ‡¯ðŸ‡µ\",\n  AUD: \"ðŸ‡¦ðŸ‡º\",\n  CAD: \"ðŸ‡¨ðŸ‡¦\",\n  CHF: \"ðŸ‡¨ðŸ‡­\",\n  CNY: \"ðŸ‡¨ðŸ‡³\",\n  HKD: \"ðŸ‡­ðŸ‡°\",\n  NZD: \"ðŸ‡³ðŸ‡¿\"\n};\n\nconst CURRENCY_NAMES = {\n  USD: \"US Dollar\",\n  EUR: \"Euro\",\n  GBP: \"British Pound\",\n  JPY: \"Japanese Yen\",\n  AUD: \"Australian Dollar\",\n  CAD: \"Canadian Dollar\",\n  CHF: \"Swiss Franc\",\n  CNY: \"Chinese Yuan\",\n  HKD: \"Hong Kong Dollar\",\n  NZD: \"New Zealand Dollar\"\n};\n\nfunction App() {\n  const [rates, setRates] = useState({});\n  const [fromCurrency, setFromCurrency] = useState(\"USD\");\n  const [toCurrency, setToCurrency] = useState(\"EUR\");\n  const [amount, setAmount] = useState(1);\n  const [fromInput, setFromInput] = useState(`USD - ${CURRENCY_NAMES.USD}`);\n  const [toInput, setToInput] = useState(`EUR - ${CURRENCY_NAMES.EUR}`);\n  const [historicalData, setHistoricalData] = useState([]);\n  const [showFromDropdown, setShowFromDropdown] = useState(false);\n  const [showToDropdown, setShowToDropdown] = useState(false);\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]);\n  const [lastUpdated, setLastUpdated] = useState('');\n\n  useEffect(() => {\n    fetchRates();\n    generateMockHistoricalData();\n    setLastUpdated(new Date().toLocaleTimeString());\n  }, [selectedDate]);\n\n  const fetchRates = () => {\n    // Mock exchange rates\n    const mockRates = {\n      USD: 1,\n      EUR: 0.85,\n      GBP: 0.73,\n      JPY: 110.0,\n      AUD: 1.35,\n      CAD: 1.25,\n      CHF: 0.92,\n      CNY: 6.45,\n      HKD: 7.78,\n      NZD: 1.42\n    };\n    setRates(mockRates);\n  };\n\n  const generateMockHistoricalData = () => {\n    const data = [];\n    const baseValue = 1.15; // Base exchange rate\n    const numPoints = 30;\n    \n    for (let i = 0; i < numPoints; i++) {\n      const date = new Date();\n      date.setDate(date.getDate() - (numPoints - i));\n      \n      // Generate a random variation between -0.05 and 0.05\n      const variation = (Math.random() - 0.5) * 0.1;\n      const rate = baseValue + variation;\n      \n      data.push({\n        date: date.toISOString().split('T')[0],\n        rate: rate\n      });\n    }\n    \n    setHistoricalData(data);\n  };\n\n  const handleFromInputChange = (e) => {\n    const value = e.target.value;\n    setFromInput(value);\n    \n    // Find matching currency\n    const matchingCurrency = Object.entries(CURRENCY_NAMES).find(([code, name]) => \n      `${code} - ${name}`.toLowerCase().includes(value.toLowerCase())\n    );\n    \n    if (matchingCurrency) {\n      setFromCurrency(matchingCurrency[0]);\n    }\n  };\n\n  const handleToInputChange = (e) => {\n    const value = e.target.value;\n    setToInput(value);\n    \n    // Find matching currency\n    const matchingCurrency = Object.entries(CURRENCY_NAMES).find(([code, name]) => \n      `${code} - ${name}`.toLowerCase().includes(value.toLowerCase())\n    );\n    \n    if (matchingCurrency) {\n      setToCurrency(matchingCurrency[0]);\n    }\n  };\n\n  const handleFromCurrencySelect = (code) => {\n    setFromCurrency(code);\n    setFromInput(`${code} - ${CURRENCY_NAMES[code]}`);\n    setShowFromDropdown(false);\n  };\n\n  const handleToCurrencySelect = (code) => {\n    setToCurrency(code);\n    setToInput(`${code} - ${CURRENCY_NAMES[code]}`);\n    setShowToDropdown(false);\n  };\n\n  const handleExchange = () => {\n    const temp = fromCurrency;\n    setFromCurrency(toCurrency);\n    setToCurrency(temp);\n    \n    const tempInput = fromInput;\n    setFromInput(toInput);\n    setToInput(tempInput);\n  };\n\n  const filterCurrencies = (input) => {\n    return Object.keys(CURRENCY_NAMES).filter(code => \n      `${code} - ${CURRENCY_NAMES[code]}`.toLowerCase().includes(input.toLowerCase())\n    );\n  };\n\n  const convertCurrency = () => {\n    if (!rates[fromCurrency] || !rates[toCurrency] || !amount) {\n      return \"\";\n    }\n    const conversion = (amount * rates[toCurrency]) / rates[fromCurrency];\n    return `${conversion.toFixed(2)} ${toCurrency}`;\n  };\n\n  return (\n    <div className=\"app\">\n      <h1>Exchange Rate</h1>\n      \n      <div className=\"main-container\">\n        <div className=\"left-panel\">\n          <div className=\"converter-container\">\n            <h2>Converter</h2>\n            <div className=\"currency-inputs\">\n              <div className=\"currency-row\">\n                <div className=\"currency-input\">\n                  <div className=\"currency-select\">\n                    <input\n                      type=\"text\"\n                      value={fromInput}\n                      onChange={handleFromInputChange}\n                      onClick={() => setShowFromDropdown(true)}\n                      placeholder=\"From Currency\"\n                    />\n                    {showFromDropdown && (\n                      <div className=\"dropdown\">\n                        {filterCurrencies(fromInput).map(code => (\n                          <div\n                            key={code}\n                            className=\"dropdown-item\"\n                            onClick={() => handleFromCurrencySelect(code)}\n                          >\n                            {CURRENCY_FLAGS[code]} {code} - {CURRENCY_NAMES[code]}\n                          </div>\n                        ))}\n                      </div>\n                    )}\n                  </div>\n                </div>\n\n                <button className=\"exchange-button\" onClick={handleExchange}>\n                  <img src={exchangeIcon} alt=\"Exchange\" />\n                </button>\n\n                <div className=\"currency-input\">\n                  <div className=\"currency-select\">\n                    <input\n                      type=\"text\"\n                      value={toInput}\n                      onChange={handleToInputChange}\n                      onClick={() => setShowToDropdown(true)}\n                      placeholder=\"To Currency\"\n                    />\n                    {showToDropdown && (\n                      <div className=\"dropdown\">\n                        {filterCurrencies(toInput).map(code => (\n                          <div\n                            key={code}\n                            className=\"dropdown-item\"\n                            onClick={() => handleToCurrencySelect(code)}\n                          >\n                            {CURRENCY_FLAGS[code]} {code} - {CURRENCY_NAMES[code]}\n                          </div>\n                        ))}\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"amount-row\">\n                <div className=\"amount-input\">\n                  <input\n                    type=\"number\"\n                    value={amount}\n                    onChange={(e) => setAmount(e.target.value)}\n                    placeholder=\"Amount\"\n                  />\n                </div>\n                <div className=\"amount-result\">\n                  <input\n                    type=\"text\"\n                    value={convertCurrency()}\n                    readOnly\n                    placeholder=\"Converted Amount\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"date-row\">\n                <div className=\"date-input\">\n                  <input\n                    type=\"date\"\n                    value={selectedDate}\n                    onChange={(e) => setSelectedDate(e.target.value)}\n                    max={new Date().toISOString().split('T')[0]}\n                  />\n                </div>\n                <div className=\"last-updated\">\n                  Last updated: {lastUpdated}\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"chart-container\">\n            <h2>Historical Rates</h2>\n            <div className=\"chart\">\n              <svg>\n                {/* SVG chart implementation */}\n              </svg>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"watchlist-container\">\n          <h2>Watchlist</h2>\n          <div className=\"watchlist-items\">\n            {Object.keys(CURRENCY_NAMES).slice(0, 5).map(code => (\n              <div key={code} className=\"watchlist-item\">\n                <span>{CURRENCY_FLAGS[code]} {code}</span>\n                <span>{(rates[code] || 0).toFixed(2)}</span>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}