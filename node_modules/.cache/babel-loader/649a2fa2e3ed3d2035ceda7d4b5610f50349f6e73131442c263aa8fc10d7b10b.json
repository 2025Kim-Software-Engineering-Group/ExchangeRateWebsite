{"ast":null,"code":"var _jsxFileName = \"E:\\\\Mini-project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport exchangeIcon from './ExchangeButton.png';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CURRENCY_FLAGS = {\n  USD: \"🇺🇸\",\n  GBP: \"🇬🇧\",\n  EUR: \"🇪🇺\",\n  CNY: \"🇨🇳\",\n  CAD: \"🇨🇦\",\n  JPY: \"🇯🇵\",\n  AUD: \"🇦🇺\",\n  NZD: \"🇳🇿\",\n  CHF: \"🇨🇭\",\n  HKD: \"🇭🇰\",\n  SGD: \"🇸🇬\",\n  SEK: \"🇸🇪\",\n  KRW: \"🇰🇷\",\n  INR: \"🇮🇳\",\n  MXN: \"🇲🇽\"\n};\nconst CURRENCY_NAMES = {\n  USD: \"United States Dollar\",\n  GBP: \"British Pound Sterling\",\n  EUR: \"Euro\",\n  CNY: \"Chinese Yuan\",\n  CAD: \"Canadian Dollar\",\n  JPY: \"Japanese Yen\",\n  AUD: \"Australian Dollar\",\n  NZD: \"New Zealand Dollar\",\n  CHF: \"Swiss Franc\",\n  HKD: \"Hong Kong Dollar\",\n  SGD: \"Singapore Dollar\",\n  SEK: \"Swedish Krona\",\n  KRW: \"South Korean Won\",\n  INR: \"Indian Rupee\",\n  MXN: \"Mexican Peso\"\n};\nfunction App() {\n  _s();\n  const [rates, setRates] = useState({});\n  const [fromCurrency, setFromCurrency] = useState(\"USD\");\n  const [toCurrency, setToCurrency] = useState(\"EUR\");\n  const [amount, setAmount] = useState(1);\n  const [fromInput, setFromInput] = useState(`USD - ${CURRENCY_NAMES.USD}`);\n  const [toInput, setToInput] = useState(`EUR - ${CURRENCY_NAMES.EUR}`);\n  const [historicalData, setHistoricalData] = useState([]);\n  const [showFromDropdown, setShowFromDropdown] = useState(false);\n  const [showToDropdown, setShowToDropdown] = useState(false);\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]);\n  useEffect(() => {\n    fetchRates();\n    generateMockHistoricalData();\n  }, [selectedDate]); // 添加selectedDate作为依赖\n\n  const fetchRates = async () => {\n    try {\n      // 在实际应用中，这里应该根据selectedDate获取历史汇率\n      const response = await fetch('https://v6.exchangerate-api.com/v6/dd875ed8009b2e791ff987e6/latest/USD');\n      const data = await response.json();\n      setRates(data.conversion_rates);\n    } catch (error) {\n      console.error('Error fetching rates:', error);\n    }\n  };\n  const generateMockHistoricalData = () => {\n    const data = [];\n    const today = new Date();\n    for (let i = 30; i >= 0; i--) {\n      const date = new Date(today);\n      date.setDate(date.getDate() - i);\n      data.push({\n        date: date.toISOString().split('T')[0],\n        rate: 1 + Math.random() * 0.2\n      });\n    }\n    setHistoricalData(data);\n  };\n  const convertCurrency = () => {\n    if (!rates[fromCurrency] || !rates[toCurrency]) return 0;\n    const rate = rates[toCurrency] / rates[fromCurrency];\n    return (amount * rate).toFixed(6);\n  };\n  const filterCurrencies = search => {\n    if (!search) return Object.keys(CURRENCY_NAMES);\n    return Object.keys(CURRENCY_NAMES).filter(code => code.toLowerCase().includes(search.toLowerCase()) || CURRENCY_NAMES[code].toLowerCase().includes(search.toLowerCase()));\n  };\n  const handleFromCurrencySelect = code => {\n    setFromCurrency(code);\n    setFromInput(`${code} - ${CURRENCY_NAMES[code]}`);\n    setShowFromDropdown(false);\n  };\n  const handleToCurrencySelect = code => {\n    setToCurrency(code);\n    setToInput(`${code} - ${CURRENCY_NAMES[code]}`);\n    setShowToDropdown(false);\n  };\n  const handleFromInputChange = e => {\n    const value = e.target.value;\n    setFromInput(value);\n    setShowFromDropdown(true);\n  };\n  const handleToInputChange = e => {\n    const value = e.target.value;\n    setToInput(value);\n    setShowToDropdown(true);\n  };\n  const handleExchange = () => {\n    const tempCurrency = fromCurrency;\n    const tempInput = fromInput;\n    setFromCurrency(toCurrency);\n    setFromInput(toInput);\n    setToCurrency(tempCurrency);\n    setToInput(tempInput);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Exchange Rate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"converter-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Converter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"currency-inputs\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"currency-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"currency-input\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  value: amount,\n                  onChange: e => setAmount(e.target.value),\n                  placeholder: \"Amount\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"currency-select\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: fromInput,\n                    onChange: handleFromInputChange,\n                    onClick: () => setShowFromDropdown(true),\n                    placeholder: \"From Currency\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 21\n                  }, this), showFromDropdown && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"dropdown\",\n                    children: filterCurrencies(fromInput).map(code => /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"dropdown-item\",\n                      onClick: () => handleFromCurrencySelect(code),\n                      children: [CURRENCY_FLAGS[code], \" \", code, \" - \", CURRENCY_NAMES[code]]\n                    }, code, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 158,\n                      columnNumber: 27\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 156,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"exchange-button\",\n                onClick: handleExchange,\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: exchangeIcon,\n                  alt: \"Exchange\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"currency-input\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: convertCurrency(),\n                  readOnly: true,\n                  placeholder: \"Converted Amount\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"currency-select\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: toInput,\n                    onChange: handleToInputChange,\n                    onClick: () => setShowToDropdown(true),\n                    placeholder: \"To Currency\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 183,\n                    columnNumber: 21\n                  }, this), showToDropdown && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"dropdown\",\n                    children: filterCurrencies(toInput).map(code => /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"dropdown-item\",\n                      onClick: () => handleToCurrencySelect(code),\n                      children: [CURRENCY_FLAGS[code], \" \", code, \" - \", CURRENCY_NAMES[code]]\n                    }, code, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 193,\n                      columnNumber: 27\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 191,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"date-selector\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                value: selectedDate,\n                onChange: e => setSelectedDate(e.target.value),\n                max: new Date().toISOString().split('T')[0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Exchange Rate History\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              viewBox: \"0 0 800 400\",\n              children: historicalData.map((point, index) => {\n                const x = index / (historicalData.length - 1) * 760 + 20;\n                const y = 380 - (point.rate - 1) * 1000;\n                return /*#__PURE__*/_jsxDEV(React.Fragment, {\n                  children: [index > 0 && /*#__PURE__*/_jsxDEV(\"line\", {\n                    x1: (index - 1) / (historicalData.length - 1) * 760 + 20,\n                    y1: 380 - (historicalData[index - 1].rate - 1) * 1000,\n                    x2: x,\n                    y2: y,\n                    stroke: \"#007bff\",\n                    strokeWidth: \"2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n                    cx: x,\n                    cy: y,\n                    r: \"4\",\n                    fill: \"#007bff\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 237,\n                    columnNumber: 23\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"watchlist-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Exchange Rate Watchlist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), Object.keys(CURRENCY_FLAGS).slice(0, 6).map(currency => {\n          var _rates$currency;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"watchlist-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [CURRENCY_FLAGS[currency], \" \", currency]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: ((_rates$currency = rates[currency]) === null || _rates$currency === void 0 ? void 0 : _rates$currency.toFixed(4)) || \"N/A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this)]\n          }, currency, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"BlEMT7XvdSCyKGD9LdOFIyA8JNU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","exchangeIcon","jsxDEV","_jsxDEV","CURRENCY_FLAGS","USD","GBP","EUR","CNY","CAD","JPY","AUD","NZD","CHF","HKD","SGD","SEK","KRW","INR","MXN","CURRENCY_NAMES","App","_s","rates","setRates","fromCurrency","setFromCurrency","toCurrency","setToCurrency","amount","setAmount","fromInput","setFromInput","toInput","setToInput","historicalData","setHistoricalData","showFromDropdown","setShowFromDropdown","showToDropdown","setShowToDropdown","selectedDate","setSelectedDate","Date","toISOString","split","fetchRates","generateMockHistoricalData","response","fetch","data","json","conversion_rates","error","console","today","i","date","setDate","getDate","push","rate","Math","random","convertCurrency","toFixed","filterCurrencies","search","Object","keys","filter","code","toLowerCase","includes","handleFromCurrencySelect","handleToCurrencySelect","handleFromInputChange","e","value","target","handleToInputChange","handleExchange","tempCurrency","tempInput","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick","map","src","alt","readOnly","max","viewBox","point","index","x","length","y","Fragment","x1","y1","x2","y2","stroke","strokeWidth","cx","cy","r","fill","slice","currency","_rates$currency","_c","$RefreshReg$"],"sources":["E:/Mini-project/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport exchangeIcon from './ExchangeButton.png';\nimport './styles.css';\n\nconst CURRENCY_FLAGS = {\n  USD: \"🇺🇸\",\n  GBP: \"🇬🇧\",\n  EUR: \"🇪🇺\",\n  CNY: \"🇨🇳\",\n  CAD: \"🇨🇦\",\n  JPY: \"🇯🇵\",\n  AUD: \"🇦🇺\",\n  NZD: \"🇳🇿\",\n  CHF: \"🇨🇭\",\n  HKD: \"🇭🇰\",\n  SGD: \"🇸🇬\",\n  SEK: \"🇸🇪\",\n  KRW: \"🇰🇷\",\n  INR: \"🇮🇳\",\n  MXN: \"🇲🇽\",\n};\n\nconst CURRENCY_NAMES = {\n  USD: \"United States Dollar\",\n  GBP: \"British Pound Sterling\",\n  EUR: \"Euro\",\n  CNY: \"Chinese Yuan\",\n  CAD: \"Canadian Dollar\",\n  JPY: \"Japanese Yen\",\n  AUD: \"Australian Dollar\",\n  NZD: \"New Zealand Dollar\",\n  CHF: \"Swiss Franc\",\n  HKD: \"Hong Kong Dollar\",\n  SGD: \"Singapore Dollar\",\n  SEK: \"Swedish Krona\",\n  KRW: \"South Korean Won\",\n  INR: \"Indian Rupee\",\n  MXN: \"Mexican Peso\",\n};\n\nfunction App() {\n  const [rates, setRates] = useState({});\n  const [fromCurrency, setFromCurrency] = useState(\"USD\");\n  const [toCurrency, setToCurrency] = useState(\"EUR\");\n  const [amount, setAmount] = useState(1);\n  const [fromInput, setFromInput] = useState(`USD - ${CURRENCY_NAMES.USD}`);\n  const [toInput, setToInput] = useState(`EUR - ${CURRENCY_NAMES.EUR}`);\n  const [historicalData, setHistoricalData] = useState([]);\n  const [showFromDropdown, setShowFromDropdown] = useState(false);\n  const [showToDropdown, setShowToDropdown] = useState(false);\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]);\n\n  useEffect(() => {\n    fetchRates();\n    generateMockHistoricalData();\n  }, [selectedDate]); // 添加selectedDate作为依赖\n\n  const fetchRates = async () => {\n    try {\n      // 在实际应用中，这里应该根据selectedDate获取历史汇率\n      const response = await fetch('https://v6.exchangerate-api.com/v6/dd875ed8009b2e791ff987e6/latest/USD');\n      const data = await response.json();\n      setRates(data.conversion_rates);\n    } catch (error) {\n      console.error('Error fetching rates:', error);\n    }\n  };\n\n  const generateMockHistoricalData = () => {\n    const data = [];\n    const today = new Date();\n    for (let i = 30; i >= 0; i--) {\n      const date = new Date(today);\n      date.setDate(date.getDate() - i);\n      data.push({\n        date: date.toISOString().split('T')[0],\n        rate: 1 + Math.random() * 0.2,\n      });\n    }\n    setHistoricalData(data);\n  };\n\n  const convertCurrency = () => {\n    if (!rates[fromCurrency] || !rates[toCurrency]) return 0;\n    const rate = rates[toCurrency] / rates[fromCurrency];\n    return (amount * rate).toFixed(6);\n  };\n\n  const filterCurrencies = (search) => {\n    if (!search) return Object.keys(CURRENCY_NAMES);\n    return Object.keys(CURRENCY_NAMES).filter(code =>\n      code.toLowerCase().includes(search.toLowerCase()) ||\n      CURRENCY_NAMES[code].toLowerCase().includes(search.toLowerCase())\n    );\n  };\n\n  const handleFromCurrencySelect = (code) => {\n    setFromCurrency(code);\n    setFromInput(`${code} - ${CURRENCY_NAMES[code]}`);\n    setShowFromDropdown(false);\n  };\n\n  const handleToCurrencySelect = (code) => {\n    setToCurrency(code);\n    setToInput(`${code} - ${CURRENCY_NAMES[code]}`);\n    setShowToDropdown(false);\n  };\n\n  const handleFromInputChange = (e) => {\n    const value = e.target.value;\n    setFromInput(value);\n    setShowFromDropdown(true);\n  };\n\n  const handleToInputChange = (e) => {\n    const value = e.target.value;\n    setToInput(value);\n    setShowToDropdown(true);\n  };\n\n  const handleExchange = () => {\n    const tempCurrency = fromCurrency;\n    const tempInput = fromInput;\n    setFromCurrency(toCurrency);\n    setFromInput(toInput);\n    setToCurrency(tempCurrency);\n    setToInput(tempInput);\n  };\n\n  return (\n    <div className=\"app\">\n      <h1>Exchange Rate</h1>\n      \n      <div className=\"main-container\">\n        <div className=\"left-panel\">\n          <div className=\"converter-container\">\n            <h2>Converter</h2>\n            <div className=\"currency-inputs\">\n              <div className=\"currency-row\">\n                <div className=\"currency-input\">\n                  <input\n                    type=\"number\"\n                    value={amount}\n                    onChange={(e) => setAmount(e.target.value)}\n                    placeholder=\"Amount\"\n                  />\n                  <div className=\"currency-select\">\n                    <input\n                      type=\"text\"\n                      value={fromInput}\n                      onChange={handleFromInputChange}\n                      onClick={() => setShowFromDropdown(true)}\n                      placeholder=\"From Currency\"\n                    />\n                    {showFromDropdown && (\n                      <div className=\"dropdown\">\n                        {filterCurrencies(fromInput).map(code => (\n                          <div\n                            key={code}\n                            className=\"dropdown-item\"\n                            onClick={() => handleFromCurrencySelect(code)}\n                          >\n                            {CURRENCY_FLAGS[code]} {code} - {CURRENCY_NAMES[code]}\n                          </div>\n                        ))}\n                      </div>\n                    )}\n                  </div>\n                </div>\n\n                <button className=\"exchange-button\" onClick={handleExchange}>\n                  <img src={exchangeIcon} alt=\"Exchange\" />\n                </button>\n\n                <div className=\"currency-input\">\n                  <input\n                    type=\"text\"\n                    value={convertCurrency()}\n                    readOnly\n                    placeholder=\"Converted Amount\"\n                  />\n                  <div className=\"currency-select\">\n                    <input\n                      type=\"text\"\n                      value={toInput}\n                      onChange={handleToInputChange}\n                      onClick={() => setShowToDropdown(true)}\n                      placeholder=\"To Currency\"\n                    />\n                    {showToDropdown && (\n                      <div className=\"dropdown\">\n                        {filterCurrencies(toInput).map(code => (\n                          <div\n                            key={code}\n                            className=\"dropdown-item\"\n                            onClick={() => handleToCurrencySelect(code)}\n                          >\n                            {CURRENCY_FLAGS[code]} {code} - {CURRENCY_NAMES[code]}\n                          </div>\n                        ))}\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"date-selector\">\n                <input\n                  type=\"date\"\n                  value={selectedDate}\n                  onChange={(e) => setSelectedDate(e.target.value)}\n                  max={new Date().toISOString().split('T')[0]}\n                />\n              </div>\n            </div>\n          </div>\n\n          <div className=\"chart-container\">\n            <h2>Exchange Rate History</h2>\n            <div className=\"chart\">\n              <svg viewBox=\"0 0 800 400\">\n                {historicalData.map((point, index) => {\n                  const x = (index / (historicalData.length - 1)) * 760 + 20;\n                  const y = 380 - (point.rate - 1) * 1000;\n                  return (\n                    <React.Fragment key={index}>\n                      {index > 0 && (\n                        <line\n                          x1={(((index - 1) / (historicalData.length - 1)) * 760) + 20}\n                          y1={380 - (historicalData[index - 1].rate - 1) * 1000}\n                          x2={x}\n                          y2={y}\n                          stroke=\"#007bff\"\n                          strokeWidth=\"2\"\n                        />\n                      )}\n                      <circle\n                        cx={x}\n                        cy={y}\n                        r=\"4\"\n                        fill=\"#007bff\"\n                      />\n                    </React.Fragment>\n                  );\n                })}\n              </svg>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"watchlist-container\">\n          <h2>Exchange Rate Watchlist</h2>\n          {Object.keys(CURRENCY_FLAGS).slice(0, 6).map(currency => (\n            <div key={currency} className=\"watchlist-item\">\n              <span>{CURRENCY_FLAGS[currency]} {currency}</span>\n              <span>{rates[currency]?.toFixed(4) || \"N/A\"}</span>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}