{"ast":null,"code":"var _jsxFileName = \"E:\\\\Mini-project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { translations } from './translations';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst CURRENCY_INFO = {\n  USD: {\n    flag: \"🇺🇸\",\n    name: \"US Dollar\"\n  },\n  EUR: {\n    flag: \"🇪🇺\",\n    name: \"Euro\"\n  },\n  GBP: {\n    flag: \"🇬🇧\",\n    name: \"British Pound\"\n  },\n  JPY: {\n    flag: \"🇯🇵\",\n    name: \"Japanese Yen\"\n  },\n  AUD: {\n    flag: \"🇦🇺\",\n    name: \"Australian Dollar\"\n  },\n  CAD: {\n    flag: \"🇨🇦\",\n    name: \"Canadian Dollar\"\n  },\n  CHF: {\n    flag: \"🇨🇭\",\n    name: \"Swiss Franc\"\n  },\n  CNY: {\n    flag: \"🇨🇳\",\n    name: \"Chinese Yuan\"\n  },\n  HKD: {\n    flag: \"🇭🇰\",\n    name: \"Hong Kong Dollar\"\n  },\n  NZD: {\n    flag: \"🇳🇿\",\n    name: \"New Zealand Dollar\"\n  },\n  AED: {\n    flag: \"🇦🇪\",\n    name: \"UAE Dirham\"\n  },\n  INR: {\n    flag: \"🇮🇳\",\n    name: \"Indian Rupee\"\n  },\n  SGD: {\n    flag: \"🇸🇬\",\n    name: \"Singapore Dollar\"\n  },\n  MXN: {\n    flag: \"🇲🇽\",\n    name: \"Mexican Peso\"\n  },\n  BRL: {\n    flag: \"🇧🇷\",\n    name: \"Brazilian Real\"\n  }\n};\nfunction App() {\n  _s();\n  const [fromCurrency, setFromCurrency] = useState('USD');\n  const [toCurrency, setToCurrency] = useState('EUR');\n  const [amount, setAmount] = useState(1);\n  const [exchangeRate, setExchangeRate] = useState(null);\n  const [lastUpdated, setLastUpdated] = useState('');\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]);\n  const [historicalRates, setHistoricalRates] = useState([]);\n  const [fromInput, setFromInput] = useState('');\n  const [toInput, setToInput] = useState('');\n  const [showFromDropdown, setShowFromDropdown] = useState(false);\n  const [showToDropdown, setShowToDropdown] = useState(false);\n  const [currentLanguage, setCurrentLanguage] = useState('en');\n  const [currencyRates, setCurrencyRates] = useState({});\n  const t = translations[currentLanguage];\n  const fromDropdownRef = useRef(null);\n  const toDropdownRef = useRef(null);\n\n  // Filter currencies based on input\n  const filterCurrencies = input => {\n    if (!input) return Object.keys(CURRENCY_INFO);\n    const searchTerm = input.toLowerCase();\n    return Object.entries(CURRENCY_INFO).filter(_ref => {\n      let [code, info] = _ref;\n      return code.toLowerCase().includes(searchTerm) || info.name.toLowerCase().includes(searchTerm);\n    }).map(_ref2 => {\n      let [code] = _ref2;\n      return code;\n    });\n  };\n\n  // Updated input handlers\n  const handleFromInputChange = e => {\n    const value = e.target.value;\n    setFromInput(value);\n    setShowFromDropdown(true);\n  };\n  const handleToInputChange = e => {\n    const value = e.target.value;\n    setToInput(value);\n    setShowToDropdown(true);\n  };\n\n  // Updated currency select handlers\n  const handleFromCurrencySelect = currency => {\n    setFromCurrency(currency);\n    setFromInput(`${CURRENCY_INFO[currency].flag} ${currency} - ${CURRENCY_INFO[currency].name}`);\n    setShowFromDropdown(false);\n  };\n  const handleToCurrencySelect = currency => {\n    setToCurrency(currency);\n    setToInput(`${CURRENCY_INFO[currency].flag} ${currency} - ${CURRENCY_INFO[currency].name}`);\n    setShowToDropdown(false);\n  };\n\n  // 其余的现有函数保持不变\n  const handleExchange = () => {\n    const tempCurrency = fromCurrency;\n    setFromCurrency(toCurrency);\n    setToCurrency(tempCurrency);\n    const tempInput = fromInput;\n    setFromInput(toInput);\n    setToInput(tempInput);\n  };\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (fromDropdownRef.current && !fromDropdownRef.current.contains(event.target)) {\n        setShowFromDropdown(false);\n      }\n      if (toDropdownRef.current && !toDropdownRef.current.contains(event.target)) {\n        setShowToDropdown(false);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n  useEffect(() => {\n    fetchExchangeRate();\n    fetchHistoricalRates();\n    fetchAllRates();\n  }, [fromCurrency, toCurrency, selectedDate]);\n  const fetchAllRates = async () => {\n    try {\n      const response = await fetch(`https://v6.exchangerate-api.com/v6/dd875ed8009b2e791ff987e6/latest/USD`);\n      const data = await response.json();\n      setCurrencyRates(data.conversion_rates);\n    } catch (error) {\n      console.error('Error fetching all rates:', error);\n    }\n  };\n  const fetchExchangeRate = async () => {\n    try {\n      const response = await fetch(`https://v6.exchangerate-api.com/v6/dd875ed8009b2e791ff987e6/latest/${fromCurrency}`);\n      const data = await response.json();\n      setExchangeRate(data.conversion_rates[toCurrency]);\n      setLastUpdated(new Date().toLocaleString());\n    } catch (error) {\n      console.error('Error fetching exchange rate:', error);\n    }\n  };\n  const fetchHistoricalRates = async () => {\n    try {\n      const dates = [];\n      const rates = [];\n      const endDate = new Date();\n      const startDate = new Date();\n      startDate.setMonth(startDate.getMonth() - 1);\n      for (let d = startDate; d <= endDate; d.setDate(d.getDate() + 5)) {\n        const dateStr = d.toISOString().split('T')[0];\n        const response = await fetch(`https://v6.exchangerate-api.com/v6/dd875ed8009b2e791ff987e6/latest/${fromCurrency}`);\n        const data = await response.json();\n        dates.push(dateStr);\n        rates.push(data.conversion_rates[toCurrency]);\n      }\n      setHistoricalRates({\n        labels: dates,\n        datasets: [{\n          label: `${fromCurrency} to ${toCurrency}`,\n          data: rates,\n          fill: false,\n          borderColor: 'rgb(75, 192, 192)',\n          tension: 0.1\n        }]\n      });\n    } catch (error) {\n      console.error('Error fetching historical rates:', error);\n    }\n  };\n  const convertAmount = () => {\n    if (exchangeRate === null) return '';\n    return (amount * exchangeRate).toFixed(2);\n  };\n  const handleAmountChange = e => {\n    setAmount(e.target.value);\n  };\n  const handleDateChange = e => {\n    setSelectedDate(e.target.value);\n  };\n  const LanguageSelector = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"language-selector\",\n    children: Object.keys(translations).map(lang => /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `language-button ${currentLanguage === lang ? 'active' : ''}`,\n      onClick: () => setCurrentLanguage(lang),\n      children: translations[lang].languages[lang]\n    }, lang, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 5\n  }, this);\n  const chartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Exchange Rate Trend'\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: false\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(LanguageSelector, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: t.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"converter-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"currency-inputs\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"currency-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"currency-input\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"currency-select\",\n                  ref: fromDropdownRef,\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: fromInput,\n                    onChange: handleFromInputChange,\n                    onFocus: () => setShowFromDropdown(true),\n                    placeholder: t.selectCurrency\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 245,\n                    columnNumber: 21\n                  }, this), showFromDropdown && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"currency-dropdown\",\n                    children: filterCurrencies(fromInput).map(currency => /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"currency-option\",\n                      onClick: () => handleFromCurrencySelect(currency),\n                      children: [CURRENCY_INFO[currency].flag, \" \", currency, \" - \", CURRENCY_INFO[currency].name]\n                    }, currency, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 255,\n                      columnNumber: 27\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 253,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"exchange-button\",\n                onClick: handleExchange,\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"exchange-icon\",\n                  children: \"\\u21C4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"currency-input\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"currency-select\",\n                  ref: toDropdownRef,\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: toInput,\n                    onChange: handleToInputChange,\n                    onFocus: () => setShowToDropdown(true),\n                    placeholder: t.selectCurrency\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 274,\n                    columnNumber: 21\n                  }, this), showToDropdown && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"currency-dropdown\",\n                    children: filterCurrencies(toInput).map(currency => /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"currency-option\",\n                      onClick: () => handleToCurrencySelect(currency),\n                      children: [CURRENCY_INFO[currency].flag, \" \", currency, \" - \", CURRENCY_INFO[currency].name]\n                    }, currency, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 284,\n                      columnNumber: 27\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 282,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"amount-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"amount-input\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  value: amount,\n                  onChange: handleAmountChange,\n                  placeholder: t.amount\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"amount-result\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: convertAmount(),\n                  readOnly: true,\n                  placeholder: t.convertedAmount\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"date-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"date-input\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"date\",\n                  value: selectedDate,\n                  onChange: handleDateChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"last-updated\",\n                children: [t.lastUpdated, \": \", lastUpdated]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [t.historicalRates, \": \", fromCurrency, \" \", t.to, \" \", toCurrency]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 13\n          }, this), historicalRates.datasets && /*#__PURE__*/_jsxDEV(Line, {\n            data: historicalRates,\n            options: chartOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"watchlist-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: t.popularCurrencies\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"watchlist\",\n          children: Object.keys(CURRENCY_INFO).map(currency => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"watchlist-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"currency-flag\",\n              children: CURRENCY_INFO[currency].flag\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"currency-code\",\n              children: currency\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"currency-name\",\n              children: CURRENCY_INFO[currency].name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"currency-rate\",\n              children: currencyRates[currency] ? `1 USD = ${currencyRates[currency].toFixed(4)} ${currency}` : 'Loading...'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 17\n            }, this)]\n          }, currency, true, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 234,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"hxN0zX3WsUypQ/3knpLPs2iOv80=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","translations","jsxDEV","_jsxDEV","register","CURRENCY_INFO","USD","flag","name","EUR","GBP","JPY","AUD","CAD","CHF","CNY","HKD","NZD","AED","INR","SGD","MXN","BRL","App","_s","fromCurrency","setFromCurrency","toCurrency","setToCurrency","amount","setAmount","exchangeRate","setExchangeRate","lastUpdated","setLastUpdated","selectedDate","setSelectedDate","Date","toISOString","split","historicalRates","setHistoricalRates","fromInput","setFromInput","toInput","setToInput","showFromDropdown","setShowFromDropdown","showToDropdown","setShowToDropdown","currentLanguage","setCurrentLanguage","currencyRates","setCurrencyRates","t","fromDropdownRef","toDropdownRef","filterCurrencies","input","Object","keys","searchTerm","toLowerCase","entries","filter","_ref","code","info","includes","map","_ref2","handleFromInputChange","e","value","target","handleToInputChange","handleFromCurrencySelect","currency","handleToCurrencySelect","handleExchange","tempCurrency","tempInput","handleClickOutside","event","current","contains","document","addEventListener","removeEventListener","fetchExchangeRate","fetchHistoricalRates","fetchAllRates","response","fetch","data","json","conversion_rates","error","console","toLocaleString","dates","rates","endDate","startDate","setMonth","getMonth","d","setDate","getDate","dateStr","push","labels","datasets","label","fill","borderColor","tension","convertAmount","toFixed","handleAmountChange","handleDateChange","LanguageSelector","className","children","lang","onClick","languages","fileName","_jsxFileName","lineNumber","columnNumber","chartOptions","responsive","plugins","legend","position","title","display","text","scales","y","beginAtZero","ref","type","onChange","onFocus","placeholder","selectCurrency","readOnly","convertedAmount","to","options","popularCurrencies","_c","$RefreshReg$"],"sources":["E:/Mini-project/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n} from 'chart.js';\nimport { translations } from './translations';\nimport './styles.css';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst CURRENCY_INFO = {\n  USD: { flag: \"🇺🇸\", name: \"US Dollar\" },\n  EUR: { flag: \"🇪🇺\", name: \"Euro\" },\n  GBP: { flag: \"🇬🇧\", name: \"British Pound\" },\n  JPY: { flag: \"🇯🇵\", name: \"Japanese Yen\" },\n  AUD: { flag: \"🇦🇺\", name: \"Australian Dollar\" },\n  CAD: { flag: \"🇨🇦\", name: \"Canadian Dollar\" },\n  CHF: { flag: \"🇨🇭\", name: \"Swiss Franc\" },\n  CNY: { flag: \"🇨🇳\", name: \"Chinese Yuan\" },\n  HKD: { flag: \"🇭🇰\", name: \"Hong Kong Dollar\" },\n  NZD: { flag: \"🇳🇿\", name: \"New Zealand Dollar\" },\n  AED: { flag: \"🇦🇪\", name: \"UAE Dirham\" },\n  INR: { flag: \"🇮🇳\", name: \"Indian Rupee\" },\n  SGD: { flag: \"🇸🇬\", name: \"Singapore Dollar\" },\n  MXN: { flag: \"🇲🇽\", name: \"Mexican Peso\" },\n  BRL: { flag: \"🇧🇷\", name: \"Brazilian Real\" }\n};\n\nfunction App() {\n  const [fromCurrency, setFromCurrency] = useState('USD');\n  const [toCurrency, setToCurrency] = useState('EUR');\n  const [amount, setAmount] = useState(1);\n  const [exchangeRate, setExchangeRate] = useState(null);\n  const [lastUpdated, setLastUpdated] = useState('');\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]);\n  const [historicalRates, setHistoricalRates] = useState([]);\n  const [fromInput, setFromInput] = useState('');\n  const [toInput, setToInput] = useState('');\n  const [showFromDropdown, setShowFromDropdown] = useState(false);\n  const [showToDropdown, setShowToDropdown] = useState(false);\n  const [currentLanguage, setCurrentLanguage] = useState('en');\n  const [currencyRates, setCurrencyRates] = useState({});\n\n  const t = translations[currentLanguage];\n  const fromDropdownRef = useRef(null);\n  const toDropdownRef = useRef(null);\n\n  // Filter currencies based on input\n  const filterCurrencies = (input) => {\n    if (!input) return Object.keys(CURRENCY_INFO);\n    const searchTerm = input.toLowerCase();\n    return Object.entries(CURRENCY_INFO)\n      .filter(([code, info]) => \n        code.toLowerCase().includes(searchTerm) || \n        info.name.toLowerCase().includes(searchTerm)\n      )\n      .map(([code]) => code);\n  };\n\n  // Updated input handlers\n  const handleFromInputChange = (e) => {\n    const value = e.target.value;\n    setFromInput(value);\n    setShowFromDropdown(true);\n  };\n\n  const handleToInputChange = (e) => {\n    const value = e.target.value;\n    setToInput(value);\n    setShowToDropdown(true);\n  };\n\n  // Updated currency select handlers\n  const handleFromCurrencySelect = (currency) => {\n    setFromCurrency(currency);\n    setFromInput(`${CURRENCY_INFO[currency].flag} ${currency} - ${CURRENCY_INFO[currency].name}`);\n    setShowFromDropdown(false);\n  };\n\n  const handleToCurrencySelect = (currency) => {\n    setToCurrency(currency);\n    setToInput(`${CURRENCY_INFO[currency].flag} ${currency} - ${CURRENCY_INFO[currency].name}`);\n    setShowToDropdown(false);\n  };\n\n  // 其余的现有函数保持不变\n  const handleExchange = () => {\n    const tempCurrency = fromCurrency;\n    setFromCurrency(toCurrency);\n    setToCurrency(tempCurrency);\n    \n    const tempInput = fromInput;\n    setFromInput(toInput);\n    setToInput(tempInput);\n  };\n\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (fromDropdownRef.current && !fromDropdownRef.current.contains(event.target)) {\n        setShowFromDropdown(false);\n      }\n      if (toDropdownRef.current && !toDropdownRef.current.contains(event.target)) {\n        setShowToDropdown(false);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n\n  useEffect(() => {\n    fetchExchangeRate();\n    fetchHistoricalRates();\n    fetchAllRates();\n  }, [fromCurrency, toCurrency, selectedDate]);\n\n  const fetchAllRates = async () => {\n    try {\n      const response = await fetch(`https://v6.exchangerate-api.com/v6/dd875ed8009b2e791ff987e6/latest/USD`);\n      const data = await response.json();\n      setCurrencyRates(data.conversion_rates);\n    } catch (error) {\n      console.error('Error fetching all rates:', error);\n    }\n  };\n\n  const fetchExchangeRate = async () => {\n    try {\n      const response = await fetch(`https://v6.exchangerate-api.com/v6/dd875ed8009b2e791ff987e6/latest/${fromCurrency}`);\n      const data = await response.json();\n      setExchangeRate(data.conversion_rates[toCurrency]);\n      setLastUpdated(new Date().toLocaleString());\n    } catch (error) {\n      console.error('Error fetching exchange rate:', error);\n    }\n  };\n\n  const fetchHistoricalRates = async () => {\n    try {\n      const dates = [];\n      const rates = [];\n      const endDate = new Date();\n      const startDate = new Date();\n      startDate.setMonth(startDate.getMonth() - 1);\n\n      for (let d = startDate; d <= endDate; d.setDate(d.getDate() + 5)) {\n        const dateStr = d.toISOString().split('T')[0];\n        const response = await fetch(`https://v6.exchangerate-api.com/v6/dd875ed8009b2e791ff987e6/latest/${fromCurrency}`);\n        const data = await response.json();\n        dates.push(dateStr);\n        rates.push(data.conversion_rates[toCurrency]);\n      }\n\n      setHistoricalRates({\n        labels: dates,\n        datasets: [\n          {\n            label: `${fromCurrency} to ${toCurrency}`,\n            data: rates,\n            fill: false,\n            borderColor: 'rgb(75, 192, 192)',\n            tension: 0.1\n          }\n        ]\n      });\n    } catch (error) {\n      console.error('Error fetching historical rates:', error);\n    }\n  };\n\n  const convertAmount = () => {\n    if (exchangeRate === null) return '';\n    return (amount * exchangeRate).toFixed(2);\n  };\n\n  const handleAmountChange = (e) => {\n    setAmount(e.target.value);\n  };\n\n  const handleDateChange = (e) => {\n    setSelectedDate(e.target.value);\n  };\n\n  const LanguageSelector = () => (\n    <div className=\"language-selector\">\n      {Object.keys(translations).map((lang) => (\n        <button\n          key={lang}\n          className={`language-button ${currentLanguage === lang ? 'active' : ''}`}\n          onClick={() => setCurrentLanguage(lang)}\n        >\n          {translations[lang].languages[lang]}\n        </button>\n      ))}\n    </div>\n  );\n\n  const chartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top',\n      },\n      title: {\n        display: true,\n        text: 'Exchange Rate Trend'\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: false\n      }\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <LanguageSelector />\n      <h1>{t.title}</h1>\n      \n      <div className=\"main-container\">\n        <div className=\"left-panel\">\n          <div className=\"converter-container\">\n            <div className=\"currency-inputs\">\n              <div className=\"currency-row\">\n                <div className=\"currency-input\">\n                  <div className=\"currency-select\" ref={fromDropdownRef}>\n                    <input\n                      type=\"text\"\n                      value={fromInput}\n                      onChange={handleFromInputChange}\n                      onFocus={() => setShowFromDropdown(true)}\n                      placeholder={t.selectCurrency}\n                    />\n                    {showFromDropdown && (\n                      <div className=\"currency-dropdown\">\n                        {filterCurrencies(fromInput).map(currency => (\n                          <div\n                            key={currency}\n                            className=\"currency-option\"\n                            onClick={() => handleFromCurrencySelect(currency)}\n                          >\n                            {CURRENCY_INFO[currency].flag} {currency} - {CURRENCY_INFO[currency].name}\n                          </div>\n                        ))}\n                      </div>\n                    )}\n                  </div>\n                </div>\n\n                <button className=\"exchange-button\" onClick={handleExchange}>\n                  <span className=\"exchange-icon\">⇄</span>\n                </button>\n                \n                <div className=\"currency-input\">\n                  <div className=\"currency-select\" ref={toDropdownRef}>\n                    <input\n                      type=\"text\"\n                      value={toInput}\n                      onChange={handleToInputChange}\n                      onFocus={() => setShowToDropdown(true)}\n                      placeholder={t.selectCurrency}\n                    />\n                    {showToDropdown && (\n                      <div className=\"currency-dropdown\">\n                        {filterCurrencies(toInput).map(currency => (\n                          <div\n                            key={currency}\n                            className=\"currency-option\"\n                            onClick={() => handleToCurrencySelect(currency)}\n                          >\n                            {CURRENCY_INFO[currency].flag} {currency} - {CURRENCY_INFO[currency].name}\n                          </div>\n                        ))}\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"amount-row\">\n                <div className=\"amount-input\">\n                  <input\n                    type=\"number\"\n                    value={amount}\n                    onChange={handleAmountChange}\n                    placeholder={t.amount}\n                  />\n                </div>\n                <div className=\"amount-result\">\n                  <input\n                    type=\"text\"\n                    value={convertAmount()}\n                    readOnly\n                    placeholder={t.convertedAmount}\n                  />\n                </div>\n              </div>\n\n              <div className=\"date-row\">\n                <div className=\"date-input\">\n                  <input\n                    type=\"date\"\n                    value={selectedDate}\n                    onChange={handleDateChange}\n                  />\n                </div>\n                <span className=\"last-updated\">\n                  {t.lastUpdated}: {lastUpdated}\n                </span>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"chart-container\">\n            <h2>{t.historicalRates}: {fromCurrency} {t.to} {toCurrency}</h2>\n            {historicalRates.datasets && (\n              <Line data={historicalRates} options={chartOptions} />\n            )}\n          </div>\n        </div>\n\n        <div className=\"watchlist-container\">\n          <h2>{t.popularCurrencies}</h2>\n          <div className=\"watchlist\">\n            {Object.keys(CURRENCY_INFO).map(currency => (\n              <div key={currency} className=\"watchlist-item\">\n                <span className=\"currency-flag\">{CURRENCY_INFO[currency].flag}</span>\n                <span className=\"currency-code\">{currency}</span>\n                <span className=\"currency-name\">{CURRENCY_INFO[currency].name}</span>\n                <span className=\"currency-rate\">\n                  {currencyRates[currency] ? \n                    `1 USD = ${currencyRates[currency].toFixed(4)} ${currency}` \n                    : 'Loading...'}\n                </span>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,IAAI,QAAQ,iBAAiB;AACtC,SACEC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,QACD,UAAU;AACjB,SAASC,YAAY,QAAQ,gBAAgB;AAC7C,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtBV,OAAO,CAACW,QAAQ,CACdV,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MACF,CAAC;AAED,MAAMK,aAAa,GAAG;EACpBC,GAAG,EAAE;IAAEC,IAAI,EAAE,MAAM;IAAEC,IAAI,EAAE;EAAY,CAAC;EACxCC,GAAG,EAAE;IAAEF,IAAI,EAAE,MAAM;IAAEC,IAAI,EAAE;EAAO,CAAC;EACnCE,GAAG,EAAE;IAAEH,IAAI,EAAE,MAAM;IAAEC,IAAI,EAAE;EAAgB,CAAC;EAC5CG,GAAG,EAAE;IAAEJ,IAAI,EAAE,MAAM;IAAEC,IAAI,EAAE;EAAe,CAAC;EAC3CI,GAAG,EAAE;IAAEL,IAAI,EAAE,MAAM;IAAEC,IAAI,EAAE;EAAoB,CAAC;EAChDK,GAAG,EAAE;IAAEN,IAAI,EAAE,MAAM;IAAEC,IAAI,EAAE;EAAkB,CAAC;EAC9CM,GAAG,EAAE;IAAEP,IAAI,EAAE,MAAM;IAAEC,IAAI,EAAE;EAAc,CAAC;EAC1CO,GAAG,EAAE;IAAER,IAAI,EAAE,MAAM;IAAEC,IAAI,EAAE;EAAe,CAAC;EAC3CQ,GAAG,EAAE;IAAET,IAAI,EAAE,MAAM;IAAEC,IAAI,EAAE;EAAmB,CAAC;EAC/CS,GAAG,EAAE;IAAEV,IAAI,EAAE,MAAM;IAAEC,IAAI,EAAE;EAAqB,CAAC;EACjDU,GAAG,EAAE;IAAEX,IAAI,EAAE,MAAM;IAAEC,IAAI,EAAE;EAAa,CAAC;EACzCW,GAAG,EAAE;IAAEZ,IAAI,EAAE,MAAM;IAAEC,IAAI,EAAE;EAAe,CAAC;EAC3CY,GAAG,EAAE;IAAEb,IAAI,EAAE,MAAM;IAAEC,IAAI,EAAE;EAAmB,CAAC;EAC/Ca,GAAG,EAAE;IAAEd,IAAI,EAAE,MAAM;IAAEC,IAAI,EAAE;EAAe,CAAC;EAC3Cc,GAAG,EAAE;IAAEf,IAAI,EAAE,MAAM;IAAEC,IAAI,EAAE;EAAiB;AAC9C,CAAC;AAED,SAASe,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGtC,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACuC,UAAU,EAAEC,aAAa,CAAC,GAAGxC,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACyC,MAAM,EAAEC,SAAS,CAAC,GAAG1C,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAAC2C,YAAY,EAAEC,eAAe,CAAC,GAAG5C,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAAC6C,WAAW,EAAEC,cAAc,CAAC,GAAG9C,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAAC+C,YAAY,EAAEC,eAAe,CAAC,GAAGhD,QAAQ,CAAC,IAAIiD,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACxF,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGrD,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACsD,SAAS,EAAEC,YAAY,CAAC,GAAGvD,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACwD,OAAO,EAAEC,UAAU,CAAC,GAAGzD,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAAC0D,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG3D,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAAC4D,cAAc,EAAEC,iBAAiB,CAAC,GAAG7D,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAAC8D,eAAe,EAAEC,kBAAkB,CAAC,GAAG/D,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACgE,aAAa,EAAEC,gBAAgB,CAAC,GAAGjE,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEtD,MAAMkE,CAAC,GAAGrD,YAAY,CAACiD,eAAe,CAAC;EACvC,MAAMK,eAAe,GAAGjE,MAAM,CAAC,IAAI,CAAC;EACpC,MAAMkE,aAAa,GAAGlE,MAAM,CAAC,IAAI,CAAC;;EAElC;EACA,MAAMmE,gBAAgB,GAAIC,KAAK,IAAK;IAClC,IAAI,CAACA,KAAK,EAAE,OAAOC,MAAM,CAACC,IAAI,CAACvD,aAAa,CAAC;IAC7C,MAAMwD,UAAU,GAAGH,KAAK,CAACI,WAAW,CAAC,CAAC;IACtC,OAAOH,MAAM,CAACI,OAAO,CAAC1D,aAAa,CAAC,CACjC2D,MAAM,CAACC,IAAA;MAAA,IAAC,CAACC,IAAI,EAAEC,IAAI,CAAC,GAAAF,IAAA;MAAA,OACnBC,IAAI,CAACJ,WAAW,CAAC,CAAC,CAACM,QAAQ,CAACP,UAAU,CAAC,IACvCM,IAAI,CAAC3D,IAAI,CAACsD,WAAW,CAAC,CAAC,CAACM,QAAQ,CAACP,UAAU,CAAC;IAAA,CAC9C,CAAC,CACAQ,GAAG,CAACC,KAAA;MAAA,IAAC,CAACJ,IAAI,CAAC,GAAAI,KAAA;MAAA,OAAKJ,IAAI;IAAA,EAAC;EAC1B,CAAC;;EAED;EACA,MAAMK,qBAAqB,GAAIC,CAAC,IAAK;IACnC,MAAMC,KAAK,GAAGD,CAAC,CAACE,MAAM,CAACD,KAAK;IAC5B9B,YAAY,CAAC8B,KAAK,CAAC;IACnB1B,mBAAmB,CAAC,IAAI,CAAC;EAC3B,CAAC;EAED,MAAM4B,mBAAmB,GAAIH,CAAC,IAAK;IACjC,MAAMC,KAAK,GAAGD,CAAC,CAACE,MAAM,CAACD,KAAK;IAC5B5B,UAAU,CAAC4B,KAAK,CAAC;IACjBxB,iBAAiB,CAAC,IAAI,CAAC;EACzB,CAAC;;EAED;EACA,MAAM2B,wBAAwB,GAAIC,QAAQ,IAAK;IAC7CnD,eAAe,CAACmD,QAAQ,CAAC;IACzBlC,YAAY,CAAC,GAAGtC,aAAa,CAACwE,QAAQ,CAAC,CAACtE,IAAI,IAAIsE,QAAQ,MAAMxE,aAAa,CAACwE,QAAQ,CAAC,CAACrE,IAAI,EAAE,CAAC;IAC7FuC,mBAAmB,CAAC,KAAK,CAAC;EAC5B,CAAC;EAED,MAAM+B,sBAAsB,GAAID,QAAQ,IAAK;IAC3CjD,aAAa,CAACiD,QAAQ,CAAC;IACvBhC,UAAU,CAAC,GAAGxC,aAAa,CAACwE,QAAQ,CAAC,CAACtE,IAAI,IAAIsE,QAAQ,MAAMxE,aAAa,CAACwE,QAAQ,CAAC,CAACrE,IAAI,EAAE,CAAC;IAC3FyC,iBAAiB,CAAC,KAAK,CAAC;EAC1B,CAAC;;EAED;EACA,MAAM8B,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMC,YAAY,GAAGvD,YAAY;IACjCC,eAAe,CAACC,UAAU,CAAC;IAC3BC,aAAa,CAACoD,YAAY,CAAC;IAE3B,MAAMC,SAAS,GAAGvC,SAAS;IAC3BC,YAAY,CAACC,OAAO,CAAC;IACrBC,UAAU,CAACoC,SAAS,CAAC;EACvB,CAAC;EAED5F,SAAS,CAAC,MAAM;IACd,MAAM6F,kBAAkB,GAAIC,KAAK,IAAK;MACpC,IAAI5B,eAAe,CAAC6B,OAAO,IAAI,CAAC7B,eAAe,CAAC6B,OAAO,CAACC,QAAQ,CAACF,KAAK,CAACT,MAAM,CAAC,EAAE;QAC9E3B,mBAAmB,CAAC,KAAK,CAAC;MAC5B;MACA,IAAIS,aAAa,CAAC4B,OAAO,IAAI,CAAC5B,aAAa,CAAC4B,OAAO,CAACC,QAAQ,CAACF,KAAK,CAACT,MAAM,CAAC,EAAE;QAC1EzB,iBAAiB,CAAC,KAAK,CAAC;MAC1B;IACF,CAAC;IAEDqC,QAAQ,CAACC,gBAAgB,CAAC,WAAW,EAAEL,kBAAkB,CAAC;IAC1D,OAAO,MAAM;MACXI,QAAQ,CAACE,mBAAmB,CAAC,WAAW,EAAEN,kBAAkB,CAAC;IAC/D,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN7F,SAAS,CAAC,MAAM;IACdoG,iBAAiB,CAAC,CAAC;IACnBC,oBAAoB,CAAC,CAAC;IACtBC,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAAClE,YAAY,EAAEE,UAAU,EAAEQ,YAAY,CAAC,CAAC;EAE5C,MAAMwD,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wEAAwE,CAAC;MACtG,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClC1C,gBAAgB,CAACyC,IAAI,CAACE,gBAAgB,CAAC;IACzC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EAED,MAAMR,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,sEAAsEpE,YAAY,EAAE,CAAC;MAClH,MAAMqE,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClC/D,eAAe,CAAC8D,IAAI,CAACE,gBAAgB,CAACrE,UAAU,CAAC,CAAC;MAClDO,cAAc,CAAC,IAAIG,IAAI,CAAC,CAAC,CAAC8D,cAAc,CAAC,CAAC,CAAC;IAC7C,CAAC,CAAC,OAAOF,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACvD;EACF,CAAC;EAED,MAAMP,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACvC,IAAI;MACF,MAAMU,KAAK,GAAG,EAAE;MAChB,MAAMC,KAAK,GAAG,EAAE;MAChB,MAAMC,OAAO,GAAG,IAAIjE,IAAI,CAAC,CAAC;MAC1B,MAAMkE,SAAS,GAAG,IAAIlE,IAAI,CAAC,CAAC;MAC5BkE,SAAS,CAACC,QAAQ,CAACD,SAAS,CAACE,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;MAE5C,KAAK,IAAIC,CAAC,GAAGH,SAAS,EAAEG,CAAC,IAAIJ,OAAO,EAAEI,CAAC,CAACC,OAAO,CAACD,CAAC,CAACE,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE;QAChE,MAAMC,OAAO,GAAGH,CAAC,CAACpE,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAC7C,MAAMqD,QAAQ,GAAG,MAAMC,KAAK,CAAC,sEAAsEpE,YAAY,EAAE,CAAC;QAClH,MAAMqE,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCK,KAAK,CAACU,IAAI,CAACD,OAAO,CAAC;QACnBR,KAAK,CAACS,IAAI,CAAChB,IAAI,CAACE,gBAAgB,CAACrE,UAAU,CAAC,CAAC;MAC/C;MAEAc,kBAAkB,CAAC;QACjBsE,MAAM,EAAEX,KAAK;QACbY,QAAQ,EAAE,CACR;UACEC,KAAK,EAAE,GAAGxF,YAAY,OAAOE,UAAU,EAAE;UACzCmE,IAAI,EAAEO,KAAK;UACXa,IAAI,EAAE,KAAK;UACXC,WAAW,EAAE,mBAAmB;UAChCC,OAAO,EAAE;QACX,CAAC;MAEL,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOnB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IAC1D;EACF,CAAC;EAED,MAAMoB,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAItF,YAAY,KAAK,IAAI,EAAE,OAAO,EAAE;IACpC,OAAO,CAACF,MAAM,GAAGE,YAAY,EAAEuF,OAAO,CAAC,CAAC,CAAC;EAC3C,CAAC;EAED,MAAMC,kBAAkB,GAAI/C,CAAC,IAAK;IAChC1C,SAAS,CAAC0C,CAAC,CAACE,MAAM,CAACD,KAAK,CAAC;EAC3B,CAAC;EAED,MAAM+C,gBAAgB,GAAIhD,CAAC,IAAK;IAC9BpC,eAAe,CAACoC,CAAC,CAACE,MAAM,CAACD,KAAK,CAAC;EACjC,CAAC;EAED,MAAMgD,gBAAgB,GAAGA,CAAA,kBACvBtH,OAAA;IAAKuH,SAAS,EAAC,mBAAmB;IAAAC,QAAA,EAC/BhE,MAAM,CAACC,IAAI,CAAC3D,YAAY,CAAC,CAACoE,GAAG,CAAEuD,IAAI,iBAClCzH,OAAA;MAEEuH,SAAS,EAAE,mBAAmBxE,eAAe,KAAK0E,IAAI,GAAG,QAAQ,GAAG,EAAE,EAAG;MACzEC,OAAO,EAAEA,CAAA,KAAM1E,kBAAkB,CAACyE,IAAI,CAAE;MAAAD,QAAA,EAEvC1H,YAAY,CAAC2H,IAAI,CAAC,CAACE,SAAS,CAACF,IAAI;IAAC,GAJ9BA,IAAI;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKH,CACT;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CACN;EAED,MAAMC,YAAY,GAAG;IACnBC,UAAU,EAAE,IAAI;IAChBC,OAAO,EAAE;MACPC,MAAM,EAAE;QACNC,QAAQ,EAAE;MACZ,CAAC;MACDC,KAAK,EAAE;QACLC,OAAO,EAAE,IAAI;QACbC,IAAI,EAAE;MACR;IACF,CAAC;IACDC,MAAM,EAAE;MACNC,CAAC,EAAE;QACDC,WAAW,EAAE;MACf;IACF;EACF,CAAC;EAED,oBACE1I,OAAA;IAAKuH,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBxH,OAAA,CAACsH,gBAAgB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACpB/H,OAAA;MAAAwH,QAAA,EAAKrE,CAAC,CAACkF;IAAK;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAElB/H,OAAA;MAAKuH,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7BxH,OAAA;QAAKuH,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzBxH,OAAA;UAAKuH,SAAS,EAAC,qBAAqB;UAAAC,QAAA,eAClCxH,OAAA;YAAKuH,SAAS,EAAC,iBAAiB;YAAAC,QAAA,gBAC9BxH,OAAA;cAAKuH,SAAS,EAAC,cAAc;cAAAC,QAAA,gBAC3BxH,OAAA;gBAAKuH,SAAS,EAAC,gBAAgB;gBAAAC,QAAA,eAC7BxH,OAAA;kBAAKuH,SAAS,EAAC,iBAAiB;kBAACoB,GAAG,EAAEvF,eAAgB;kBAAAoE,QAAA,gBACpDxH,OAAA;oBACE4I,IAAI,EAAC,MAAM;oBACXtE,KAAK,EAAE/B,SAAU;oBACjBsG,QAAQ,EAAEzE,qBAAsB;oBAChC0E,OAAO,EAAEA,CAAA,KAAMlG,mBAAmB,CAAC,IAAI,CAAE;oBACzCmG,WAAW,EAAE5F,CAAC,CAAC6F;kBAAe;oBAAApB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC/B,CAAC,EACDpF,gBAAgB,iBACf3C,OAAA;oBAAKuH,SAAS,EAAC,mBAAmB;oBAAAC,QAAA,EAC/BlE,gBAAgB,CAACf,SAAS,CAAC,CAAC2B,GAAG,CAACQ,QAAQ,iBACvC1E,OAAA;sBAEEuH,SAAS,EAAC,iBAAiB;sBAC3BG,OAAO,EAAEA,CAAA,KAAMjD,wBAAwB,CAACC,QAAQ,CAAE;sBAAA8C,QAAA,GAEjDtH,aAAa,CAACwE,QAAQ,CAAC,CAACtE,IAAI,EAAC,GAAC,EAACsE,QAAQ,EAAC,KAAG,EAACxE,aAAa,CAACwE,QAAQ,CAAC,CAACrE,IAAI;oBAAA,GAJpEqE,QAAQ;sBAAAkD,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAKV,CACN;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACC,CACN;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC,eAEN/H,OAAA;gBAAQuH,SAAS,EAAC,iBAAiB;gBAACG,OAAO,EAAE9C,cAAe;gBAAA4C,QAAA,eAC1DxH,OAAA;kBAAMuH,SAAS,EAAC,eAAe;kBAAAC,QAAA,EAAC;gBAAC;kBAAAI,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAClC,CAAC,eAET/H,OAAA;gBAAKuH,SAAS,EAAC,gBAAgB;gBAAAC,QAAA,eAC7BxH,OAAA;kBAAKuH,SAAS,EAAC,iBAAiB;kBAACoB,GAAG,EAAEtF,aAAc;kBAAAmE,QAAA,gBAClDxH,OAAA;oBACE4I,IAAI,EAAC,MAAM;oBACXtE,KAAK,EAAE7B,OAAQ;oBACfoG,QAAQ,EAAErE,mBAAoB;oBAC9BsE,OAAO,EAAEA,CAAA,KAAMhG,iBAAiB,CAAC,IAAI,CAAE;oBACvCiG,WAAW,EAAE5F,CAAC,CAAC6F;kBAAe;oBAAApB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC/B,CAAC,EACDlF,cAAc,iBACb7C,OAAA;oBAAKuH,SAAS,EAAC,mBAAmB;oBAAAC,QAAA,EAC/BlE,gBAAgB,CAACb,OAAO,CAAC,CAACyB,GAAG,CAACQ,QAAQ,iBACrC1E,OAAA;sBAEEuH,SAAS,EAAC,iBAAiB;sBAC3BG,OAAO,EAAEA,CAAA,KAAM/C,sBAAsB,CAACD,QAAQ,CAAE;sBAAA8C,QAAA,GAE/CtH,aAAa,CAACwE,QAAQ,CAAC,CAACtE,IAAI,EAAC,GAAC,EAACsE,QAAQ,EAAC,KAAG,EAACxE,aAAa,CAACwE,QAAQ,CAAC,CAACrE,IAAI;oBAAA,GAJpEqE,QAAQ;sBAAAkD,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAKV,CACN;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACC,CACN;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eAEN/H,OAAA;cAAKuH,SAAS,EAAC,YAAY;cAAAC,QAAA,gBACzBxH,OAAA;gBAAKuH,SAAS,EAAC,cAAc;gBAAAC,QAAA,eAC3BxH,OAAA;kBACE4I,IAAI,EAAC,QAAQ;kBACbtE,KAAK,EAAE5C,MAAO;kBACdmH,QAAQ,EAAEzB,kBAAmB;kBAC7B2B,WAAW,EAAE5F,CAAC,CAACzB;gBAAO;kBAAAkG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACvB;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC,CAAC,eACN/H,OAAA;gBAAKuH,SAAS,EAAC,eAAe;gBAAAC,QAAA,eAC5BxH,OAAA;kBACE4I,IAAI,EAAC,MAAM;kBACXtE,KAAK,EAAE4C,aAAa,CAAC,CAAE;kBACvB+B,QAAQ;kBACRF,WAAW,EAAE5F,CAAC,CAAC+F;gBAAgB;kBAAAtB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAChC;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eAEN/H,OAAA;cAAKuH,SAAS,EAAC,UAAU;cAAAC,QAAA,gBACvBxH,OAAA;gBAAKuH,SAAS,EAAC,YAAY;gBAAAC,QAAA,eACzBxH,OAAA;kBACE4I,IAAI,EAAC,MAAM;kBACXtE,KAAK,EAAEtC,YAAa;kBACpB6G,QAAQ,EAAExB;gBAAiB;kBAAAO,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC5B;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC,CAAC,eACN/H,OAAA;gBAAMuH,SAAS,EAAC,cAAc;gBAAAC,QAAA,GAC3BrE,CAAC,CAACrB,WAAW,EAAC,IAAE,EAACA,WAAW;cAAA;gBAAA8F,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACzB,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAEN/H,OAAA;UAAKuH,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBAC9BxH,OAAA;YAAAwH,QAAA,GAAKrE,CAAC,CAACd,eAAe,EAAC,IAAE,EAACf,YAAY,EAAC,GAAC,EAAC6B,CAAC,CAACgG,EAAE,EAAC,GAAC,EAAC3H,UAAU;UAAA;YAAAoG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,EAC/D1F,eAAe,CAACwE,QAAQ,iBACvB7G,OAAA,CAACZ,IAAI;YAACuG,IAAI,EAAEtD,eAAgB;YAAC+G,OAAO,EAAEpB;UAAa;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CACtD;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAEN/H,OAAA;QAAKuH,SAAS,EAAC,qBAAqB;QAAAC,QAAA,gBAClCxH,OAAA;UAAAwH,QAAA,EAAKrE,CAAC,CAACkG;QAAiB;UAAAzB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC9B/H,OAAA;UAAKuH,SAAS,EAAC,WAAW;UAAAC,QAAA,EACvBhE,MAAM,CAACC,IAAI,CAACvD,aAAa,CAAC,CAACgE,GAAG,CAACQ,QAAQ,iBACtC1E,OAAA;YAAoBuH,SAAS,EAAC,gBAAgB;YAAAC,QAAA,gBAC5CxH,OAAA;cAAMuH,SAAS,EAAC,eAAe;cAAAC,QAAA,EAAEtH,aAAa,CAACwE,QAAQ,CAAC,CAACtE;YAAI;cAAAwH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACrE/H,OAAA;cAAMuH,SAAS,EAAC,eAAe;cAAAC,QAAA,EAAE9C;YAAQ;cAAAkD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACjD/H,OAAA;cAAMuH,SAAS,EAAC,eAAe;cAAAC,QAAA,EAAEtH,aAAa,CAACwE,QAAQ,CAAC,CAACrE;YAAI;cAAAuH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACrE/H,OAAA;cAAMuH,SAAS,EAAC,eAAe;cAAAC,QAAA,EAC5BvE,aAAa,CAACyB,QAAQ,CAAC,GACtB,WAAWzB,aAAa,CAACyB,QAAQ,CAAC,CAACyC,OAAO,CAAC,CAAC,CAAC,IAAIzC,QAAQ,EAAE,GACzD;YAAY;cAAAkD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACZ,CAAC;UAAA,GARCrD,QAAQ;YAAAkD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OASb,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC1G,EAAA,CA5TQD,GAAG;AAAAkI,EAAA,GAAHlI,GAAG;AA8TZ,eAAeA,GAAG;AAAC,IAAAkI,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}